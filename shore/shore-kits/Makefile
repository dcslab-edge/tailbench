# Makefile.in generated by automake 1.15 from Makefile.am.
# Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# -*- makefile -*-



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/this_is_shore_kits
pkgincludedir = $(includedir)/this_is_shore_kits
pkglibdir = $(libdir)/this_is_shore_kits
pkglibexecdir = $(libexecdir)/this_is_shore_kits
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
am__append_1 = -I$(SHORE_SRC)/atomic_ops
#am__append_2 = -I$(SHORE_HOME)/../ppmcs

### -lmtmalloc <-- which malloc library will be included is responsibility of configure
am__append_3 = $(SHORE_SRC)/atomic_ops/libatomic_ops.a
#am__append_4 = $(SHORE_HOME)/../ppmcs/libppmcs.a
bin_PROGRAMS = $(am__EXEEXT_1)
#am__append_5 = $(SU)/sunos_procstat.cpp \
#        $(SU)/prcinfo.cpp

am__append_6 = $(SU)/linux_procstat.cpp \
        $(SU)/topinfo.cpp

#am__append_7 = $(WL_TPCH_QPIPE) $(WL_SSB_QPIPE) \
#	$(WL_SSB_DBGEN_SHORE) $(WL_SSB_SHORE)
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"
LIBRARIES = $(lib_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
lib_libdora_a_AR = $(AR) $(ARFLAGS)
lib_libdora_a_LIBADD =
am__lib_libdora_a_SOURCES_DIST = $(SD)/dkey_ranges_map.cpp \
	$(SD)/base_action.cpp $(SD)/rvp.cpp $(SD)/logical_lock.cpp \
	$(SD)/base_partition.cpp $(SD)/partition.cpp \
	$(SD)/dflusher.cpp $(SD)/worker.cpp $(SD)/part_table.cpp \
	$(SD)/range_part_table.cpp $(SD)/dora_env.cpp
#am__objects_1 =  \
#	lib_libdora_a-dkey_ranges_map.$(OBJEXT) \
#	lib_libdora_a-base_action.$(OBJEXT) \
#	lib_libdora_a-rvp.$(OBJEXT) \
#	lib_libdora_a-logical_lock.$(OBJEXT) \
#	lib_libdora_a-base_partition.$(OBJEXT) \
#	lib_libdora_a-partition.$(OBJEXT) \
#	lib_libdora_a-dflusher.$(OBJEXT) \
#	lib_libdora_a-worker.$(OBJEXT) \
#	lib_libdora_a-part_table.$(OBJEXT) \
#	lib_libdora_a-range_part_table.$(OBJEXT) \
#	lib_libdora_a-dora_env.$(OBJEXT)
#am_lib_libdora_a_OBJECTS = $(am__objects_1)
lib_libdora_a_OBJECTS = $(am_lib_libdora_a_OBJECTS)
am__dirstamp = $(am__leading_dot)dirstamp
lib_libdoraworkload_a_AR = $(AR) $(ARFLAGS)
lib_libdoraworkload_a_LIBADD =
am__lib_libdoraworkload_a_SOURCES_DIST = $(SDW)/tpcc/dora_payment.cpp \
	$(SDW)/tpcc/dora_new_order.cpp \
	$(SDW)/tpcc/dora_order_status.cpp \
	$(SDW)/tpcc/dora_stock_level.cpp $(SDW)/tpcc/dora_delivery.cpp \
	$(SDW)/tpcc/dora_mbench.cpp $(SDW)/tpcc/dora_tpcc.cpp \
	$(SDW)/tpcc/dora_tpcc_xct.cpp $(SDW)/tpcc/dora_tpcc_client.cpp \
	$(SDW)/tm1/dora_tm1_impl.cpp $(SDW)/tm1/dora_tm1.cpp \
	$(SDW)/tm1/dora_tm1_xct.cpp $(SDW)/tm1/dora_tm1_client.cpp \
	$(SDW)/tpcb/dora_tpcb_impl.cpp $(SDW)/tpcb/dora_tpcb.cpp \
	$(SDW)/tpcb/dora_tpcb_xct.cpp $(SDW)/tpcb/dora_tpcb_client.cpp
#am__objects_2 = dora_payment.$(OBJEXT) \
#	dora_new_order.$(OBJEXT) \
#	dora_order_status.$(OBJEXT) \
#	dora_stock_level.$(OBJEXT) \
#	dora_delivery.$(OBJEXT) dora_mbench.$(OBJEXT) \
#	dora_tpcc.$(OBJEXT) dora_tpcc_xct.$(OBJEXT) \
#	dora_tpcc_client.$(OBJEXT)
#am__objects_3 = dora_tm1_impl.$(OBJEXT) \
#	dora_tm1.$(OBJEXT) dora_tm1_xct.$(OBJEXT) \
#	dora_tm1_client.$(OBJEXT)
#am__objects_4 = dora_tpcb_impl.$(OBJEXT) \
#	dora_tpcb.$(OBJEXT) dora_tpcb_xct.$(OBJEXT) \
#	dora_tpcb_client.$(OBJEXT)
#am_lib_libdoraworkload_a_OBJECTS = $(am__objects_2) \
#	$(am__objects_3) $(am__objects_4)
lib_libdoraworkload_a_OBJECTS = $(am_lib_libdoraworkload_a_OBJECTS)
lib_libqpipe_a_AR = $(AR) $(ARFLAGS)
lib_libqpipe_a_LIBADD =
am__lib_libqpipe_a_SOURCES_DIST = $(SQP)/scheduler/cpu_set.cpp \
	$(SQP)/scheduler/cpu.cpp $(SQP)/core/tuple_fifo_directory.cpp \
	$(SQP)/core/stage_container.cpp $(SQP)/core/dispatcher.cpp \
	$(SQP)/core/packet.cpp $(SQP)/core/tuple.cpp \
	$(SQP)/core/tuple_fifo.cpp $(SQP)/stages/merge.cpp \
	$(SQP)/stages/bnl_in.cpp $(SQP)/stages/hash_join.cpp \
	$(SQP)/stages/partial_aggregate.cpp $(SQP)/stages/tscan.cpp \
	$(SQP)/stages/fdump.cpp $(SQP)/stages/sieve.cpp \
	$(SQP)/stages/echo.cpp $(SQP)/stages/pipe_hash_join.cpp \
	$(SQP)/stages/aggregate.cpp $(SQP)/stages/sorted_in.cpp \
	$(SQP)/stages/func_call.cpp $(SQP)/stages/sort.cpp \
	$(SQP)/stages/hash_aggregate.cpp \
	$(SQP)/stages/delay_writer.cpp $(SQP)/stages/bnl_join.cpp \
	$(SQP)/stages/sort_merge_join.cpp $(SQP)/stages/fscan.cpp \
	$(SQP)/stages/register_stage_containers.cpp \
	$(SQP)/common/process_query.cpp $(SQP)/common/predicates.cpp
#am__objects_5 = cpu_set.$(OBJEXT) cpu.$(OBJEXT)
#am__objects_6 = tuple_fifo_directory.$(OBJEXT) \
#	stage_container.$(OBJEXT) dispatcher.$(OBJEXT) \
#	packet.$(OBJEXT) tuple.$(OBJEXT) \
#	tuple_fifo.$(OBJEXT)
#am__objects_7 = merge.$(OBJEXT) bnl_in.$(OBJEXT) \
#	hash_join.$(OBJEXT) \
#	partial_aggregate.$(OBJEXT) tscan.$(OBJEXT) \
#	fdump.$(OBJEXT) sieve.$(OBJEXT) echo.$(OBJEXT) \
#	pipe_hash_join.$(OBJEXT) aggregate.$(OBJEXT) \
#	sorted_in.$(OBJEXT) func_call.$(OBJEXT) \
#	sort.$(OBJEXT) hash_aggregate.$(OBJEXT) \
#	delay_writer.$(OBJEXT) bnl_join.$(OBJEXT) \
#	sort_merge_join.$(OBJEXT) fscan.$(OBJEXT) \
#	register_stage_containers.$(OBJEXT)
#am__objects_8 = process_query.$(OBJEXT) \
#	predicates.$(OBJEXT)
#am_lib_libqpipe_a_OBJECTS = $(am__objects_5) \
#	$(am__objects_6) $(am__objects_7) \
#	$(am__objects_8)
lib_libqpipe_a_OBJECTS = $(am_lib_libqpipe_a_OBJECTS)
lib_libqpipeutil_a_AR = $(AR) $(ARFLAGS)
lib_libqpipeutil_a_LIBADD =
am__lib_libqpipeutil_a_SOURCES_DIST = $(SU)/busy_delay.cpp \
	$(SU)/rio.cpp $(SU)/resource_pool.cpp \
	$(SU)/static_list_node.cpp $(SU)/static_list.cpp \
	$(SU)/fileops.cpp $(SU)/alignedops.cpp $(SU)/tmpfile.cpp \
	$(SU)/static_hash_map.cpp $(SU)/fnv.cpp
#am__objects_9 =  \
#	lib_libqpipeutil_a-busy_delay.$(OBJEXT) \
#	lib_libqpipeutil_a-rio.$(OBJEXT) \
#	lib_libqpipeutil_a-resource_pool.$(OBJEXT) \
#	lib_libqpipeutil_a-static_list_node.$(OBJEXT) \
#	lib_libqpipeutil_a-static_list.$(OBJEXT) \
#	lib_libqpipeutil_a-fileops.$(OBJEXT) \
#	lib_libqpipeutil_a-alignedops.$(OBJEXT) \
#	lib_libqpipeutil_a-tmpfile.$(OBJEXT) \
#	lib_libqpipeutil_a-static_hash_map.$(OBJEXT) \
#	lib_libqpipeutil_a-fnv.$(OBJEXT)
#am_lib_libqpipeutil_a_OBJECTS = $(am__objects_9)
lib_libqpipeutil_a_OBJECTS = $(am_lib_libqpipeutil_a_OBJECTS)
lib_libsm_a_AR = $(AR) $(ARFLAGS)
lib_libsm_a_LIBADD =
am__objects_10 = lib_libsm_a-shore_file_desc.$(OBJEXT) \
	lib_libsm_a-shore_field.$(OBJEXT) \
	lib_libsm_a-shore_table.$(OBJEXT) \
	lib_libsm_a-shore_row.$(OBJEXT) \
	lib_libsm_a-shore_index.$(OBJEXT) \
	lib_libsm_a-shore_asc_sort_buf.$(OBJEXT) \
	lib_libsm_a-shore_desc_sort_buf.$(OBJEXT) \
	lib_libsm_a-shore_reqs.$(OBJEXT) \
	lib_libsm_a-shore_flusher.$(OBJEXT) \
	lib_libsm_a-shore_env.$(OBJEXT) \
	lib_libsm_a-shore_helper_loader.$(OBJEXT) \
	lib_libsm_a-shore_client.$(OBJEXT) \
	lib_libsm_a-shore_worker.$(OBJEXT) \
	lib_libsm_a-shore_trx_worker.$(OBJEXT) \
	lib_libsm_a-shore_iter.$(OBJEXT) \
	lib_libsm_a-shore_shell.$(OBJEXT)
am_lib_libsm_a_OBJECTS = $(am__objects_10)
lib_libsm_a_OBJECTS = $(am_lib_libsm_a_OBJECTS)
lib_libutil_a_AR = $(AR) $(ARFLAGS)
lib_libutil_a_LIBADD =
am__lib_libutil_a_SOURCES_DIST = $(SU)/c_str.cpp $(SU)/thread.cpp \
	$(SU)/time_util.cpp $(SU)/trace.cpp $(SU)/chomp.cpp \
	$(SU)/progress.cpp $(SU)/pool_alloc.cpp $(SU)/store_string.cpp \
	$(SU)/history.cpp $(SU)/countdown.cpp $(SU)/confparser.cpp \
	$(SU)/envvar.cpp $(SU)/stl_pool.cpp $(SU)/random_input.cpp \
	$(SU)/shell.cpp $(SU)/tcp.cpp $(SU)/w_strlcpy.cpp \
	$(SU)/procstat.cpp $(SU)/skewer.cpp $(SU)/sunos_procstat.cpp \
	$(SU)/prcinfo.cpp $(SU)/linux_procstat.cpp $(SU)/topinfo.cpp \
	$(SU)/command/tracer.cpp $(SU)/command/printer.cpp
#am__objects_11 =  \
#	lib_libutil_a-sunos_procstat.$(OBJEXT) \
#	lib_libutil_a-prcinfo.$(OBJEXT)
am__objects_12 =  \
	lib_libutil_a-linux_procstat.$(OBJEXT) \
	lib_libutil_a-topinfo.$(OBJEXT)
am__objects_13 = lib_libutil_a-c_str.$(OBJEXT) \
	lib_libutil_a-thread.$(OBJEXT) \
	lib_libutil_a-time_util.$(OBJEXT) \
	lib_libutil_a-trace.$(OBJEXT) lib_libutil_a-chomp.$(OBJEXT) \
	lib_libutil_a-progress.$(OBJEXT) \
	lib_libutil_a-pool_alloc.$(OBJEXT) \
	lib_libutil_a-store_string.$(OBJEXT) \
	lib_libutil_a-history.$(OBJEXT) \
	lib_libutil_a-countdown.$(OBJEXT) \
	lib_libutil_a-confparser.$(OBJEXT) \
	lib_libutil_a-envvar.$(OBJEXT) \
	lib_libutil_a-stl_pool.$(OBJEXT) \
	lib_libutil_a-random_input.$(OBJEXT) \
	lib_libutil_a-shell.$(OBJEXT) lib_libutil_a-tcp.$(OBJEXT) \
	lib_libutil_a-w_strlcpy.$(OBJEXT) \
	lib_libutil_a-procstat.$(OBJEXT) \
	lib_libutil_a-skewer.$(OBJEXT) $(am__objects_11) \
	$(am__objects_12)
am__objects_14 = lib_libutil_a-tracer.$(OBJEXT) \
	lib_libutil_a-printer.$(OBJEXT)
am_lib_libutil_a_OBJECTS = $(am__objects_13) $(am__objects_14)
lib_libutil_a_OBJECTS = $(am_lib_libutil_a_OBJECTS)
lib_libworkload_a_AR = $(AR) $(ARFLAGS)
lib_libworkload_a_LIBADD =
am__lib_libworkload_a_SOURCES_DIST = $(SW)/tpcc/tpcc_random.cpp \
	$(SW)/tpcc/tpcc_input.cpp $(SW)/tpcc/shore_tpcc_schema.cpp \
	$(SW)/tpcc/shore_tpcc_schema_man.cpp \
	$(SW)/tpcc/shore_tpcc_env.cpp $(SW)/tpcc/shore_tpcc_xct.cpp \
	$(SW)/tpcc/shore_tpcc_client.cpp $(SW)/tm1/tm1_input.cpp \
	$(SW)/tm1/shore_tm1_schema.cpp \
	$(SW)/tm1/shore_tm1_schema_man.cpp $(SW)/tm1/shore_tm1_env.cpp \
	$(SW)/tm1/shore_tm1_xct.cpp $(SW)/tm1/shore_tm1_client.cpp \
	$(SW)/tpcb/tpcb_input.cpp $(SW)/tpcb/shore_tpcb_schema.cpp \
	$(SW)/tpcb/shore_tpcb_schema_man.cpp \
	$(SW)/tpcb/shore_tpcb_env.cpp $(SW)/tpcb/shore_tpcb_xct.cpp \
	$(SW)/tpcb/shore_tpcb_client.cpp $(SW)/tpch/dbgen/build.cpp \
	$(SW)/tpch/dbgen/driver.cpp $(SW)/tpch/dbgen/bm_utils.cpp \
	$(SW)/tpch/dbgen/rnd.cpp $(SW)/tpch/dbgen/print.cpp \
	$(SW)/tpch/dbgen/load_stub.cpp $(SW)/tpch/dbgen/bcd2.cpp \
	$(SW)/tpch/dbgen/speed_seed.cpp $(SW)/tpch/dbgen/text.cpp \
	$(SW)/tpch/dbgen/permute.cpp $(SW)/tpch/dbgen/rng64.cpp \
	$(SW)/tpch/tpch_random.cpp $(SW)/tpch/tpch_input.cpp \
	$(SW)/tpch/tpch_util.cpp $(SW)/tpch/shore_tpch_schema.cpp \
	$(SW)/tpch/shore_tpch_schema_man.cpp \
	$(SW)/tpch/shore_tpch_env.cpp $(SW)/tpch/shore_tpch_xct.cpp \
	$(SW)/tpch/shore_tpch_client.cpp $(SW)/tpce/egen/DateTime.cpp \
	$(SW)/tpce/egen/error.cpp $(SW)/tpce/egen/Random.cpp \
	$(SW)/tpce/egen/Money.cpp $(SW)/tpce/egen/EGenVersion.cpp \
	$(SW)/tpce/egen/locking.cpp $(SW)/tpce/egen/threading.cpp \
	$(SW)/tpce/egen/BaseLogger.cpp \
	$(SW)/tpce/egen/EGenLogFormatterTab.cpp \
	$(SW)/tpce/egen/EGenLoader.cpp $(SW)/tpce/egen/MEE.cpp \
	$(SW)/tpce/egen/MEEPriceBoard.cpp \
	$(SW)/tpce/egen/MEESecurity.cpp \
	$(SW)/tpce/egen/MEETickerTape.cpp \
	$(SW)/tpce/egen/MEETradingFloor.cpp \
	$(SW)/tpce/egen/WheelTime.cpp $(SW)/tpce/egen/AddressTable.cpp \
	$(SW)/tpce/egen/CustomerSelection.cpp \
	$(SW)/tpce/egen/CustomerTable.cpp \
	$(SW)/tpce/egen/InputFlatFilesStructure.cpp \
	$(SW)/tpce/egen/Person.cpp \
	$(SW)/tpce/egen/ReadRowFunctions.cpp \
	$(SW)/tpce/egen/TradeGen.cpp \
	$(SW)/tpce/egen/FlatFileLoader.cpp $(SW)/tpce/egen/CE.cpp \
	$(SW)/tpce/egen/CETxnInputGenerator.cpp \
	$(SW)/tpce/egen/CETxnMixGenerator.cpp $(SW)/tpce/egen/DM.cpp \
	$(SW)/tpce/egen/EGenGenerateAndLoad.cpp \
	$(SW)/tpce/egen/EGenValidate.cpp $(SW)/tpce/egen/strutil.cpp \
	$(SW)/tpce/egen/progressmeter.cpp \
	$(SW)/tpce/egen/progressmeterinterface.cpp \
	$(SW)/tpce/egen/bucketsimulator.cpp $(SW)/tpce/tpce_input.cpp \
	$(SW)/tpce/shore_tpce_schema.cpp \
	$(SW)/tpce/shore_tpce_schema_man.cpp \
	$(SW)/tpce/shore_tpce_env.cpp $(SW)/tpce/shore_tpce_client.cpp \
	$(SW)/tpce/shore_tpce_xct_populate.cpp \
	$(SW)/tpce/shore_tpce_xct_trade_order.cpp \
	$(SW)/tpce/shore_tpce_xct_trade_result.cpp \
	$(SW)/tpce/shore_tpce_xct_trade_lookup.cpp \
	$(SW)/tpce/shore_tpce_xct_customer_position.cpp \
	$(SW)/tpce/shore_tpce_xct_market_feed.cpp \
	$(SW)/tpce/shore_tpce_xct_trade_cleanup.cpp \
	$(SW)/tpce/shore_tpce_xct_market_watch.cpp \
	$(SW)/tpce/shore_tpce_xct_data_maintenance.cpp \
	$(SW)/tpce/shore_tpce_xct_security_detail.cpp \
	$(SW)/tpce/shore_tpce_xct_trade_status.cpp \
	$(SW)/tpce/shore_tpce_xct_broker_volume.cpp \
	$(SW)/tpce/shore_tpce_xct_trade_update.cpp \
	$(SW)/tpch/qpipe_tpch_xct.cpp \
	$(SW)/tpch/qpipe/qpipe_tpch_qlineitem.cpp \
	$(SW)/tpch/qpipe/qpipe_tpch_qcustomer.cpp \
	$(SW)/tpch/qpipe/qpipe_tpch_qnation.cpp \
	$(SW)/tpch/qpipe/qpipe_tpch_qregion.cpp \
	$(SW)/tpch/qpipe/qpipe_tpch_qpart.cpp \
	$(SW)/tpch/qpipe/qpipe_tpch_qpartsupp.cpp \
	$(SW)/tpch/qpipe/qpipe_tpch_qsupplier.cpp \
	$(SW)/tpch/qpipe/qpipe_tpch_qorders.cpp \
	$(SW)/tpch/qpipe/qpipe_q1.cpp $(SW)/tpch/qpipe/qpipe_q2.cpp \
	$(SW)/tpch/qpipe/qpipe_q3.cpp $(SW)/tpch/qpipe/qpipe_q4.cpp \
	$(SW)/tpch/qpipe/qpipe_q5.cpp $(SW)/tpch/qpipe/qpipe_q6.cpp \
	$(SW)/tpch/qpipe/qpipe_q7.cpp $(SW)/tpch/qpipe/qpipe_q8.cpp \
	$(SW)/tpch/qpipe/qpipe_q9.cpp $(SW)/tpch/qpipe/qpipe_q10.cpp \
	$(SW)/tpch/qpipe/qpipe_q11.cpp $(SW)/tpch/qpipe/qpipe_q12.cpp \
	$(SW)/tpch/qpipe/qpipe_q13.cpp $(SW)/tpch/qpipe/qpipe_q14.cpp \
	$(SW)/tpch/qpipe/qpipe_q15.cpp $(SW)/tpch/qpipe/qpipe_q16.cpp \
	$(SW)/tpch/qpipe/qpipe_q17.cpp $(SW)/tpch/qpipe/qpipe_q18.cpp \
	$(SW)/tpch/qpipe/qpipe_q19.cpp $(SW)/tpch/qpipe/qpipe_q20.cpp \
	$(SW)/tpch/qpipe/qpipe_q21.cpp $(SW)/tpch/qpipe/qpipe_q22.cpp \
	$(SW)/ssb/qpipe_ssb_xct.cpp $(SW)/ssb/qpipe/qpipe_q1_1.cpp \
	$(SW)/ssb/qpipe/qpipe_q1_2.cpp $(SW)/ssb/qpipe/qpipe_q1_3.cpp \
	$(SW)/ssb/qpipe/qpipe_q2_1.cpp $(SW)/ssb/qpipe/qpipe_q2_2.cpp \
	$(SW)/ssb/qpipe/qpipe_q2_3.cpp $(SW)/ssb/qpipe/qpipe_q3_1.cpp \
	$(SW)/ssb/qpipe/qpipe_q3_2.cpp $(SW)/ssb/qpipe/qpipe_q3_3.cpp \
	$(SW)/ssb/qpipe/qpipe_q3_4.cpp $(SW)/ssb/qpipe/qpipe_q4_1.cpp \
	$(SW)/ssb/qpipe/qpipe_q4_2.cpp $(SW)/ssb/qpipe/qpipe_q4_3.cpp \
	$(SW)/ssb/qpipe/qpipe_qdate.cpp \
	$(SW)/ssb/qpipe/qpipe_qpart.cpp \
	$(SW)/ssb/qpipe/qpipe_qsupplier.cpp \
	$(SW)/ssb/qpipe/qpipe_qcustomer.cpp \
	$(SW)/ssb/qpipe/qpipe_qlineorder.cpp \
	$(SW)/ssb/qpipe/qpipe_qtest.cpp $(SW)/ssb/dbgen/ssb_build.cpp \
	$(SW)/ssb/dbgen/ssb_driver.cpp \
	$(SW)/ssb/dbgen/ssb_bm_utils.cpp $(SW)/ssb/dbgen/ssb_rnd.cpp \
	$(SW)/ssb/dbgen/ssb_print.cpp \
	$(SW)/ssb/dbgen/ssb_load_stub.cpp $(SW)/ssb/dbgen/ssb_bcd2.cpp \
	$(SW)/ssb/dbgen/ssb_speed_seed.cpp \
	$(SW)/ssb/dbgen/ssb_text.cpp $(SW)/ssb/dbgen/ssb_permute.cpp \
	$(SW)/ssb/ssb_random.cpp $(SW)/ssb/ssb_input.cpp \
	$(SW)/ssb/ssb_util.cpp $(SW)/ssb/shore_ssb_schema.cpp \
	$(SW)/ssb/shore_ssb_schema_man.cpp $(SW)/ssb/shore_ssb_env.cpp \
	$(SW)/ssb/shore_ssb_xct.cpp $(SW)/ssb/shore_ssb_client.cpp
am__objects_15 = tpcc_random.$(OBJEXT) tpcc_input.$(OBJEXT) \
	shore_tpcc_schema.$(OBJEXT) shore_tpcc_schema_man.$(OBJEXT) \
	shore_tpcc_env.$(OBJEXT) shore_tpcc_xct.$(OBJEXT) \
	shore_tpcc_client.$(OBJEXT)
am__objects_16 = tm1_input.$(OBJEXT) shore_tm1_schema.$(OBJEXT) \
	shore_tm1_schema_man.$(OBJEXT) shore_tm1_env.$(OBJEXT) \
	shore_tm1_xct.$(OBJEXT) shore_tm1_client.$(OBJEXT)
am__objects_17 = tpcb_input.$(OBJEXT) shore_tpcb_schema.$(OBJEXT) \
	shore_tpcb_schema_man.$(OBJEXT) shore_tpcb_env.$(OBJEXT) \
	shore_tpcb_xct.$(OBJEXT) shore_tpcb_client.$(OBJEXT)
am__objects_18 = build.$(OBJEXT) driver.$(OBJEXT) bm_utils.$(OBJEXT) \
	rnd.$(OBJEXT) print.$(OBJEXT) load_stub.$(OBJEXT) \
	bcd2.$(OBJEXT) speed_seed.$(OBJEXT) text.$(OBJEXT) \
	permute.$(OBJEXT) rng64.$(OBJEXT)
am__objects_19 = tpch_random.$(OBJEXT) tpch_input.$(OBJEXT) \
	tpch_util.$(OBJEXT) shore_tpch_schema.$(OBJEXT) \
	shore_tpch_schema_man.$(OBJEXT) shore_tpch_env.$(OBJEXT) \
	shore_tpch_xct.$(OBJEXT) shore_tpch_client.$(OBJEXT)
am__objects_20 = DateTime.$(OBJEXT) error.$(OBJEXT) Random.$(OBJEXT) \
	Money.$(OBJEXT) EGenVersion.$(OBJEXT) locking.$(OBJEXT) \
	threading.$(OBJEXT) BaseLogger.$(OBJEXT) \
	EGenLogFormatterTab.$(OBJEXT) EGenLoader.$(OBJEXT) \
	MEE.$(OBJEXT) MEEPriceBoard.$(OBJEXT) MEESecurity.$(OBJEXT) \
	MEETickerTape.$(OBJEXT) MEETradingFloor.$(OBJEXT) \
	WheelTime.$(OBJEXT) AddressTable.$(OBJEXT) \
	CustomerSelection.$(OBJEXT) CustomerTable.$(OBJEXT) \
	InputFlatFilesStructure.$(OBJEXT) Person.$(OBJEXT) \
	ReadRowFunctions.$(OBJEXT) TradeGen.$(OBJEXT) \
	FlatFileLoader.$(OBJEXT) CE.$(OBJEXT) \
	CETxnInputGenerator.$(OBJEXT) CETxnMixGenerator.$(OBJEXT) \
	DM.$(OBJEXT) EGenGenerateAndLoad.$(OBJEXT) \
	EGenValidate.$(OBJEXT) strutil.$(OBJEXT) \
	progressmeter.$(OBJEXT) progressmeterinterface.$(OBJEXT) \
	bucketsimulator.$(OBJEXT)
am__objects_21 = tpce_input.$(OBJEXT) shore_tpce_schema.$(OBJEXT) \
	shore_tpce_schema_man.$(OBJEXT) shore_tpce_env.$(OBJEXT) \
	shore_tpce_client.$(OBJEXT)
am__objects_22 = shore_tpce_xct_populate.$(OBJEXT) \
	shore_tpce_xct_trade_order.$(OBJEXT) \
	shore_tpce_xct_trade_result.$(OBJEXT) \
	shore_tpce_xct_trade_lookup.$(OBJEXT) \
	shore_tpce_xct_customer_position.$(OBJEXT) \
	shore_tpce_xct_market_feed.$(OBJEXT) \
	shore_tpce_xct_trade_cleanup.$(OBJEXT) \
	shore_tpce_xct_market_watch.$(OBJEXT) \
	shore_tpce_xct_data_maintenance.$(OBJEXT) \
	shore_tpce_xct_security_detail.$(OBJEXT) \
	shore_tpce_xct_trade_status.$(OBJEXT) \
	shore_tpce_xct_broker_volume.$(OBJEXT) \
	shore_tpce_xct_trade_update.$(OBJEXT)
am__objects_23 = qpipe_tpch_xct.$(OBJEXT) \
	qpipe_tpch_qlineitem.$(OBJEXT) qpipe_tpch_qcustomer.$(OBJEXT) \
	qpipe_tpch_qnation.$(OBJEXT) qpipe_tpch_qregion.$(OBJEXT) \
	qpipe_tpch_qpart.$(OBJEXT) qpipe_tpch_qpartsupp.$(OBJEXT) \
	qpipe_tpch_qsupplier.$(OBJEXT) qpipe_tpch_qorders.$(OBJEXT) \
	qpipe_q1.$(OBJEXT) qpipe_q2.$(OBJEXT) qpipe_q3.$(OBJEXT) \
	qpipe_q4.$(OBJEXT) qpipe_q5.$(OBJEXT) qpipe_q6.$(OBJEXT) \
	qpipe_q7.$(OBJEXT) qpipe_q8.$(OBJEXT) qpipe_q9.$(OBJEXT) \
	qpipe_q10.$(OBJEXT) qpipe_q11.$(OBJEXT) qpipe_q12.$(OBJEXT) \
	qpipe_q13.$(OBJEXT) qpipe_q14.$(OBJEXT) qpipe_q15.$(OBJEXT) \
	qpipe_q16.$(OBJEXT) qpipe_q17.$(OBJEXT) qpipe_q18.$(OBJEXT) \
	qpipe_q19.$(OBJEXT) qpipe_q20.$(OBJEXT) qpipe_q21.$(OBJEXT) \
	qpipe_q22.$(OBJEXT)
am__objects_24 = qpipe_ssb_xct.$(OBJEXT) qpipe_q1_1.$(OBJEXT) \
	qpipe_q1_2.$(OBJEXT) qpipe_q1_3.$(OBJEXT) qpipe_q2_1.$(OBJEXT) \
	qpipe_q2_2.$(OBJEXT) qpipe_q2_3.$(OBJEXT) qpipe_q3_1.$(OBJEXT) \
	qpipe_q3_2.$(OBJEXT) qpipe_q3_3.$(OBJEXT) qpipe_q3_4.$(OBJEXT) \
	qpipe_q4_1.$(OBJEXT) qpipe_q4_2.$(OBJEXT) qpipe_q4_3.$(OBJEXT) \
	qpipe_qdate.$(OBJEXT) qpipe_qpart.$(OBJEXT) \
	qpipe_qsupplier.$(OBJEXT) qpipe_qcustomer.$(OBJEXT) \
	qpipe_qlineorder.$(OBJEXT) qpipe_qtest.$(OBJEXT)
am__objects_25 = ssb_build.$(OBJEXT) ssb_driver.$(OBJEXT) \
	ssb_bm_utils.$(OBJEXT) ssb_rnd.$(OBJEXT) ssb_print.$(OBJEXT) \
	ssb_load_stub.$(OBJEXT) ssb_bcd2.$(OBJEXT) \
	ssb_speed_seed.$(OBJEXT) ssb_text.$(OBJEXT) \
	ssb_permute.$(OBJEXT)
am__objects_26 = ssb_random.$(OBJEXT) ssb_input.$(OBJEXT) \
	ssb_util.$(OBJEXT) shore_ssb_schema.$(OBJEXT) \
	shore_ssb_schema_man.$(OBJEXT) shore_ssb_env.$(OBJEXT) \
	shore_ssb_xct.$(OBJEXT) shore_ssb_client.$(OBJEXT)
#am__objects_27 = $(am__objects_23) $(am__objects_24) \
#	$(am__objects_25) $(am__objects_26)
am_lib_libworkload_a_OBJECTS = $(am__objects_15) $(am__objects_16) \
	$(am__objects_17) $(am__objects_18) $(am__objects_19) \
	$(am__objects_20) $(am__objects_21) $(am__objects_22) \
	$(am__objects_27)
lib_libworkload_a_OBJECTS = $(am_lib_libworkload_a_OBJECTS)
am__EXEEXT_1 = shore_kits_integrated$(EXEEXT) \
	shore_kits_server_networked$(EXEEXT) \
	shore_kits_client_networked$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)
am_shore_kits_client_networked_OBJECTS =  \
	shore_kits_client_networked-tbench_client.$(OBJEXT)
shore_kits_client_networked_OBJECTS =  \
	$(am_shore_kits_client_networked_OBJECTS)
#am__DEPENDENCIES_1 = lib/libdoraworkload.a \
#	lib/libdora.a
#am__DEPENDENCIES_2 = lib/libqpipe.a lib/libqpipeutil.a
am__DEPENDENCIES_3 = $(am__DEPENDENCIES_1) lib/libworkload.a \
	$(am__DEPENDENCIES_2) lib/libsm.a lib/libutil.a
am__DEPENDENCIES_4 =
am__DEPENDENCIES_5 = $(am__DEPENDENCIES_3) $(SHORE_LDADD) \
	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_4)
shore_kits_client_networked_DEPENDENCIES = $(TBENCH_CLIENT_OBJ) \
	$(am__DEPENDENCIES_5)
shore_kits_client_networked_LINK = $(CXXLD) \
	$(shore_kits_client_networked_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_shore_kits_integrated_OBJECTS =  \
	shore_kits_integrated-shore_kits.$(OBJEXT)
shore_kits_integrated_OBJECTS = $(am_shore_kits_integrated_OBJECTS)
shore_kits_integrated_DEPENDENCIES = $(TBENCH_INTEGRATED_OBJ) \
	$(CLIENT) $(am__DEPENDENCIES_5)
shore_kits_integrated_LINK = $(CXXLD) \
	$(shore_kits_integrated_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_shore_kits_server_networked_OBJECTS =  \
	shore_kits_server_networked-shore_kits.$(OBJEXT)
shore_kits_server_networked_OBJECTS =  \
	$(am_shore_kits_server_networked_OBJECTS)
shore_kits_server_networked_DEPENDENCIES = $(am__DEPENDENCIES_5) \
	$(TBENCH_SERVER_OBJ)
shore_kits_server_networked_LINK = $(CXXLD) \
	$(shore_kits_server_networked_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(lib_libdora_a_SOURCES) $(lib_libdoraworkload_a_SOURCES) \
	$(lib_libqpipe_a_SOURCES) $(lib_libqpipeutil_a_SOURCES) \
	$(lib_libsm_a_SOURCES) $(lib_libutil_a_SOURCES) \
	$(lib_libworkload_a_SOURCES) \
	$(shore_kits_client_networked_SOURCES) \
	$(shore_kits_integrated_SOURCES) \
	$(shore_kits_server_networked_SOURCES)
DIST_SOURCES = $(am__lib_libdora_a_SOURCES_DIST) \
	$(am__lib_libdoraworkload_a_SOURCES_DIST) \
	$(am__lib_libqpipe_a_SOURCES_DIST) \
	$(am__lib_libqpipeutil_a_SOURCES_DIST) $(lib_libsm_a_SOURCES) \
	$(am__lib_libutil_a_SOURCES_DIST) \
	$(am__lib_libworkload_a_SOURCES_DIST) \
	$(shore_kits_client_networked_SOURCES) \
	$(shore_kits_integrated_SOURCES) \
	$(shore_kits_server_networked_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope
am__DIST_COMMON = $(srcdir)/Makefile.in AUTHORS COPYING ChangeLog \
	INSTALL NEWS README config.guess config.sub depcomp install-sh \
	ltmain.sh missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
DIST_TARGETS = dist-gzip
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = ${SHELL} /home/dcslab/ysnam/benchmarks/tailbench/tailbench/shore/shore-kits/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
ARCHOS = x86_64_LINUX
AUTOCONF = ${SHELL} /home/dcslab/ysnam/benchmarks/tailbench/tailbench/shore/shore-kits/missing autoconf
AUTOHEADER = ${SHELL} /home/dcslab/ysnam/benchmarks/tailbench/tailbench/shore/shore-kits/missing autoheader
AUTOMAKE = ${SHELL} /home/dcslab/ysnam/benchmarks/tailbench/tailbench/shore/shore-kits/missing automake-1.15
AWK = mawk
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS =  -ggdb  -O3 -finline-limit=1200 -fomit-frame-pointer -mtune=core2 -march=core2 -Wall -Wcast-align -Wextra -Wfloat-equal -Wno-return-type 	 -Wno-invalid-offsetof -Wno-conversion -Wno-system-headers -D_REENTRANT -DARCH_LP64 -m64  
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"THIS_IS_SHORE_KITS\" -DPACKAGE_TARNAME=\"this_is_shore_kits\" -DPACKAGE_VERSION=\"2.1\" -DPACKAGE_STRING=\"THIS_IS_SHORE_KITS\ 2.1\" -DPACKAGE_BUGREPORT=\"\" -DPACKAGE_URL=\"\" -DPACKAGE=\"this_is_shore_kits\" -DVERSION=\"2.1\" -DCFG_SHORE_6=1 -DCFG_CACHES=1
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GCC_COMPILER = g++
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KITS_HOME = /home/dcslab/ysnam/benchmarks/tailbench/tailbench/shore/shore-kits
KITS_VERSION = shore-kits.2.1
KITS_VERSION_MAJOR = shore-kits
KITS_VERSION_MINOR = 2
KITS_VERSION_REV = 1
LDFLAGS = -lnsl -ldl -lm -lpthread -lrt -rdynamic -lncurses
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/dcslab/ysnam/benchmarks/tailbench/tailbench/shore/shore-kits/missing makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = this_is_shore_kits
PACKAGE_BUGREPORT = 
PACKAGE_NAME = THIS_IS_SHORE_KITS
PACKAGE_STRING = THIS_IS_SHORE_KITS 2.1
PACKAGE_TARNAME = this_is_shore_kits
PACKAGE_URL = 
PACKAGE_VERSION = 2.1
PATH_SEPARATOR = :
RANLIB = ranlib
READLINE_HOME = /usr
SET_MAKE = 
SHELL = /bin/bash
SHORE_HOME = ../shore-mt/
STRIP = 
VERSION = 2.1
abs_builddir = /home/dcslab/ysnam/benchmarks/tailbench/tailbench/shore/shore-kits
abs_srcdir = /home/dcslab/ysnam/benchmarks/tailbench/tailbench/shore/shore-kits
abs_top_builddir = /home/dcslab/ysnam/benchmarks/tailbench/tailbench/shore/shore-kits
abs_top_srcdir = /home/dcslab/ysnam/benchmarks/tailbench/tailbench/shore/shore-kits
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/dcslab/ysnam/benchmarks/tailbench/tailbench/shore/shore-kits/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = 
top_builddir = .
top_srcdir = .

# Shore related 
SHORE_SRC = $(SHORE_HOME)/src
SHORE_CXXFLAGS = -DSOLARIS2 -DSTHREAD_CORE_PTHREAD -DARCH_LP64 -DNO_FASTNEW -DW_LARGEFILE -D_POSIX_PTHREAD_SEMANTICS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS -w
SHORE_INCLUDES = -I$(SHORE_SRC)/fc -I$(SHORE_SRC)/sm \
	-I$(SHORE_SRC)/common -I$(SHORE_SRC)/sthread \
	-I$(SHORE_SRC)/../config $(SHORE_CXXFLAGS) $(am__append_1) \
	$(am__append_2)
SHORE_LDADD = $(SHORE_SRC)/sm/libsm.a $(SHORE_SRC)/common/libcommon.a \
	$(SHORE_SRC)/sthread/libsthread.a $(SHORE_SRC)/fc/libfc.a \
	$(am__append_3) $(am__append_4)
READLINE_INCLUDE = $(READLINE_HOME)/include

# Readline includes
#READLINE_INCLUDE = $(READLINE_HOME)/include
READLINE_LIBS = $(READLINE_HOME)/lib
#READLINE_LIBS = $(READLINE_HOME)/lib/sparcv9

#PROCSTAT_INCLUDES = -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/lib64/glib-2.0/include -I/usr/include/libgtop-2.0
PROCSTAT_INCLUDES = -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/libgtop-2.0 -I/usr/include/libgtop-2.0 -I$(TBENCH_PATH)
# READLINE_INCLUDE = /opt/csw/include
# READLINE_LIBS = /opt/csw/lib/sparcv9
#PROCSTAT_INCLUDES = 
PROCSTAT_LIBS = -lgtop-2.0 -ldl -lrt -lpthread
#PROCSTAT_LIBS = 
TBENCH_PATH = ../../harness
TBENCH_SERVER_OBJ = $(TBENCH_PATH)/tbench_server_networked.o
TBENCH_CLIENT_OBJ = $(TBENCH_PATH)/client.o $(TBENCH_PATH)/tbench_client_networked.o
TBENCH_INTEGRATED_OBJ = $(TBENCH_PATH)/client.o $(TBENCH_PATH)/tbench_server_integrated.o
CLIENT = tbench_client.o
VTUNE_INCLUDES = 
#VTUNE_INCLUDES = -I/opt/intel/vtune_amplifier_xe_2011/include
VTUNE_LIBS = 
#VTUNE_LIBS = -L/opt/intel/vtune_amplifier_xe_2011/lib64 -littnotify

# GLOBAL includes/ld
INCLUDES = -I$(top_srcdir)/include $(SHORE_INCLUDES) -I/usr/local/include \
	-I$(READLINE_INCLUDE) $(PROCSTAT_INCLUDES) $(VTUNE_INCLUDES)

LDADD = $(lib_LIBRARIES) $(SHORE_LDADD) -L$(READLINE_LIBS) -lreadline $(PROCSTAT_LIBS) $(VTUNE_LIBS)
DORA_LIBS = 

# List of libraries
#DORA_LIBS = lib/libdoraworkload.a lib/libdora.a
QPIPE_LIBS = 
#QPIPE_LIBS = lib/libqpipe.a lib/libqpipeutil.a
lib_LIBRARIES = $(DORA_LIBS) \
      lib/libworkload.a $(QPIPE_LIBS) lib/libsm.a lib/libutil.a

FE = \
   shore_kits_integrated shore_kits_server_networked shore_kits_client_networked


################################################################################
#
# src/util/
#
################################################################################
SU = $(top_srcdir)/src/util
UTIL = $(SU)/c_str.cpp $(SU)/thread.cpp $(SU)/time_util.cpp \
	$(SU)/trace.cpp $(SU)/chomp.cpp $(SU)/progress.cpp \
	$(SU)/pool_alloc.cpp $(SU)/store_string.cpp $(SU)/history.cpp \
	$(SU)/countdown.cpp $(SU)/confparser.cpp $(SU)/envvar.cpp \
	$(SU)/stl_pool.cpp $(SU)/random_input.cpp $(SU)/shell.cpp \
	$(SU)/tcp.cpp $(SU)/w_strlcpy.cpp $(SU)/procstat.cpp \
	$(SU)/skewer.cpp $(am__append_5) $(am__append_6)
UTIL_CMD = \
        $(SU)/command/tracer.cpp \
        $(SU)/command/printer.cpp

lib_libutil_a_CXXFLAGS = $(AM_CXXFLAGS) 
lib_libutil_a_SOURCES = \
	$(UTIL) \
        $(UTIL_CMD)


################################################################################
#
# src/sm/
#
################################################################################
SM = $(top_srcdir)/src/sm
SMS = $(top_srcdir)/src/sm/shore
SM_SHORE = \
   $(SMS)/shore_file_desc.cpp \
   $(SMS)/shore_field.cpp \
   $(SMS)/shore_table.cpp \
   $(SMS)/shore_row.cpp \
   $(SMS)/shore_index.cpp \
   $(SMS)/shore_asc_sort_buf.cpp \
   $(SMS)/shore_desc_sort_buf.cpp \
   $(SMS)/shore_reqs.cpp \
   $(SMS)/shore_flusher.cpp \
   $(SMS)/shore_env.cpp \
   $(SMS)/shore_helper_loader.cpp \
   $(SMS)/shore_client.cpp \
   $(SMS)/shore_worker.cpp \
   $(SMS)/shore_trx_worker.cpp \
   $(SMS)/shore_iter.cpp \
   $(SMS)/shore_shell.cpp

lib_libsm_a_CXXFLAGS = $(AM_CXXFLAGS) $(SHORE_INCLUDES)
lib_libsm_a_SOURCES = \
	$(SM_SHORE)


################################################################################
#
# src/workload/
#
################################################################################
SW = $(top_srcdir)/src/workload
WL_TPCC_SHORE = \
   $(SW)/tpcc/tpcc_random.cpp \
   $(SW)/tpcc/tpcc_input.cpp \
   $(SW)/tpcc/shore_tpcc_schema.cpp \
   $(SW)/tpcc/shore_tpcc_schema_man.cpp \
   $(SW)/tpcc/shore_tpcc_env.cpp \
   $(SW)/tpcc/shore_tpcc_xct.cpp \
   $(SW)/tpcc/shore_tpcc_client.cpp

WL_TM1_SHORE = \
   $(SW)/tm1/tm1_input.cpp \
   $(SW)/tm1/shore_tm1_schema.cpp \
   $(SW)/tm1/shore_tm1_schema_man.cpp \
   $(SW)/tm1/shore_tm1_env.cpp \
   $(SW)/tm1/shore_tm1_xct.cpp \
   $(SW)/tm1/shore_tm1_client.cpp

WL_TPCB_SHORE = \
   $(SW)/tpcb/tpcb_input.cpp \
   $(SW)/tpcb/shore_tpcb_schema.cpp \
   $(SW)/tpcb/shore_tpcb_schema_man.cpp \
   $(SW)/tpcb/shore_tpcb_env.cpp \
   $(SW)/tpcb/shore_tpcb_xct.cpp \
   $(SW)/tpcb/shore_tpcb_client.cpp

WL_TPCH_SHORE = \
   $(SW)/tpch/tpch_random.cpp \
   $(SW)/tpch/tpch_input.cpp \
   $(SW)/tpch/tpch_util.cpp \
   $(SW)/tpch/shore_tpch_schema.cpp \
   $(SW)/tpch/shore_tpch_schema_man.cpp \
   $(SW)/tpch/shore_tpch_env.cpp \
   $(SW)/tpch/shore_tpch_xct.cpp \
   $(SW)/tpch/shore_tpch_client.cpp

WL_TPCH_DBGEN_SHORE = \
   $(SW)/tpch/dbgen/build.cpp \
   $(SW)/tpch/dbgen/driver.cpp \
   $(SW)/tpch/dbgen/bm_utils.cpp \
   $(SW)/tpch/dbgen/rnd.cpp \
   $(SW)/tpch/dbgen/print.cpp \
   $(SW)/tpch/dbgen/load_stub.cpp \
   $(SW)/tpch/dbgen/bcd2.cpp \
   $(SW)/tpch/dbgen/speed_seed.cpp \
   $(SW)/tpch/dbgen/text.cpp \
   $(SW)/tpch/dbgen/permute.cpp \
   $(SW)/tpch/dbgen/rng64.cpp

WL_TPCH_QPIPE = \
   $(SW)/tpch/qpipe_tpch_xct.cpp \
   $(SW)/tpch/qpipe/qpipe_tpch_qlineitem.cpp \
   $(SW)/tpch/qpipe/qpipe_tpch_qcustomer.cpp \
   $(SW)/tpch/qpipe/qpipe_tpch_qnation.cpp \
   $(SW)/tpch/qpipe/qpipe_tpch_qregion.cpp \
   $(SW)/tpch/qpipe/qpipe_tpch_qpart.cpp \
   $(SW)/tpch/qpipe/qpipe_tpch_qpartsupp.cpp \
   $(SW)/tpch/qpipe/qpipe_tpch_qsupplier.cpp \
   $(SW)/tpch/qpipe/qpipe_tpch_qorders.cpp \
   $(SW)/tpch/qpipe/qpipe_q1.cpp \
   $(SW)/tpch/qpipe/qpipe_q2.cpp \
   $(SW)/tpch/qpipe/qpipe_q3.cpp \
   $(SW)/tpch/qpipe/qpipe_q4.cpp \
   $(SW)/tpch/qpipe/qpipe_q5.cpp \
   $(SW)/tpch/qpipe/qpipe_q6.cpp \
   $(SW)/tpch/qpipe/qpipe_q7.cpp \
   $(SW)/tpch/qpipe/qpipe_q8.cpp \
   $(SW)/tpch/qpipe/qpipe_q9.cpp \
   $(SW)/tpch/qpipe/qpipe_q10.cpp \
   $(SW)/tpch/qpipe/qpipe_q11.cpp \
   $(SW)/tpch/qpipe/qpipe_q12.cpp \
   $(SW)/tpch/qpipe/qpipe_q13.cpp \
   $(SW)/tpch/qpipe/qpipe_q14.cpp \
   $(SW)/tpch/qpipe/qpipe_q15.cpp \
   $(SW)/tpch/qpipe/qpipe_q16.cpp \
   $(SW)/tpch/qpipe/qpipe_q17.cpp \
   $(SW)/tpch/qpipe/qpipe_q18.cpp \
   $(SW)/tpch/qpipe/qpipe_q19.cpp \
   $(SW)/tpch/qpipe/qpipe_q20.cpp \
   $(SW)/tpch/qpipe/qpipe_q21.cpp \
   $(SW)/tpch/qpipe/qpipe_q22.cpp

WL_SSB_SHORE = \
   $(SW)/ssb/ssb_random.cpp \
   $(SW)/ssb/ssb_input.cpp \
   $(SW)/ssb/ssb_util.cpp \
   $(SW)/ssb/shore_ssb_schema.cpp \
   $(SW)/ssb/shore_ssb_schema_man.cpp \
   $(SW)/ssb/shore_ssb_env.cpp \
   $(SW)/ssb/shore_ssb_xct.cpp \
   $(SW)/ssb/shore_ssb_client.cpp

WL_SSB_DBGEN_SHORE = \
   $(SW)/ssb/dbgen/ssb_build.cpp \
   $(SW)/ssb/dbgen/ssb_driver.cpp \
   $(SW)/ssb/dbgen/ssb_bm_utils.cpp \
   $(SW)/ssb/dbgen/ssb_rnd.cpp \
   $(SW)/ssb/dbgen/ssb_print.cpp \
   $(SW)/ssb/dbgen/ssb_load_stub.cpp \
   $(SW)/ssb/dbgen/ssb_bcd2.cpp \
   $(SW)/ssb/dbgen/ssb_speed_seed.cpp \
   $(SW)/ssb/dbgen/ssb_text.cpp \
   $(SW)/ssb/dbgen/ssb_permute.cpp 

WL_SSB_QPIPE = \
   $(SW)/ssb/qpipe_ssb_xct.cpp \
   $(SW)/ssb/qpipe/qpipe_q1_1.cpp \
   $(SW)/ssb/qpipe/qpipe_q1_2.cpp \
   $(SW)/ssb/qpipe/qpipe_q1_3.cpp \
   $(SW)/ssb/qpipe/qpipe_q2_1.cpp \
   $(SW)/ssb/qpipe/qpipe_q2_2.cpp \
   $(SW)/ssb/qpipe/qpipe_q2_3.cpp \
   $(SW)/ssb/qpipe/qpipe_q3_1.cpp \
   $(SW)/ssb/qpipe/qpipe_q3_2.cpp \
   $(SW)/ssb/qpipe/qpipe_q3_3.cpp \
   $(SW)/ssb/qpipe/qpipe_q3_4.cpp \
   $(SW)/ssb/qpipe/qpipe_q4_1.cpp \
   $(SW)/ssb/qpipe/qpipe_q4_2.cpp \
   $(SW)/ssb/qpipe/qpipe_q4_3.cpp \
   $(SW)/ssb/qpipe/qpipe_qdate.cpp \
   $(SW)/ssb/qpipe/qpipe_qpart.cpp \
   $(SW)/ssb/qpipe/qpipe_qsupplier.cpp \
   $(SW)/ssb/qpipe/qpipe_qcustomer.cpp \
   $(SW)/ssb/qpipe/qpipe_qlineorder.cpp \
   $(SW)/ssb/qpipe/qpipe_qtest.cpp 

WL_TPCE_SHORE = \
   $(SW)/tpce/tpce_input.cpp \
   $(SW)/tpce/shore_tpce_schema.cpp \
   $(SW)/tpce/shore_tpce_schema_man.cpp \
   $(SW)/tpce/shore_tpce_env.cpp \
   $(SW)/tpce/shore_tpce_client.cpp

WL_TPCE_SHORE_XCTS = \
   $(SW)/tpce/shore_tpce_xct_populate.cpp \
   $(SW)/tpce/shore_tpce_xct_trade_order.cpp \
   $(SW)/tpce/shore_tpce_xct_trade_result.cpp \
   $(SW)/tpce/shore_tpce_xct_trade_lookup.cpp \
   $(SW)/tpce/shore_tpce_xct_customer_position.cpp \
   $(SW)/tpce/shore_tpce_xct_market_feed.cpp \
   $(SW)/tpce/shore_tpce_xct_trade_cleanup.cpp \
   $(SW)/tpce/shore_tpce_xct_market_watch.cpp \
   $(SW)/tpce/shore_tpce_xct_data_maintenance.cpp \
   $(SW)/tpce/shore_tpce_xct_security_detail.cpp \
   $(SW)/tpce/shore_tpce_xct_trade_status.cpp \
   $(SW)/tpce/shore_tpce_xct_broker_volume.cpp \
   $(SW)/tpce/shore_tpce_xct_trade_update.cpp

WL_TPCE_SHORE_EGEN = \
   $(SW)/tpce/egen/DateTime.cpp \
   $(SW)/tpce/egen/error.cpp \
   $(SW)/tpce/egen/Random.cpp \
   $(SW)/tpce/egen/Money.cpp \
   $(SW)/tpce/egen/EGenVersion.cpp \
   $(SW)/tpce/egen/locking.cpp \
   $(SW)/tpce/egen/threading.cpp \
   $(SW)/tpce/egen/BaseLogger.cpp \
   $(SW)/tpce/egen/EGenLogFormatterTab.cpp \
   $(SW)/tpce/egen/EGenLoader.cpp \
   $(SW)/tpce/egen/MEE.cpp \
   $(SW)/tpce/egen/MEEPriceBoard.cpp \
   $(SW)/tpce/egen/MEESecurity.cpp \
   $(SW)/tpce/egen/MEETickerTape.cpp \
   $(SW)/tpce/egen/MEETradingFloor.cpp \
   $(SW)/tpce/egen/WheelTime.cpp \
   $(SW)/tpce/egen/AddressTable.cpp \
   $(SW)/tpce/egen/CustomerSelection.cpp \
   $(SW)/tpce/egen/CustomerTable.cpp \
   $(SW)/tpce/egen/InputFlatFilesStructure.cpp \
   $(SW)/tpce/egen/Person.cpp \
   $(SW)/tpce/egen/ReadRowFunctions.cpp \
   $(SW)/tpce/egen/TradeGen.cpp \
   $(SW)/tpce/egen/FlatFileLoader.cpp \
   $(SW)/tpce/egen/CE.cpp \
   $(SW)/tpce/egen/CETxnInputGenerator.cpp \
   $(SW)/tpce/egen/CETxnMixGenerator.cpp \
   $(SW)/tpce/egen/DM.cpp \
   $(SW)/tpce/egen/EGenGenerateAndLoad.cpp \
   $(SW)/tpce/egen/EGenValidate.cpp \
   $(SW)/tpce/egen/strutil.cpp \
   $(SW)/tpce/egen/progressmeter.cpp \
   $(SW)/tpce/egen/progressmeterinterface.cpp \
   $(SW)/tpce/egen/bucketsimulator.cpp

lib_libworkload_a_SOURCES = $(WL_SG_TPCC_SHORE) $(WL_TPCC_SHORE) \
	$(WL_TM1_SHORE) $(WL_TPCB_SHORE) $(WL_TPCH_DBGEN_SHORE) \
	$(WL_TPCH_SHORE) $(WL_TPCE_SHORE_EGEN) $(WL_TPCE_SHORE) \
	$(WL_TPCE_SHORE_XCTS) $(am__append_7)
lib_libworkload_a_INCLUDES = $(INCLUDES) -I$(top_srcdir)/include/workload $(SHORE_INCLUDES)

##### USE_QPIPE ######

################################################################################
#
# src/util/ *** Needed by QPipe ***
#
################################################################################
#QPIPE_UTIL = \
#	$(SU)/busy_delay.cpp \
#	$(SU)/rio.cpp \
#	$(SU)/resource_pool.cpp \
#	$(SU)/static_list_node.cpp \
#	$(SU)/static_list.cpp \
#	$(SU)/fileops.cpp \
#	$(SU)/alignedops.cpp \
#	$(SU)/tmpfile.cpp \
#	$(SU)/static_hash_map.cpp \
#	$(SU)/fnv.cpp

#lib_libqpipeutil_a_CXXFLAGS = $(AM_CXXFLAGS) 
#lib_libqpipeutil_a_SOURCES = \
#	$(QPIPE_UTIL)


################################################################################
#
# src/qpipe
#
################################################################################
#SQP = $(top_srcdir)/src/qpipe
#QPIPE_SCHEDULER = \
#   $(SQP)/scheduler/cpu_set.cpp \
#   $(SQP)/scheduler/cpu.cpp

#QPIPE_CORE = \
#   $(SQP)/core/tuple_fifo_directory.cpp \
#   $(SQP)/core/stage_container.cpp \
#   $(SQP)/core/dispatcher.cpp \
#   $(SQP)/core/packet.cpp \
#   $(SQP)/core/tuple.cpp \
#   $(SQP)/core/tuple_fifo.cpp

#QPIPE_STAGES = \
#   $(SQP)/stages/merge.cpp \
#   $(SQP)/stages/bnl_in.cpp \
#   $(SQP)/stages/hash_join.cpp \
#   $(SQP)/stages/partial_aggregate.cpp \
#   $(SQP)/stages/tscan.cpp \
#   $(SQP)/stages/fdump.cpp \
#   $(SQP)/stages/sieve.cpp \
#   $(SQP)/stages/echo.cpp \
#   $(SQP)/stages/pipe_hash_join.cpp \
#   $(SQP)/stages/aggregate.cpp \
#   $(SQP)/stages/sorted_in.cpp \
#   $(SQP)/stages/func_call.cpp \
#   $(SQP)/stages/sort.cpp \
#   $(SQP)/stages/hash_aggregate.cpp \
#   $(SQP)/stages/delay_writer.cpp \
#   $(SQP)/stages/bnl_join.cpp \
#   $(SQP)/stages/sort_merge_join.cpp \
#   $(SQP)/stages/fscan.cpp \
#   $(SQP)/stages/register_stage_containers.cpp

#QPIPE_COMMON = \
#   $(SQP)/common/process_query.cpp \
#   $(SQP)/common/predicates.cpp

#lib_libqpipe_a_SOURCES = \
#   $(QPIPE_SCHEDULER) \
#   $(QPIPE_CORE) \
#   $(QPIPE_STAGES) \
#   $(QPIPE_COMMON)

#lib_libqpipe_a_INCLUDES = $(INCLUDES) -I$(top_srcdir)/include/qpipe $(SHORE_INCLUDES)

##### EOF USE_QPIPE ######

##### USE_DORA ######

################################################################################
#
# src/dora/
#
################################################################################
#SD = $(top_srcdir)/src/dora
#DO_BASE = \
#   $(SD)/dkey_ranges_map.cpp \
#   $(SD)/base_action.cpp \
#   $(SD)/rvp.cpp \
#   $(SD)/logical_lock.cpp \
#   $(SD)/base_partition.cpp \
#   $(SD)/partition.cpp \
#   $(SD)/dflusher.cpp \
#   $(SD)/worker.cpp \
#   $(SD)/part_table.cpp \
#   $(SD)/range_part_table.cpp \
#   $(SD)/dora_env.cpp

#lib_libdora_a_CXXFLAGS = $(AM_CXXFLAGS) $(SHORE_INCLUDES)
#lib_libdora_a_SOURCES = \
#   $(DO_BASE)


################################################################################
#
# src/dora/{workload}/
#
################################################################################
#SDW = $(top_srcdir)/src/dora
#DW_TPCC = \
#   $(SDW)/tpcc/dora_payment.cpp \
#   $(SDW)/tpcc/dora_new_order.cpp \
#   $(SDW)/tpcc/dora_order_status.cpp \
#   $(SDW)/tpcc/dora_stock_level.cpp \
#   $(SDW)/tpcc/dora_delivery.cpp \
#   $(SDW)/tpcc/dora_mbench.cpp \
#   $(SDW)/tpcc/dora_tpcc.cpp \
#   $(SDW)/tpcc/dora_tpcc_xct.cpp \
#   $(SDW)/tpcc/dora_tpcc_client.cpp

#DW_TM1 = \
#   $(SDW)/tm1/dora_tm1_impl.cpp \
#   $(SDW)/tm1/dora_tm1.cpp \
#   $(SDW)/tm1/dora_tm1_xct.cpp \
#   $(SDW)/tm1/dora_tm1_client.cpp

#DW_TPCB = \
#   $(SDW)/tpcb/dora_tpcb_impl.cpp \
#   $(SDW)/tpcb/dora_tpcb.cpp \
#   $(SDW)/tpcb/dora_tpcb_xct.cpp \
#   $(SDW)/tpcb/dora_tpcb_client.cpp

#lib_libdoraworkload_a_SOURCES = \
#   $(DW_TPCC) \
#   $(DW_TM1) \
#   $(DW_TPCB)

#lib_libdoraworkload_a_INCLUDES = $(INCLUDES) -I$(top_srcdir)/include/dora $(SHORE_INCLUDES)

##### EOF USE_DORA ######

################################################################################
#
# shore_kits exec
#
################################################################################
ST = $(top_srcdir)/src/tests
shore_kits_integrated_SOURCES = $(ST)/shore_kits.cpp
shore_kits_integrated_CXXFLAGS = $(AM_CXXFLAGS) $(SHORE_INCLUDES)
shore_kits_integrated_LDADD = $(TBENCH_INTEGRATED_OBJ) $(CLIENT) $(LDADD) 
shore_kits_server_networked_SOURCES = $(ST)/shore_kits.cpp
shore_kits_server_networked_CXXFLAGS = $(AM_CXXFLAGS) $(SHORE_INCLUDES)
shore_kits_server_networked_LDADD = $(LDADD) $(TBENCH_SERVER_OBJ)
shore_kits_client_networked_SOURCES = $(top_srcdir)/src/sm/shore/tbench_client.cpp
shore_kits_client_networked_CXXFLAGS = $(AM_CXXFLAGS) $(SHORE_INCLUDES)
shore_kits_client_networked_LDADD = $(TBENCH_CLIENT_OBJ) $(LDADD)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --gnu \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(INSTALL_DATA) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(INSTALL_DATA) $$list2 "$(DESTDIR)$(libdir)" || exit $$?; }
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  if test -f $$p; then \
	    $(am__strip_dir) \
	    echo " ( cd '$(DESTDIR)$(libdir)' && $(RANLIB) $$f )"; \
	    ( cd "$(DESTDIR)$(libdir)" && $(RANLIB) $$f ) || exit $$?; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; test -n "$(libdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libdir)'; $(am__uninstall_files_from_dir)

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
lib/$(am__dirstamp):
	@$(MKDIR_P) lib
	@: > lib/$(am__dirstamp)

lib/libdora.a: $(lib_libdora_a_OBJECTS) $(lib_libdora_a_DEPENDENCIES) $(EXTRA_lib_libdora_a_DEPENDENCIES) lib/$(am__dirstamp)
	$(AM_V_at)-rm -f lib/libdora.a
	$(AM_V_AR)$(lib_libdora_a_AR) lib/libdora.a $(lib_libdora_a_OBJECTS) $(lib_libdora_a_LIBADD)
	$(AM_V_at)$(RANLIB) lib/libdora.a

lib/libdoraworkload.a: $(lib_libdoraworkload_a_OBJECTS) $(lib_libdoraworkload_a_DEPENDENCIES) $(EXTRA_lib_libdoraworkload_a_DEPENDENCIES) lib/$(am__dirstamp)
	$(AM_V_at)-rm -f lib/libdoraworkload.a
	$(AM_V_AR)$(lib_libdoraworkload_a_AR) lib/libdoraworkload.a $(lib_libdoraworkload_a_OBJECTS) $(lib_libdoraworkload_a_LIBADD)
	$(AM_V_at)$(RANLIB) lib/libdoraworkload.a

lib/libqpipe.a: $(lib_libqpipe_a_OBJECTS) $(lib_libqpipe_a_DEPENDENCIES) $(EXTRA_lib_libqpipe_a_DEPENDENCIES) lib/$(am__dirstamp)
	$(AM_V_at)-rm -f lib/libqpipe.a
	$(AM_V_AR)$(lib_libqpipe_a_AR) lib/libqpipe.a $(lib_libqpipe_a_OBJECTS) $(lib_libqpipe_a_LIBADD)
	$(AM_V_at)$(RANLIB) lib/libqpipe.a

lib/libqpipeutil.a: $(lib_libqpipeutil_a_OBJECTS) $(lib_libqpipeutil_a_DEPENDENCIES) $(EXTRA_lib_libqpipeutil_a_DEPENDENCIES) lib/$(am__dirstamp)
	$(AM_V_at)-rm -f lib/libqpipeutil.a
	$(AM_V_AR)$(lib_libqpipeutil_a_AR) lib/libqpipeutil.a $(lib_libqpipeutil_a_OBJECTS) $(lib_libqpipeutil_a_LIBADD)
	$(AM_V_at)$(RANLIB) lib/libqpipeutil.a

lib/libsm.a: $(lib_libsm_a_OBJECTS) $(lib_libsm_a_DEPENDENCIES) $(EXTRA_lib_libsm_a_DEPENDENCIES) lib/$(am__dirstamp)
	$(AM_V_at)-rm -f lib/libsm.a
	$(AM_V_AR)$(lib_libsm_a_AR) lib/libsm.a $(lib_libsm_a_OBJECTS) $(lib_libsm_a_LIBADD)
	$(AM_V_at)$(RANLIB) lib/libsm.a

lib/libutil.a: $(lib_libutil_a_OBJECTS) $(lib_libutil_a_DEPENDENCIES) $(EXTRA_lib_libutil_a_DEPENDENCIES) lib/$(am__dirstamp)
	$(AM_V_at)-rm -f lib/libutil.a
	$(AM_V_AR)$(lib_libutil_a_AR) lib/libutil.a $(lib_libutil_a_OBJECTS) $(lib_libutil_a_LIBADD)
	$(AM_V_at)$(RANLIB) lib/libutil.a

lib/libworkload.a: $(lib_libworkload_a_OBJECTS) $(lib_libworkload_a_DEPENDENCIES) $(EXTRA_lib_libworkload_a_DEPENDENCIES) lib/$(am__dirstamp)
	$(AM_V_at)-rm -f lib/libworkload.a
	$(AM_V_AR)$(lib_libworkload_a_AR) lib/libworkload.a $(lib_libworkload_a_OBJECTS) $(lib_libworkload_a_LIBADD)
	$(AM_V_at)$(RANLIB) lib/libworkload.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

shore_kits_client_networked$(EXEEXT): $(shore_kits_client_networked_OBJECTS) $(shore_kits_client_networked_DEPENDENCIES) $(EXTRA_shore_kits_client_networked_DEPENDENCIES) 
	@rm -f shore_kits_client_networked$(EXEEXT)
	$(AM_V_CXXLD)$(shore_kits_client_networked_LINK) $(shore_kits_client_networked_OBJECTS) $(shore_kits_client_networked_LDADD) $(LIBS)

shore_kits_integrated$(EXEEXT): $(shore_kits_integrated_OBJECTS) $(shore_kits_integrated_DEPENDENCIES) $(EXTRA_shore_kits_integrated_DEPENDENCIES) 
	@rm -f shore_kits_integrated$(EXEEXT)
	$(AM_V_CXXLD)$(shore_kits_integrated_LINK) $(shore_kits_integrated_OBJECTS) $(shore_kits_integrated_LDADD) $(LIBS)

shore_kits_server_networked$(EXEEXT): $(shore_kits_server_networked_OBJECTS) $(shore_kits_server_networked_DEPENDENCIES) $(EXTRA_shore_kits_server_networked_DEPENDENCIES) 
	@rm -f shore_kits_server_networked$(EXEEXT)
	$(AM_V_CXXLD)$(shore_kits_server_networked_LINK) $(shore_kits_server_networked_OBJECTS) $(shore_kits_server_networked_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AddressTable.Po
include ./$(DEPDIR)/BaseLogger.Po
include ./$(DEPDIR)/CE.Po
include ./$(DEPDIR)/CETxnInputGenerator.Po
include ./$(DEPDIR)/CETxnMixGenerator.Po
include ./$(DEPDIR)/CustomerSelection.Po
include ./$(DEPDIR)/CustomerTable.Po
include ./$(DEPDIR)/DM.Po
include ./$(DEPDIR)/DateTime.Po
include ./$(DEPDIR)/EGenGenerateAndLoad.Po
include ./$(DEPDIR)/EGenLoader.Po
include ./$(DEPDIR)/EGenLogFormatterTab.Po
include ./$(DEPDIR)/EGenValidate.Po
include ./$(DEPDIR)/EGenVersion.Po
include ./$(DEPDIR)/FlatFileLoader.Po
include ./$(DEPDIR)/InputFlatFilesStructure.Po
include ./$(DEPDIR)/MEE.Po
include ./$(DEPDIR)/MEEPriceBoard.Po
include ./$(DEPDIR)/MEESecurity.Po
include ./$(DEPDIR)/MEETickerTape.Po
include ./$(DEPDIR)/MEETradingFloor.Po
include ./$(DEPDIR)/Money.Po
include ./$(DEPDIR)/Person.Po
include ./$(DEPDIR)/Random.Po
include ./$(DEPDIR)/ReadRowFunctions.Po
include ./$(DEPDIR)/TradeGen.Po
include ./$(DEPDIR)/WheelTime.Po
include ./$(DEPDIR)/aggregate.Po
include ./$(DEPDIR)/bcd2.Po
include ./$(DEPDIR)/bm_utils.Po
include ./$(DEPDIR)/bnl_in.Po
include ./$(DEPDIR)/bnl_join.Po
include ./$(DEPDIR)/bucketsimulator.Po
include ./$(DEPDIR)/build.Po
include ./$(DEPDIR)/cpu.Po
include ./$(DEPDIR)/cpu_set.Po
include ./$(DEPDIR)/delay_writer.Po
include ./$(DEPDIR)/dispatcher.Po
include ./$(DEPDIR)/dora_delivery.Po
include ./$(DEPDIR)/dora_mbench.Po
include ./$(DEPDIR)/dora_new_order.Po
include ./$(DEPDIR)/dora_order_status.Po
include ./$(DEPDIR)/dora_payment.Po
include ./$(DEPDIR)/dora_stock_level.Po
include ./$(DEPDIR)/dora_tm1.Po
include ./$(DEPDIR)/dora_tm1_client.Po
include ./$(DEPDIR)/dora_tm1_impl.Po
include ./$(DEPDIR)/dora_tm1_xct.Po
include ./$(DEPDIR)/dora_tpcb.Po
include ./$(DEPDIR)/dora_tpcb_client.Po
include ./$(DEPDIR)/dora_tpcb_impl.Po
include ./$(DEPDIR)/dora_tpcb_xct.Po
include ./$(DEPDIR)/dora_tpcc.Po
include ./$(DEPDIR)/dora_tpcc_client.Po
include ./$(DEPDIR)/dora_tpcc_xct.Po
include ./$(DEPDIR)/driver.Po
include ./$(DEPDIR)/echo.Po
include ./$(DEPDIR)/error.Po
include ./$(DEPDIR)/fdump.Po
include ./$(DEPDIR)/fscan.Po
include ./$(DEPDIR)/func_call.Po
include ./$(DEPDIR)/hash_aggregate.Po
include ./$(DEPDIR)/hash_join.Po
include ./$(DEPDIR)/lib_libdora_a-base_action.Po
include ./$(DEPDIR)/lib_libdora_a-base_partition.Po
include ./$(DEPDIR)/lib_libdora_a-dflusher.Po
include ./$(DEPDIR)/lib_libdora_a-dkey_ranges_map.Po
include ./$(DEPDIR)/lib_libdora_a-dora_env.Po
include ./$(DEPDIR)/lib_libdora_a-logical_lock.Po
include ./$(DEPDIR)/lib_libdora_a-part_table.Po
include ./$(DEPDIR)/lib_libdora_a-partition.Po
include ./$(DEPDIR)/lib_libdora_a-range_part_table.Po
include ./$(DEPDIR)/lib_libdora_a-rvp.Po
include ./$(DEPDIR)/lib_libdora_a-worker.Po
include ./$(DEPDIR)/lib_libqpipeutil_a-alignedops.Po
include ./$(DEPDIR)/lib_libqpipeutil_a-busy_delay.Po
include ./$(DEPDIR)/lib_libqpipeutil_a-fileops.Po
include ./$(DEPDIR)/lib_libqpipeutil_a-fnv.Po
include ./$(DEPDIR)/lib_libqpipeutil_a-resource_pool.Po
include ./$(DEPDIR)/lib_libqpipeutil_a-rio.Po
include ./$(DEPDIR)/lib_libqpipeutil_a-static_hash_map.Po
include ./$(DEPDIR)/lib_libqpipeutil_a-static_list.Po
include ./$(DEPDIR)/lib_libqpipeutil_a-static_list_node.Po
include ./$(DEPDIR)/lib_libqpipeutil_a-tmpfile.Po
include ./$(DEPDIR)/lib_libsm_a-shore_asc_sort_buf.Po
include ./$(DEPDIR)/lib_libsm_a-shore_client.Po
include ./$(DEPDIR)/lib_libsm_a-shore_desc_sort_buf.Po
include ./$(DEPDIR)/lib_libsm_a-shore_env.Po
include ./$(DEPDIR)/lib_libsm_a-shore_field.Po
include ./$(DEPDIR)/lib_libsm_a-shore_file_desc.Po
include ./$(DEPDIR)/lib_libsm_a-shore_flusher.Po
include ./$(DEPDIR)/lib_libsm_a-shore_helper_loader.Po
include ./$(DEPDIR)/lib_libsm_a-shore_index.Po
include ./$(DEPDIR)/lib_libsm_a-shore_iter.Po
include ./$(DEPDIR)/lib_libsm_a-shore_reqs.Po
include ./$(DEPDIR)/lib_libsm_a-shore_row.Po
include ./$(DEPDIR)/lib_libsm_a-shore_shell.Po
include ./$(DEPDIR)/lib_libsm_a-shore_table.Po
include ./$(DEPDIR)/lib_libsm_a-shore_trx_worker.Po
include ./$(DEPDIR)/lib_libsm_a-shore_worker.Po
include ./$(DEPDIR)/lib_libutil_a-c_str.Po
include ./$(DEPDIR)/lib_libutil_a-chomp.Po
include ./$(DEPDIR)/lib_libutil_a-confparser.Po
include ./$(DEPDIR)/lib_libutil_a-countdown.Po
include ./$(DEPDIR)/lib_libutil_a-envvar.Po
include ./$(DEPDIR)/lib_libutil_a-history.Po
include ./$(DEPDIR)/lib_libutil_a-linux_procstat.Po
include ./$(DEPDIR)/lib_libutil_a-pool_alloc.Po
include ./$(DEPDIR)/lib_libutil_a-prcinfo.Po
include ./$(DEPDIR)/lib_libutil_a-printer.Po
include ./$(DEPDIR)/lib_libutil_a-procstat.Po
include ./$(DEPDIR)/lib_libutil_a-progress.Po
include ./$(DEPDIR)/lib_libutil_a-random_input.Po
include ./$(DEPDIR)/lib_libutil_a-shell.Po
include ./$(DEPDIR)/lib_libutil_a-skewer.Po
include ./$(DEPDIR)/lib_libutil_a-stl_pool.Po
include ./$(DEPDIR)/lib_libutil_a-store_string.Po
include ./$(DEPDIR)/lib_libutil_a-sunos_procstat.Po
include ./$(DEPDIR)/lib_libutil_a-tcp.Po
include ./$(DEPDIR)/lib_libutil_a-thread.Po
include ./$(DEPDIR)/lib_libutil_a-time_util.Po
include ./$(DEPDIR)/lib_libutil_a-topinfo.Po
include ./$(DEPDIR)/lib_libutil_a-trace.Po
include ./$(DEPDIR)/lib_libutil_a-tracer.Po
include ./$(DEPDIR)/lib_libutil_a-w_strlcpy.Po
include ./$(DEPDIR)/load_stub.Po
include ./$(DEPDIR)/locking.Po
include ./$(DEPDIR)/merge.Po
include ./$(DEPDIR)/packet.Po
include ./$(DEPDIR)/partial_aggregate.Po
include ./$(DEPDIR)/permute.Po
include ./$(DEPDIR)/pipe_hash_join.Po
include ./$(DEPDIR)/predicates.Po
include ./$(DEPDIR)/print.Po
include ./$(DEPDIR)/process_query.Po
include ./$(DEPDIR)/progressmeter.Po
include ./$(DEPDIR)/progressmeterinterface.Po
include ./$(DEPDIR)/qpipe_q1.Po
include ./$(DEPDIR)/qpipe_q10.Po
include ./$(DEPDIR)/qpipe_q11.Po
include ./$(DEPDIR)/qpipe_q12.Po
include ./$(DEPDIR)/qpipe_q13.Po
include ./$(DEPDIR)/qpipe_q14.Po
include ./$(DEPDIR)/qpipe_q15.Po
include ./$(DEPDIR)/qpipe_q16.Po
include ./$(DEPDIR)/qpipe_q17.Po
include ./$(DEPDIR)/qpipe_q18.Po
include ./$(DEPDIR)/qpipe_q19.Po
include ./$(DEPDIR)/qpipe_q1_1.Po
include ./$(DEPDIR)/qpipe_q1_2.Po
include ./$(DEPDIR)/qpipe_q1_3.Po
include ./$(DEPDIR)/qpipe_q2.Po
include ./$(DEPDIR)/qpipe_q20.Po
include ./$(DEPDIR)/qpipe_q21.Po
include ./$(DEPDIR)/qpipe_q22.Po
include ./$(DEPDIR)/qpipe_q2_1.Po
include ./$(DEPDIR)/qpipe_q2_2.Po
include ./$(DEPDIR)/qpipe_q2_3.Po
include ./$(DEPDIR)/qpipe_q3.Po
include ./$(DEPDIR)/qpipe_q3_1.Po
include ./$(DEPDIR)/qpipe_q3_2.Po
include ./$(DEPDIR)/qpipe_q3_3.Po
include ./$(DEPDIR)/qpipe_q3_4.Po
include ./$(DEPDIR)/qpipe_q4.Po
include ./$(DEPDIR)/qpipe_q4_1.Po
include ./$(DEPDIR)/qpipe_q4_2.Po
include ./$(DEPDIR)/qpipe_q4_3.Po
include ./$(DEPDIR)/qpipe_q5.Po
include ./$(DEPDIR)/qpipe_q6.Po
include ./$(DEPDIR)/qpipe_q7.Po
include ./$(DEPDIR)/qpipe_q8.Po
include ./$(DEPDIR)/qpipe_q9.Po
include ./$(DEPDIR)/qpipe_qcustomer.Po
include ./$(DEPDIR)/qpipe_qdate.Po
include ./$(DEPDIR)/qpipe_qlineorder.Po
include ./$(DEPDIR)/qpipe_qpart.Po
include ./$(DEPDIR)/qpipe_qsupplier.Po
include ./$(DEPDIR)/qpipe_qtest.Po
include ./$(DEPDIR)/qpipe_ssb_xct.Po
include ./$(DEPDIR)/qpipe_tpch_qcustomer.Po
include ./$(DEPDIR)/qpipe_tpch_qlineitem.Po
include ./$(DEPDIR)/qpipe_tpch_qnation.Po
include ./$(DEPDIR)/qpipe_tpch_qorders.Po
include ./$(DEPDIR)/qpipe_tpch_qpart.Po
include ./$(DEPDIR)/qpipe_tpch_qpartsupp.Po
include ./$(DEPDIR)/qpipe_tpch_qregion.Po
include ./$(DEPDIR)/qpipe_tpch_qsupplier.Po
include ./$(DEPDIR)/qpipe_tpch_xct.Po
include ./$(DEPDIR)/register_stage_containers.Po
include ./$(DEPDIR)/rnd.Po
include ./$(DEPDIR)/rng64.Po
include ./$(DEPDIR)/shore_kits_client_networked-tbench_client.Po
include ./$(DEPDIR)/shore_kits_integrated-shore_kits.Po
include ./$(DEPDIR)/shore_kits_server_networked-shore_kits.Po
include ./$(DEPDIR)/shore_ssb_client.Po
include ./$(DEPDIR)/shore_ssb_env.Po
include ./$(DEPDIR)/shore_ssb_schema.Po
include ./$(DEPDIR)/shore_ssb_schema_man.Po
include ./$(DEPDIR)/shore_ssb_xct.Po
include ./$(DEPDIR)/shore_tm1_client.Po
include ./$(DEPDIR)/shore_tm1_env.Po
include ./$(DEPDIR)/shore_tm1_schema.Po
include ./$(DEPDIR)/shore_tm1_schema_man.Po
include ./$(DEPDIR)/shore_tm1_xct.Po
include ./$(DEPDIR)/shore_tpcb_client.Po
include ./$(DEPDIR)/shore_tpcb_env.Po
include ./$(DEPDIR)/shore_tpcb_schema.Po
include ./$(DEPDIR)/shore_tpcb_schema_man.Po
include ./$(DEPDIR)/shore_tpcb_xct.Po
include ./$(DEPDIR)/shore_tpcc_client.Po
include ./$(DEPDIR)/shore_tpcc_env.Po
include ./$(DEPDIR)/shore_tpcc_schema.Po
include ./$(DEPDIR)/shore_tpcc_schema_man.Po
include ./$(DEPDIR)/shore_tpcc_xct.Po
include ./$(DEPDIR)/shore_tpce_client.Po
include ./$(DEPDIR)/shore_tpce_env.Po
include ./$(DEPDIR)/shore_tpce_schema.Po
include ./$(DEPDIR)/shore_tpce_schema_man.Po
include ./$(DEPDIR)/shore_tpce_xct_broker_volume.Po
include ./$(DEPDIR)/shore_tpce_xct_customer_position.Po
include ./$(DEPDIR)/shore_tpce_xct_data_maintenance.Po
include ./$(DEPDIR)/shore_tpce_xct_market_feed.Po
include ./$(DEPDIR)/shore_tpce_xct_market_watch.Po
include ./$(DEPDIR)/shore_tpce_xct_populate.Po
include ./$(DEPDIR)/shore_tpce_xct_security_detail.Po
include ./$(DEPDIR)/shore_tpce_xct_trade_cleanup.Po
include ./$(DEPDIR)/shore_tpce_xct_trade_lookup.Po
include ./$(DEPDIR)/shore_tpce_xct_trade_order.Po
include ./$(DEPDIR)/shore_tpce_xct_trade_result.Po
include ./$(DEPDIR)/shore_tpce_xct_trade_status.Po
include ./$(DEPDIR)/shore_tpce_xct_trade_update.Po
include ./$(DEPDIR)/shore_tpch_client.Po
include ./$(DEPDIR)/shore_tpch_env.Po
include ./$(DEPDIR)/shore_tpch_schema.Po
include ./$(DEPDIR)/shore_tpch_schema_man.Po
include ./$(DEPDIR)/shore_tpch_xct.Po
include ./$(DEPDIR)/sieve.Po
include ./$(DEPDIR)/sort.Po
include ./$(DEPDIR)/sort_merge_join.Po
include ./$(DEPDIR)/sorted_in.Po
include ./$(DEPDIR)/speed_seed.Po
include ./$(DEPDIR)/ssb_bcd2.Po
include ./$(DEPDIR)/ssb_bm_utils.Po
include ./$(DEPDIR)/ssb_build.Po
include ./$(DEPDIR)/ssb_driver.Po
include ./$(DEPDIR)/ssb_input.Po
include ./$(DEPDIR)/ssb_load_stub.Po
include ./$(DEPDIR)/ssb_permute.Po
include ./$(DEPDIR)/ssb_print.Po
include ./$(DEPDIR)/ssb_random.Po
include ./$(DEPDIR)/ssb_rnd.Po
include ./$(DEPDIR)/ssb_speed_seed.Po
include ./$(DEPDIR)/ssb_text.Po
include ./$(DEPDIR)/ssb_util.Po
include ./$(DEPDIR)/stage_container.Po
include ./$(DEPDIR)/strutil.Po
include ./$(DEPDIR)/text.Po
include ./$(DEPDIR)/threading.Po
include ./$(DEPDIR)/tm1_input.Po
include ./$(DEPDIR)/tpcb_input.Po
include ./$(DEPDIR)/tpcc_input.Po
include ./$(DEPDIR)/tpcc_random.Po
include ./$(DEPDIR)/tpce_input.Po
include ./$(DEPDIR)/tpch_input.Po
include ./$(DEPDIR)/tpch_random.Po
include ./$(DEPDIR)/tpch_util.Po
include ./$(DEPDIR)/tscan.Po
include ./$(DEPDIR)/tuple.Po
include ./$(DEPDIR)/tuple_fifo.Po
include ./$(DEPDIR)/tuple_fifo_directory.Po

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

lib_libdora_a-dkey_ranges_map.o: $(SD)/dkey_ranges_map.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-dkey_ranges_map.o -MD -MP -MF $(DEPDIR)/lib_libdora_a-dkey_ranges_map.Tpo -c -o lib_libdora_a-dkey_ranges_map.o `test -f '$(SD)/dkey_ranges_map.cpp' || echo '$(srcdir)/'`$(SD)/dkey_ranges_map.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-dkey_ranges_map.Tpo $(DEPDIR)/lib_libdora_a-dkey_ranges_map.Po
#	$(AM_V_CXX)source='$(SD)/dkey_ranges_map.cpp' object='lib_libdora_a-dkey_ranges_map.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-dkey_ranges_map.o `test -f '$(SD)/dkey_ranges_map.cpp' || echo '$(srcdir)/'`$(SD)/dkey_ranges_map.cpp

lib_libdora_a-dkey_ranges_map.obj: $(SD)/dkey_ranges_map.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-dkey_ranges_map.obj -MD -MP -MF $(DEPDIR)/lib_libdora_a-dkey_ranges_map.Tpo -c -o lib_libdora_a-dkey_ranges_map.obj `if test -f '$(SD)/dkey_ranges_map.cpp'; then $(CYGPATH_W) '$(SD)/dkey_ranges_map.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/dkey_ranges_map.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-dkey_ranges_map.Tpo $(DEPDIR)/lib_libdora_a-dkey_ranges_map.Po
#	$(AM_V_CXX)source='$(SD)/dkey_ranges_map.cpp' object='lib_libdora_a-dkey_ranges_map.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-dkey_ranges_map.obj `if test -f '$(SD)/dkey_ranges_map.cpp'; then $(CYGPATH_W) '$(SD)/dkey_ranges_map.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/dkey_ranges_map.cpp'; fi`

lib_libdora_a-base_action.o: $(SD)/base_action.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-base_action.o -MD -MP -MF $(DEPDIR)/lib_libdora_a-base_action.Tpo -c -o lib_libdora_a-base_action.o `test -f '$(SD)/base_action.cpp' || echo '$(srcdir)/'`$(SD)/base_action.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-base_action.Tpo $(DEPDIR)/lib_libdora_a-base_action.Po
#	$(AM_V_CXX)source='$(SD)/base_action.cpp' object='lib_libdora_a-base_action.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-base_action.o `test -f '$(SD)/base_action.cpp' || echo '$(srcdir)/'`$(SD)/base_action.cpp

lib_libdora_a-base_action.obj: $(SD)/base_action.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-base_action.obj -MD -MP -MF $(DEPDIR)/lib_libdora_a-base_action.Tpo -c -o lib_libdora_a-base_action.obj `if test -f '$(SD)/base_action.cpp'; then $(CYGPATH_W) '$(SD)/base_action.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/base_action.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-base_action.Tpo $(DEPDIR)/lib_libdora_a-base_action.Po
#	$(AM_V_CXX)source='$(SD)/base_action.cpp' object='lib_libdora_a-base_action.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-base_action.obj `if test -f '$(SD)/base_action.cpp'; then $(CYGPATH_W) '$(SD)/base_action.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/base_action.cpp'; fi`

lib_libdora_a-rvp.o: $(SD)/rvp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-rvp.o -MD -MP -MF $(DEPDIR)/lib_libdora_a-rvp.Tpo -c -o lib_libdora_a-rvp.o `test -f '$(SD)/rvp.cpp' || echo '$(srcdir)/'`$(SD)/rvp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-rvp.Tpo $(DEPDIR)/lib_libdora_a-rvp.Po
#	$(AM_V_CXX)source='$(SD)/rvp.cpp' object='lib_libdora_a-rvp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-rvp.o `test -f '$(SD)/rvp.cpp' || echo '$(srcdir)/'`$(SD)/rvp.cpp

lib_libdora_a-rvp.obj: $(SD)/rvp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-rvp.obj -MD -MP -MF $(DEPDIR)/lib_libdora_a-rvp.Tpo -c -o lib_libdora_a-rvp.obj `if test -f '$(SD)/rvp.cpp'; then $(CYGPATH_W) '$(SD)/rvp.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/rvp.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-rvp.Tpo $(DEPDIR)/lib_libdora_a-rvp.Po
#	$(AM_V_CXX)source='$(SD)/rvp.cpp' object='lib_libdora_a-rvp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-rvp.obj `if test -f '$(SD)/rvp.cpp'; then $(CYGPATH_W) '$(SD)/rvp.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/rvp.cpp'; fi`

lib_libdora_a-logical_lock.o: $(SD)/logical_lock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-logical_lock.o -MD -MP -MF $(DEPDIR)/lib_libdora_a-logical_lock.Tpo -c -o lib_libdora_a-logical_lock.o `test -f '$(SD)/logical_lock.cpp' || echo '$(srcdir)/'`$(SD)/logical_lock.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-logical_lock.Tpo $(DEPDIR)/lib_libdora_a-logical_lock.Po
#	$(AM_V_CXX)source='$(SD)/logical_lock.cpp' object='lib_libdora_a-logical_lock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-logical_lock.o `test -f '$(SD)/logical_lock.cpp' || echo '$(srcdir)/'`$(SD)/logical_lock.cpp

lib_libdora_a-logical_lock.obj: $(SD)/logical_lock.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-logical_lock.obj -MD -MP -MF $(DEPDIR)/lib_libdora_a-logical_lock.Tpo -c -o lib_libdora_a-logical_lock.obj `if test -f '$(SD)/logical_lock.cpp'; then $(CYGPATH_W) '$(SD)/logical_lock.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/logical_lock.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-logical_lock.Tpo $(DEPDIR)/lib_libdora_a-logical_lock.Po
#	$(AM_V_CXX)source='$(SD)/logical_lock.cpp' object='lib_libdora_a-logical_lock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-logical_lock.obj `if test -f '$(SD)/logical_lock.cpp'; then $(CYGPATH_W) '$(SD)/logical_lock.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/logical_lock.cpp'; fi`

lib_libdora_a-base_partition.o: $(SD)/base_partition.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-base_partition.o -MD -MP -MF $(DEPDIR)/lib_libdora_a-base_partition.Tpo -c -o lib_libdora_a-base_partition.o `test -f '$(SD)/base_partition.cpp' || echo '$(srcdir)/'`$(SD)/base_partition.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-base_partition.Tpo $(DEPDIR)/lib_libdora_a-base_partition.Po
#	$(AM_V_CXX)source='$(SD)/base_partition.cpp' object='lib_libdora_a-base_partition.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-base_partition.o `test -f '$(SD)/base_partition.cpp' || echo '$(srcdir)/'`$(SD)/base_partition.cpp

lib_libdora_a-base_partition.obj: $(SD)/base_partition.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-base_partition.obj -MD -MP -MF $(DEPDIR)/lib_libdora_a-base_partition.Tpo -c -o lib_libdora_a-base_partition.obj `if test -f '$(SD)/base_partition.cpp'; then $(CYGPATH_W) '$(SD)/base_partition.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/base_partition.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-base_partition.Tpo $(DEPDIR)/lib_libdora_a-base_partition.Po
#	$(AM_V_CXX)source='$(SD)/base_partition.cpp' object='lib_libdora_a-base_partition.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-base_partition.obj `if test -f '$(SD)/base_partition.cpp'; then $(CYGPATH_W) '$(SD)/base_partition.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/base_partition.cpp'; fi`

lib_libdora_a-partition.o: $(SD)/partition.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-partition.o -MD -MP -MF $(DEPDIR)/lib_libdora_a-partition.Tpo -c -o lib_libdora_a-partition.o `test -f '$(SD)/partition.cpp' || echo '$(srcdir)/'`$(SD)/partition.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-partition.Tpo $(DEPDIR)/lib_libdora_a-partition.Po
#	$(AM_V_CXX)source='$(SD)/partition.cpp' object='lib_libdora_a-partition.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-partition.o `test -f '$(SD)/partition.cpp' || echo '$(srcdir)/'`$(SD)/partition.cpp

lib_libdora_a-partition.obj: $(SD)/partition.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-partition.obj -MD -MP -MF $(DEPDIR)/lib_libdora_a-partition.Tpo -c -o lib_libdora_a-partition.obj `if test -f '$(SD)/partition.cpp'; then $(CYGPATH_W) '$(SD)/partition.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/partition.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-partition.Tpo $(DEPDIR)/lib_libdora_a-partition.Po
#	$(AM_V_CXX)source='$(SD)/partition.cpp' object='lib_libdora_a-partition.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-partition.obj `if test -f '$(SD)/partition.cpp'; then $(CYGPATH_W) '$(SD)/partition.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/partition.cpp'; fi`

lib_libdora_a-dflusher.o: $(SD)/dflusher.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-dflusher.o -MD -MP -MF $(DEPDIR)/lib_libdora_a-dflusher.Tpo -c -o lib_libdora_a-dflusher.o `test -f '$(SD)/dflusher.cpp' || echo '$(srcdir)/'`$(SD)/dflusher.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-dflusher.Tpo $(DEPDIR)/lib_libdora_a-dflusher.Po
#	$(AM_V_CXX)source='$(SD)/dflusher.cpp' object='lib_libdora_a-dflusher.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-dflusher.o `test -f '$(SD)/dflusher.cpp' || echo '$(srcdir)/'`$(SD)/dflusher.cpp

lib_libdora_a-dflusher.obj: $(SD)/dflusher.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-dflusher.obj -MD -MP -MF $(DEPDIR)/lib_libdora_a-dflusher.Tpo -c -o lib_libdora_a-dflusher.obj `if test -f '$(SD)/dflusher.cpp'; then $(CYGPATH_W) '$(SD)/dflusher.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/dflusher.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-dflusher.Tpo $(DEPDIR)/lib_libdora_a-dflusher.Po
#	$(AM_V_CXX)source='$(SD)/dflusher.cpp' object='lib_libdora_a-dflusher.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-dflusher.obj `if test -f '$(SD)/dflusher.cpp'; then $(CYGPATH_W) '$(SD)/dflusher.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/dflusher.cpp'; fi`

lib_libdora_a-worker.o: $(SD)/worker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-worker.o -MD -MP -MF $(DEPDIR)/lib_libdora_a-worker.Tpo -c -o lib_libdora_a-worker.o `test -f '$(SD)/worker.cpp' || echo '$(srcdir)/'`$(SD)/worker.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-worker.Tpo $(DEPDIR)/lib_libdora_a-worker.Po
#	$(AM_V_CXX)source='$(SD)/worker.cpp' object='lib_libdora_a-worker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-worker.o `test -f '$(SD)/worker.cpp' || echo '$(srcdir)/'`$(SD)/worker.cpp

lib_libdora_a-worker.obj: $(SD)/worker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-worker.obj -MD -MP -MF $(DEPDIR)/lib_libdora_a-worker.Tpo -c -o lib_libdora_a-worker.obj `if test -f '$(SD)/worker.cpp'; then $(CYGPATH_W) '$(SD)/worker.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/worker.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-worker.Tpo $(DEPDIR)/lib_libdora_a-worker.Po
#	$(AM_V_CXX)source='$(SD)/worker.cpp' object='lib_libdora_a-worker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-worker.obj `if test -f '$(SD)/worker.cpp'; then $(CYGPATH_W) '$(SD)/worker.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/worker.cpp'; fi`

lib_libdora_a-part_table.o: $(SD)/part_table.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-part_table.o -MD -MP -MF $(DEPDIR)/lib_libdora_a-part_table.Tpo -c -o lib_libdora_a-part_table.o `test -f '$(SD)/part_table.cpp' || echo '$(srcdir)/'`$(SD)/part_table.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-part_table.Tpo $(DEPDIR)/lib_libdora_a-part_table.Po
#	$(AM_V_CXX)source='$(SD)/part_table.cpp' object='lib_libdora_a-part_table.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-part_table.o `test -f '$(SD)/part_table.cpp' || echo '$(srcdir)/'`$(SD)/part_table.cpp

lib_libdora_a-part_table.obj: $(SD)/part_table.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-part_table.obj -MD -MP -MF $(DEPDIR)/lib_libdora_a-part_table.Tpo -c -o lib_libdora_a-part_table.obj `if test -f '$(SD)/part_table.cpp'; then $(CYGPATH_W) '$(SD)/part_table.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/part_table.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-part_table.Tpo $(DEPDIR)/lib_libdora_a-part_table.Po
#	$(AM_V_CXX)source='$(SD)/part_table.cpp' object='lib_libdora_a-part_table.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-part_table.obj `if test -f '$(SD)/part_table.cpp'; then $(CYGPATH_W) '$(SD)/part_table.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/part_table.cpp'; fi`

lib_libdora_a-range_part_table.o: $(SD)/range_part_table.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-range_part_table.o -MD -MP -MF $(DEPDIR)/lib_libdora_a-range_part_table.Tpo -c -o lib_libdora_a-range_part_table.o `test -f '$(SD)/range_part_table.cpp' || echo '$(srcdir)/'`$(SD)/range_part_table.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-range_part_table.Tpo $(DEPDIR)/lib_libdora_a-range_part_table.Po
#	$(AM_V_CXX)source='$(SD)/range_part_table.cpp' object='lib_libdora_a-range_part_table.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-range_part_table.o `test -f '$(SD)/range_part_table.cpp' || echo '$(srcdir)/'`$(SD)/range_part_table.cpp

lib_libdora_a-range_part_table.obj: $(SD)/range_part_table.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-range_part_table.obj -MD -MP -MF $(DEPDIR)/lib_libdora_a-range_part_table.Tpo -c -o lib_libdora_a-range_part_table.obj `if test -f '$(SD)/range_part_table.cpp'; then $(CYGPATH_W) '$(SD)/range_part_table.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/range_part_table.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-range_part_table.Tpo $(DEPDIR)/lib_libdora_a-range_part_table.Po
#	$(AM_V_CXX)source='$(SD)/range_part_table.cpp' object='lib_libdora_a-range_part_table.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-range_part_table.obj `if test -f '$(SD)/range_part_table.cpp'; then $(CYGPATH_W) '$(SD)/range_part_table.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/range_part_table.cpp'; fi`

lib_libdora_a-dora_env.o: $(SD)/dora_env.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-dora_env.o -MD -MP -MF $(DEPDIR)/lib_libdora_a-dora_env.Tpo -c -o lib_libdora_a-dora_env.o `test -f '$(SD)/dora_env.cpp' || echo '$(srcdir)/'`$(SD)/dora_env.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-dora_env.Tpo $(DEPDIR)/lib_libdora_a-dora_env.Po
#	$(AM_V_CXX)source='$(SD)/dora_env.cpp' object='lib_libdora_a-dora_env.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-dora_env.o `test -f '$(SD)/dora_env.cpp' || echo '$(srcdir)/'`$(SD)/dora_env.cpp

lib_libdora_a-dora_env.obj: $(SD)/dora_env.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libdora_a-dora_env.obj -MD -MP -MF $(DEPDIR)/lib_libdora_a-dora_env.Tpo -c -o lib_libdora_a-dora_env.obj `if test -f '$(SD)/dora_env.cpp'; then $(CYGPATH_W) '$(SD)/dora_env.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/dora_env.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libdora_a-dora_env.Tpo $(DEPDIR)/lib_libdora_a-dora_env.Po
#	$(AM_V_CXX)source='$(SD)/dora_env.cpp' object='lib_libdora_a-dora_env.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libdora_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libdora_a-dora_env.obj `if test -f '$(SD)/dora_env.cpp'; then $(CYGPATH_W) '$(SD)/dora_env.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SD)/dora_env.cpp'; fi`

dora_payment.o: $(SDW)/tpcc/dora_payment.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_payment.o -MD -MP -MF $(DEPDIR)/dora_payment.Tpo -c -o dora_payment.o `test -f '$(SDW)/tpcc/dora_payment.cpp' || echo '$(srcdir)/'`$(SDW)/tpcc/dora_payment.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_payment.Tpo $(DEPDIR)/dora_payment.Po
#	$(AM_V_CXX)source='$(SDW)/tpcc/dora_payment.cpp' object='dora_payment.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_payment.o `test -f '$(SDW)/tpcc/dora_payment.cpp' || echo '$(srcdir)/'`$(SDW)/tpcc/dora_payment.cpp

dora_payment.obj: $(SDW)/tpcc/dora_payment.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_payment.obj -MD -MP -MF $(DEPDIR)/dora_payment.Tpo -c -o dora_payment.obj `if test -f '$(SDW)/tpcc/dora_payment.cpp'; then $(CYGPATH_W) '$(SDW)/tpcc/dora_payment.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcc/dora_payment.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_payment.Tpo $(DEPDIR)/dora_payment.Po
#	$(AM_V_CXX)source='$(SDW)/tpcc/dora_payment.cpp' object='dora_payment.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_payment.obj `if test -f '$(SDW)/tpcc/dora_payment.cpp'; then $(CYGPATH_W) '$(SDW)/tpcc/dora_payment.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcc/dora_payment.cpp'; fi`

dora_new_order.o: $(SDW)/tpcc/dora_new_order.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_new_order.o -MD -MP -MF $(DEPDIR)/dora_new_order.Tpo -c -o dora_new_order.o `test -f '$(SDW)/tpcc/dora_new_order.cpp' || echo '$(srcdir)/'`$(SDW)/tpcc/dora_new_order.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_new_order.Tpo $(DEPDIR)/dora_new_order.Po
#	$(AM_V_CXX)source='$(SDW)/tpcc/dora_new_order.cpp' object='dora_new_order.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_new_order.o `test -f '$(SDW)/tpcc/dora_new_order.cpp' || echo '$(srcdir)/'`$(SDW)/tpcc/dora_new_order.cpp

dora_new_order.obj: $(SDW)/tpcc/dora_new_order.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_new_order.obj -MD -MP -MF $(DEPDIR)/dora_new_order.Tpo -c -o dora_new_order.obj `if test -f '$(SDW)/tpcc/dora_new_order.cpp'; then $(CYGPATH_W) '$(SDW)/tpcc/dora_new_order.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcc/dora_new_order.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_new_order.Tpo $(DEPDIR)/dora_new_order.Po
#	$(AM_V_CXX)source='$(SDW)/tpcc/dora_new_order.cpp' object='dora_new_order.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_new_order.obj `if test -f '$(SDW)/tpcc/dora_new_order.cpp'; then $(CYGPATH_W) '$(SDW)/tpcc/dora_new_order.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcc/dora_new_order.cpp'; fi`

dora_order_status.o: $(SDW)/tpcc/dora_order_status.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_order_status.o -MD -MP -MF $(DEPDIR)/dora_order_status.Tpo -c -o dora_order_status.o `test -f '$(SDW)/tpcc/dora_order_status.cpp' || echo '$(srcdir)/'`$(SDW)/tpcc/dora_order_status.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_order_status.Tpo $(DEPDIR)/dora_order_status.Po
#	$(AM_V_CXX)source='$(SDW)/tpcc/dora_order_status.cpp' object='dora_order_status.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_order_status.o `test -f '$(SDW)/tpcc/dora_order_status.cpp' || echo '$(srcdir)/'`$(SDW)/tpcc/dora_order_status.cpp

dora_order_status.obj: $(SDW)/tpcc/dora_order_status.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_order_status.obj -MD -MP -MF $(DEPDIR)/dora_order_status.Tpo -c -o dora_order_status.obj `if test -f '$(SDW)/tpcc/dora_order_status.cpp'; then $(CYGPATH_W) '$(SDW)/tpcc/dora_order_status.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcc/dora_order_status.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_order_status.Tpo $(DEPDIR)/dora_order_status.Po
#	$(AM_V_CXX)source='$(SDW)/tpcc/dora_order_status.cpp' object='dora_order_status.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_order_status.obj `if test -f '$(SDW)/tpcc/dora_order_status.cpp'; then $(CYGPATH_W) '$(SDW)/tpcc/dora_order_status.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcc/dora_order_status.cpp'; fi`

dora_stock_level.o: $(SDW)/tpcc/dora_stock_level.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_stock_level.o -MD -MP -MF $(DEPDIR)/dora_stock_level.Tpo -c -o dora_stock_level.o `test -f '$(SDW)/tpcc/dora_stock_level.cpp' || echo '$(srcdir)/'`$(SDW)/tpcc/dora_stock_level.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_stock_level.Tpo $(DEPDIR)/dora_stock_level.Po
#	$(AM_V_CXX)source='$(SDW)/tpcc/dora_stock_level.cpp' object='dora_stock_level.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_stock_level.o `test -f '$(SDW)/tpcc/dora_stock_level.cpp' || echo '$(srcdir)/'`$(SDW)/tpcc/dora_stock_level.cpp

dora_stock_level.obj: $(SDW)/tpcc/dora_stock_level.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_stock_level.obj -MD -MP -MF $(DEPDIR)/dora_stock_level.Tpo -c -o dora_stock_level.obj `if test -f '$(SDW)/tpcc/dora_stock_level.cpp'; then $(CYGPATH_W) '$(SDW)/tpcc/dora_stock_level.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcc/dora_stock_level.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_stock_level.Tpo $(DEPDIR)/dora_stock_level.Po
#	$(AM_V_CXX)source='$(SDW)/tpcc/dora_stock_level.cpp' object='dora_stock_level.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_stock_level.obj `if test -f '$(SDW)/tpcc/dora_stock_level.cpp'; then $(CYGPATH_W) '$(SDW)/tpcc/dora_stock_level.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcc/dora_stock_level.cpp'; fi`

dora_delivery.o: $(SDW)/tpcc/dora_delivery.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_delivery.o -MD -MP -MF $(DEPDIR)/dora_delivery.Tpo -c -o dora_delivery.o `test -f '$(SDW)/tpcc/dora_delivery.cpp' || echo '$(srcdir)/'`$(SDW)/tpcc/dora_delivery.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_delivery.Tpo $(DEPDIR)/dora_delivery.Po
#	$(AM_V_CXX)source='$(SDW)/tpcc/dora_delivery.cpp' object='dora_delivery.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_delivery.o `test -f '$(SDW)/tpcc/dora_delivery.cpp' || echo '$(srcdir)/'`$(SDW)/tpcc/dora_delivery.cpp

dora_delivery.obj: $(SDW)/tpcc/dora_delivery.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_delivery.obj -MD -MP -MF $(DEPDIR)/dora_delivery.Tpo -c -o dora_delivery.obj `if test -f '$(SDW)/tpcc/dora_delivery.cpp'; then $(CYGPATH_W) '$(SDW)/tpcc/dora_delivery.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcc/dora_delivery.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_delivery.Tpo $(DEPDIR)/dora_delivery.Po
#	$(AM_V_CXX)source='$(SDW)/tpcc/dora_delivery.cpp' object='dora_delivery.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_delivery.obj `if test -f '$(SDW)/tpcc/dora_delivery.cpp'; then $(CYGPATH_W) '$(SDW)/tpcc/dora_delivery.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcc/dora_delivery.cpp'; fi`

dora_mbench.o: $(SDW)/tpcc/dora_mbench.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_mbench.o -MD -MP -MF $(DEPDIR)/dora_mbench.Tpo -c -o dora_mbench.o `test -f '$(SDW)/tpcc/dora_mbench.cpp' || echo '$(srcdir)/'`$(SDW)/tpcc/dora_mbench.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_mbench.Tpo $(DEPDIR)/dora_mbench.Po
#	$(AM_V_CXX)source='$(SDW)/tpcc/dora_mbench.cpp' object='dora_mbench.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_mbench.o `test -f '$(SDW)/tpcc/dora_mbench.cpp' || echo '$(srcdir)/'`$(SDW)/tpcc/dora_mbench.cpp

dora_mbench.obj: $(SDW)/tpcc/dora_mbench.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_mbench.obj -MD -MP -MF $(DEPDIR)/dora_mbench.Tpo -c -o dora_mbench.obj `if test -f '$(SDW)/tpcc/dora_mbench.cpp'; then $(CYGPATH_W) '$(SDW)/tpcc/dora_mbench.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcc/dora_mbench.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_mbench.Tpo $(DEPDIR)/dora_mbench.Po
#	$(AM_V_CXX)source='$(SDW)/tpcc/dora_mbench.cpp' object='dora_mbench.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_mbench.obj `if test -f '$(SDW)/tpcc/dora_mbench.cpp'; then $(CYGPATH_W) '$(SDW)/tpcc/dora_mbench.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcc/dora_mbench.cpp'; fi`

dora_tpcc.o: $(SDW)/tpcc/dora_tpcc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tpcc.o -MD -MP -MF $(DEPDIR)/dora_tpcc.Tpo -c -o dora_tpcc.o `test -f '$(SDW)/tpcc/dora_tpcc.cpp' || echo '$(srcdir)/'`$(SDW)/tpcc/dora_tpcc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tpcc.Tpo $(DEPDIR)/dora_tpcc.Po
#	$(AM_V_CXX)source='$(SDW)/tpcc/dora_tpcc.cpp' object='dora_tpcc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tpcc.o `test -f '$(SDW)/tpcc/dora_tpcc.cpp' || echo '$(srcdir)/'`$(SDW)/tpcc/dora_tpcc.cpp

dora_tpcc.obj: $(SDW)/tpcc/dora_tpcc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tpcc.obj -MD -MP -MF $(DEPDIR)/dora_tpcc.Tpo -c -o dora_tpcc.obj `if test -f '$(SDW)/tpcc/dora_tpcc.cpp'; then $(CYGPATH_W) '$(SDW)/tpcc/dora_tpcc.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcc/dora_tpcc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tpcc.Tpo $(DEPDIR)/dora_tpcc.Po
#	$(AM_V_CXX)source='$(SDW)/tpcc/dora_tpcc.cpp' object='dora_tpcc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tpcc.obj `if test -f '$(SDW)/tpcc/dora_tpcc.cpp'; then $(CYGPATH_W) '$(SDW)/tpcc/dora_tpcc.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcc/dora_tpcc.cpp'; fi`

dora_tpcc_xct.o: $(SDW)/tpcc/dora_tpcc_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tpcc_xct.o -MD -MP -MF $(DEPDIR)/dora_tpcc_xct.Tpo -c -o dora_tpcc_xct.o `test -f '$(SDW)/tpcc/dora_tpcc_xct.cpp' || echo '$(srcdir)/'`$(SDW)/tpcc/dora_tpcc_xct.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tpcc_xct.Tpo $(DEPDIR)/dora_tpcc_xct.Po
#	$(AM_V_CXX)source='$(SDW)/tpcc/dora_tpcc_xct.cpp' object='dora_tpcc_xct.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tpcc_xct.o `test -f '$(SDW)/tpcc/dora_tpcc_xct.cpp' || echo '$(srcdir)/'`$(SDW)/tpcc/dora_tpcc_xct.cpp

dora_tpcc_xct.obj: $(SDW)/tpcc/dora_tpcc_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tpcc_xct.obj -MD -MP -MF $(DEPDIR)/dora_tpcc_xct.Tpo -c -o dora_tpcc_xct.obj `if test -f '$(SDW)/tpcc/dora_tpcc_xct.cpp'; then $(CYGPATH_W) '$(SDW)/tpcc/dora_tpcc_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcc/dora_tpcc_xct.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tpcc_xct.Tpo $(DEPDIR)/dora_tpcc_xct.Po
#	$(AM_V_CXX)source='$(SDW)/tpcc/dora_tpcc_xct.cpp' object='dora_tpcc_xct.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tpcc_xct.obj `if test -f '$(SDW)/tpcc/dora_tpcc_xct.cpp'; then $(CYGPATH_W) '$(SDW)/tpcc/dora_tpcc_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcc/dora_tpcc_xct.cpp'; fi`

dora_tpcc_client.o: $(SDW)/tpcc/dora_tpcc_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tpcc_client.o -MD -MP -MF $(DEPDIR)/dora_tpcc_client.Tpo -c -o dora_tpcc_client.o `test -f '$(SDW)/tpcc/dora_tpcc_client.cpp' || echo '$(srcdir)/'`$(SDW)/tpcc/dora_tpcc_client.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tpcc_client.Tpo $(DEPDIR)/dora_tpcc_client.Po
#	$(AM_V_CXX)source='$(SDW)/tpcc/dora_tpcc_client.cpp' object='dora_tpcc_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tpcc_client.o `test -f '$(SDW)/tpcc/dora_tpcc_client.cpp' || echo '$(srcdir)/'`$(SDW)/tpcc/dora_tpcc_client.cpp

dora_tpcc_client.obj: $(SDW)/tpcc/dora_tpcc_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tpcc_client.obj -MD -MP -MF $(DEPDIR)/dora_tpcc_client.Tpo -c -o dora_tpcc_client.obj `if test -f '$(SDW)/tpcc/dora_tpcc_client.cpp'; then $(CYGPATH_W) '$(SDW)/tpcc/dora_tpcc_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcc/dora_tpcc_client.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tpcc_client.Tpo $(DEPDIR)/dora_tpcc_client.Po
#	$(AM_V_CXX)source='$(SDW)/tpcc/dora_tpcc_client.cpp' object='dora_tpcc_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tpcc_client.obj `if test -f '$(SDW)/tpcc/dora_tpcc_client.cpp'; then $(CYGPATH_W) '$(SDW)/tpcc/dora_tpcc_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcc/dora_tpcc_client.cpp'; fi`

dora_tm1_impl.o: $(SDW)/tm1/dora_tm1_impl.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tm1_impl.o -MD -MP -MF $(DEPDIR)/dora_tm1_impl.Tpo -c -o dora_tm1_impl.o `test -f '$(SDW)/tm1/dora_tm1_impl.cpp' || echo '$(srcdir)/'`$(SDW)/tm1/dora_tm1_impl.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tm1_impl.Tpo $(DEPDIR)/dora_tm1_impl.Po
#	$(AM_V_CXX)source='$(SDW)/tm1/dora_tm1_impl.cpp' object='dora_tm1_impl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tm1_impl.o `test -f '$(SDW)/tm1/dora_tm1_impl.cpp' || echo '$(srcdir)/'`$(SDW)/tm1/dora_tm1_impl.cpp

dora_tm1_impl.obj: $(SDW)/tm1/dora_tm1_impl.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tm1_impl.obj -MD -MP -MF $(DEPDIR)/dora_tm1_impl.Tpo -c -o dora_tm1_impl.obj `if test -f '$(SDW)/tm1/dora_tm1_impl.cpp'; then $(CYGPATH_W) '$(SDW)/tm1/dora_tm1_impl.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tm1/dora_tm1_impl.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tm1_impl.Tpo $(DEPDIR)/dora_tm1_impl.Po
#	$(AM_V_CXX)source='$(SDW)/tm1/dora_tm1_impl.cpp' object='dora_tm1_impl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tm1_impl.obj `if test -f '$(SDW)/tm1/dora_tm1_impl.cpp'; then $(CYGPATH_W) '$(SDW)/tm1/dora_tm1_impl.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tm1/dora_tm1_impl.cpp'; fi`

dora_tm1.o: $(SDW)/tm1/dora_tm1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tm1.o -MD -MP -MF $(DEPDIR)/dora_tm1.Tpo -c -o dora_tm1.o `test -f '$(SDW)/tm1/dora_tm1.cpp' || echo '$(srcdir)/'`$(SDW)/tm1/dora_tm1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tm1.Tpo $(DEPDIR)/dora_tm1.Po
#	$(AM_V_CXX)source='$(SDW)/tm1/dora_tm1.cpp' object='dora_tm1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tm1.o `test -f '$(SDW)/tm1/dora_tm1.cpp' || echo '$(srcdir)/'`$(SDW)/tm1/dora_tm1.cpp

dora_tm1.obj: $(SDW)/tm1/dora_tm1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tm1.obj -MD -MP -MF $(DEPDIR)/dora_tm1.Tpo -c -o dora_tm1.obj `if test -f '$(SDW)/tm1/dora_tm1.cpp'; then $(CYGPATH_W) '$(SDW)/tm1/dora_tm1.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tm1/dora_tm1.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tm1.Tpo $(DEPDIR)/dora_tm1.Po
#	$(AM_V_CXX)source='$(SDW)/tm1/dora_tm1.cpp' object='dora_tm1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tm1.obj `if test -f '$(SDW)/tm1/dora_tm1.cpp'; then $(CYGPATH_W) '$(SDW)/tm1/dora_tm1.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tm1/dora_tm1.cpp'; fi`

dora_tm1_xct.o: $(SDW)/tm1/dora_tm1_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tm1_xct.o -MD -MP -MF $(DEPDIR)/dora_tm1_xct.Tpo -c -o dora_tm1_xct.o `test -f '$(SDW)/tm1/dora_tm1_xct.cpp' || echo '$(srcdir)/'`$(SDW)/tm1/dora_tm1_xct.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tm1_xct.Tpo $(DEPDIR)/dora_tm1_xct.Po
#	$(AM_V_CXX)source='$(SDW)/tm1/dora_tm1_xct.cpp' object='dora_tm1_xct.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tm1_xct.o `test -f '$(SDW)/tm1/dora_tm1_xct.cpp' || echo '$(srcdir)/'`$(SDW)/tm1/dora_tm1_xct.cpp

dora_tm1_xct.obj: $(SDW)/tm1/dora_tm1_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tm1_xct.obj -MD -MP -MF $(DEPDIR)/dora_tm1_xct.Tpo -c -o dora_tm1_xct.obj `if test -f '$(SDW)/tm1/dora_tm1_xct.cpp'; then $(CYGPATH_W) '$(SDW)/tm1/dora_tm1_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tm1/dora_tm1_xct.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tm1_xct.Tpo $(DEPDIR)/dora_tm1_xct.Po
#	$(AM_V_CXX)source='$(SDW)/tm1/dora_tm1_xct.cpp' object='dora_tm1_xct.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tm1_xct.obj `if test -f '$(SDW)/tm1/dora_tm1_xct.cpp'; then $(CYGPATH_W) '$(SDW)/tm1/dora_tm1_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tm1/dora_tm1_xct.cpp'; fi`

dora_tm1_client.o: $(SDW)/tm1/dora_tm1_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tm1_client.o -MD -MP -MF $(DEPDIR)/dora_tm1_client.Tpo -c -o dora_tm1_client.o `test -f '$(SDW)/tm1/dora_tm1_client.cpp' || echo '$(srcdir)/'`$(SDW)/tm1/dora_tm1_client.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tm1_client.Tpo $(DEPDIR)/dora_tm1_client.Po
#	$(AM_V_CXX)source='$(SDW)/tm1/dora_tm1_client.cpp' object='dora_tm1_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tm1_client.o `test -f '$(SDW)/tm1/dora_tm1_client.cpp' || echo '$(srcdir)/'`$(SDW)/tm1/dora_tm1_client.cpp

dora_tm1_client.obj: $(SDW)/tm1/dora_tm1_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tm1_client.obj -MD -MP -MF $(DEPDIR)/dora_tm1_client.Tpo -c -o dora_tm1_client.obj `if test -f '$(SDW)/tm1/dora_tm1_client.cpp'; then $(CYGPATH_W) '$(SDW)/tm1/dora_tm1_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tm1/dora_tm1_client.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tm1_client.Tpo $(DEPDIR)/dora_tm1_client.Po
#	$(AM_V_CXX)source='$(SDW)/tm1/dora_tm1_client.cpp' object='dora_tm1_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tm1_client.obj `if test -f '$(SDW)/tm1/dora_tm1_client.cpp'; then $(CYGPATH_W) '$(SDW)/tm1/dora_tm1_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tm1/dora_tm1_client.cpp'; fi`

dora_tpcb_impl.o: $(SDW)/tpcb/dora_tpcb_impl.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tpcb_impl.o -MD -MP -MF $(DEPDIR)/dora_tpcb_impl.Tpo -c -o dora_tpcb_impl.o `test -f '$(SDW)/tpcb/dora_tpcb_impl.cpp' || echo '$(srcdir)/'`$(SDW)/tpcb/dora_tpcb_impl.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tpcb_impl.Tpo $(DEPDIR)/dora_tpcb_impl.Po
#	$(AM_V_CXX)source='$(SDW)/tpcb/dora_tpcb_impl.cpp' object='dora_tpcb_impl.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tpcb_impl.o `test -f '$(SDW)/tpcb/dora_tpcb_impl.cpp' || echo '$(srcdir)/'`$(SDW)/tpcb/dora_tpcb_impl.cpp

dora_tpcb_impl.obj: $(SDW)/tpcb/dora_tpcb_impl.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tpcb_impl.obj -MD -MP -MF $(DEPDIR)/dora_tpcb_impl.Tpo -c -o dora_tpcb_impl.obj `if test -f '$(SDW)/tpcb/dora_tpcb_impl.cpp'; then $(CYGPATH_W) '$(SDW)/tpcb/dora_tpcb_impl.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcb/dora_tpcb_impl.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tpcb_impl.Tpo $(DEPDIR)/dora_tpcb_impl.Po
#	$(AM_V_CXX)source='$(SDW)/tpcb/dora_tpcb_impl.cpp' object='dora_tpcb_impl.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tpcb_impl.obj `if test -f '$(SDW)/tpcb/dora_tpcb_impl.cpp'; then $(CYGPATH_W) '$(SDW)/tpcb/dora_tpcb_impl.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcb/dora_tpcb_impl.cpp'; fi`

dora_tpcb.o: $(SDW)/tpcb/dora_tpcb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tpcb.o -MD -MP -MF $(DEPDIR)/dora_tpcb.Tpo -c -o dora_tpcb.o `test -f '$(SDW)/tpcb/dora_tpcb.cpp' || echo '$(srcdir)/'`$(SDW)/tpcb/dora_tpcb.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tpcb.Tpo $(DEPDIR)/dora_tpcb.Po
#	$(AM_V_CXX)source='$(SDW)/tpcb/dora_tpcb.cpp' object='dora_tpcb.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tpcb.o `test -f '$(SDW)/tpcb/dora_tpcb.cpp' || echo '$(srcdir)/'`$(SDW)/tpcb/dora_tpcb.cpp

dora_tpcb.obj: $(SDW)/tpcb/dora_tpcb.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tpcb.obj -MD -MP -MF $(DEPDIR)/dora_tpcb.Tpo -c -o dora_tpcb.obj `if test -f '$(SDW)/tpcb/dora_tpcb.cpp'; then $(CYGPATH_W) '$(SDW)/tpcb/dora_tpcb.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcb/dora_tpcb.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tpcb.Tpo $(DEPDIR)/dora_tpcb.Po
#	$(AM_V_CXX)source='$(SDW)/tpcb/dora_tpcb.cpp' object='dora_tpcb.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tpcb.obj `if test -f '$(SDW)/tpcb/dora_tpcb.cpp'; then $(CYGPATH_W) '$(SDW)/tpcb/dora_tpcb.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcb/dora_tpcb.cpp'; fi`

dora_tpcb_xct.o: $(SDW)/tpcb/dora_tpcb_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tpcb_xct.o -MD -MP -MF $(DEPDIR)/dora_tpcb_xct.Tpo -c -o dora_tpcb_xct.o `test -f '$(SDW)/tpcb/dora_tpcb_xct.cpp' || echo '$(srcdir)/'`$(SDW)/tpcb/dora_tpcb_xct.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tpcb_xct.Tpo $(DEPDIR)/dora_tpcb_xct.Po
#	$(AM_V_CXX)source='$(SDW)/tpcb/dora_tpcb_xct.cpp' object='dora_tpcb_xct.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tpcb_xct.o `test -f '$(SDW)/tpcb/dora_tpcb_xct.cpp' || echo '$(srcdir)/'`$(SDW)/tpcb/dora_tpcb_xct.cpp

dora_tpcb_xct.obj: $(SDW)/tpcb/dora_tpcb_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tpcb_xct.obj -MD -MP -MF $(DEPDIR)/dora_tpcb_xct.Tpo -c -o dora_tpcb_xct.obj `if test -f '$(SDW)/tpcb/dora_tpcb_xct.cpp'; then $(CYGPATH_W) '$(SDW)/tpcb/dora_tpcb_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcb/dora_tpcb_xct.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tpcb_xct.Tpo $(DEPDIR)/dora_tpcb_xct.Po
#	$(AM_V_CXX)source='$(SDW)/tpcb/dora_tpcb_xct.cpp' object='dora_tpcb_xct.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tpcb_xct.obj `if test -f '$(SDW)/tpcb/dora_tpcb_xct.cpp'; then $(CYGPATH_W) '$(SDW)/tpcb/dora_tpcb_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcb/dora_tpcb_xct.cpp'; fi`

dora_tpcb_client.o: $(SDW)/tpcb/dora_tpcb_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tpcb_client.o -MD -MP -MF $(DEPDIR)/dora_tpcb_client.Tpo -c -o dora_tpcb_client.o `test -f '$(SDW)/tpcb/dora_tpcb_client.cpp' || echo '$(srcdir)/'`$(SDW)/tpcb/dora_tpcb_client.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tpcb_client.Tpo $(DEPDIR)/dora_tpcb_client.Po
#	$(AM_V_CXX)source='$(SDW)/tpcb/dora_tpcb_client.cpp' object='dora_tpcb_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tpcb_client.o `test -f '$(SDW)/tpcb/dora_tpcb_client.cpp' || echo '$(srcdir)/'`$(SDW)/tpcb/dora_tpcb_client.cpp

dora_tpcb_client.obj: $(SDW)/tpcb/dora_tpcb_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dora_tpcb_client.obj -MD -MP -MF $(DEPDIR)/dora_tpcb_client.Tpo -c -o dora_tpcb_client.obj `if test -f '$(SDW)/tpcb/dora_tpcb_client.cpp'; then $(CYGPATH_W) '$(SDW)/tpcb/dora_tpcb_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcb/dora_tpcb_client.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dora_tpcb_client.Tpo $(DEPDIR)/dora_tpcb_client.Po
#	$(AM_V_CXX)source='$(SDW)/tpcb/dora_tpcb_client.cpp' object='dora_tpcb_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dora_tpcb_client.obj `if test -f '$(SDW)/tpcb/dora_tpcb_client.cpp'; then $(CYGPATH_W) '$(SDW)/tpcb/dora_tpcb_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SDW)/tpcb/dora_tpcb_client.cpp'; fi`

cpu_set.o: $(SQP)/scheduler/cpu_set.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cpu_set.o -MD -MP -MF $(DEPDIR)/cpu_set.Tpo -c -o cpu_set.o `test -f '$(SQP)/scheduler/cpu_set.cpp' || echo '$(srcdir)/'`$(SQP)/scheduler/cpu_set.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/cpu_set.Tpo $(DEPDIR)/cpu_set.Po
#	$(AM_V_CXX)source='$(SQP)/scheduler/cpu_set.cpp' object='cpu_set.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cpu_set.o `test -f '$(SQP)/scheduler/cpu_set.cpp' || echo '$(srcdir)/'`$(SQP)/scheduler/cpu_set.cpp

cpu_set.obj: $(SQP)/scheduler/cpu_set.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cpu_set.obj -MD -MP -MF $(DEPDIR)/cpu_set.Tpo -c -o cpu_set.obj `if test -f '$(SQP)/scheduler/cpu_set.cpp'; then $(CYGPATH_W) '$(SQP)/scheduler/cpu_set.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/scheduler/cpu_set.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cpu_set.Tpo $(DEPDIR)/cpu_set.Po
#	$(AM_V_CXX)source='$(SQP)/scheduler/cpu_set.cpp' object='cpu_set.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cpu_set.obj `if test -f '$(SQP)/scheduler/cpu_set.cpp'; then $(CYGPATH_W) '$(SQP)/scheduler/cpu_set.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/scheduler/cpu_set.cpp'; fi`

cpu.o: $(SQP)/scheduler/cpu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cpu.o -MD -MP -MF $(DEPDIR)/cpu.Tpo -c -o cpu.o `test -f '$(SQP)/scheduler/cpu.cpp' || echo '$(srcdir)/'`$(SQP)/scheduler/cpu.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/cpu.Tpo $(DEPDIR)/cpu.Po
#	$(AM_V_CXX)source='$(SQP)/scheduler/cpu.cpp' object='cpu.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cpu.o `test -f '$(SQP)/scheduler/cpu.cpp' || echo '$(srcdir)/'`$(SQP)/scheduler/cpu.cpp

cpu.obj: $(SQP)/scheduler/cpu.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT cpu.obj -MD -MP -MF $(DEPDIR)/cpu.Tpo -c -o cpu.obj `if test -f '$(SQP)/scheduler/cpu.cpp'; then $(CYGPATH_W) '$(SQP)/scheduler/cpu.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/scheduler/cpu.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/cpu.Tpo $(DEPDIR)/cpu.Po
#	$(AM_V_CXX)source='$(SQP)/scheduler/cpu.cpp' object='cpu.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o cpu.obj `if test -f '$(SQP)/scheduler/cpu.cpp'; then $(CYGPATH_W) '$(SQP)/scheduler/cpu.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/scheduler/cpu.cpp'; fi`

tuple_fifo_directory.o: $(SQP)/core/tuple_fifo_directory.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tuple_fifo_directory.o -MD -MP -MF $(DEPDIR)/tuple_fifo_directory.Tpo -c -o tuple_fifo_directory.o `test -f '$(SQP)/core/tuple_fifo_directory.cpp' || echo '$(srcdir)/'`$(SQP)/core/tuple_fifo_directory.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/tuple_fifo_directory.Tpo $(DEPDIR)/tuple_fifo_directory.Po
#	$(AM_V_CXX)source='$(SQP)/core/tuple_fifo_directory.cpp' object='tuple_fifo_directory.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tuple_fifo_directory.o `test -f '$(SQP)/core/tuple_fifo_directory.cpp' || echo '$(srcdir)/'`$(SQP)/core/tuple_fifo_directory.cpp

tuple_fifo_directory.obj: $(SQP)/core/tuple_fifo_directory.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tuple_fifo_directory.obj -MD -MP -MF $(DEPDIR)/tuple_fifo_directory.Tpo -c -o tuple_fifo_directory.obj `if test -f '$(SQP)/core/tuple_fifo_directory.cpp'; then $(CYGPATH_W) '$(SQP)/core/tuple_fifo_directory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/core/tuple_fifo_directory.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tuple_fifo_directory.Tpo $(DEPDIR)/tuple_fifo_directory.Po
#	$(AM_V_CXX)source='$(SQP)/core/tuple_fifo_directory.cpp' object='tuple_fifo_directory.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tuple_fifo_directory.obj `if test -f '$(SQP)/core/tuple_fifo_directory.cpp'; then $(CYGPATH_W) '$(SQP)/core/tuple_fifo_directory.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/core/tuple_fifo_directory.cpp'; fi`

stage_container.o: $(SQP)/core/stage_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stage_container.o -MD -MP -MF $(DEPDIR)/stage_container.Tpo -c -o stage_container.o `test -f '$(SQP)/core/stage_container.cpp' || echo '$(srcdir)/'`$(SQP)/core/stage_container.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/stage_container.Tpo $(DEPDIR)/stage_container.Po
#	$(AM_V_CXX)source='$(SQP)/core/stage_container.cpp' object='stage_container.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stage_container.o `test -f '$(SQP)/core/stage_container.cpp' || echo '$(srcdir)/'`$(SQP)/core/stage_container.cpp

stage_container.obj: $(SQP)/core/stage_container.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT stage_container.obj -MD -MP -MF $(DEPDIR)/stage_container.Tpo -c -o stage_container.obj `if test -f '$(SQP)/core/stage_container.cpp'; then $(CYGPATH_W) '$(SQP)/core/stage_container.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/core/stage_container.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/stage_container.Tpo $(DEPDIR)/stage_container.Po
#	$(AM_V_CXX)source='$(SQP)/core/stage_container.cpp' object='stage_container.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o stage_container.obj `if test -f '$(SQP)/core/stage_container.cpp'; then $(CYGPATH_W) '$(SQP)/core/stage_container.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/core/stage_container.cpp'; fi`

dispatcher.o: $(SQP)/core/dispatcher.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dispatcher.o -MD -MP -MF $(DEPDIR)/dispatcher.Tpo -c -o dispatcher.o `test -f '$(SQP)/core/dispatcher.cpp' || echo '$(srcdir)/'`$(SQP)/core/dispatcher.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/dispatcher.Tpo $(DEPDIR)/dispatcher.Po
#	$(AM_V_CXX)source='$(SQP)/core/dispatcher.cpp' object='dispatcher.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dispatcher.o `test -f '$(SQP)/core/dispatcher.cpp' || echo '$(srcdir)/'`$(SQP)/core/dispatcher.cpp

dispatcher.obj: $(SQP)/core/dispatcher.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dispatcher.obj -MD -MP -MF $(DEPDIR)/dispatcher.Tpo -c -o dispatcher.obj `if test -f '$(SQP)/core/dispatcher.cpp'; then $(CYGPATH_W) '$(SQP)/core/dispatcher.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/core/dispatcher.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/dispatcher.Tpo $(DEPDIR)/dispatcher.Po
#	$(AM_V_CXX)source='$(SQP)/core/dispatcher.cpp' object='dispatcher.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dispatcher.obj `if test -f '$(SQP)/core/dispatcher.cpp'; then $(CYGPATH_W) '$(SQP)/core/dispatcher.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/core/dispatcher.cpp'; fi`

packet.o: $(SQP)/core/packet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT packet.o -MD -MP -MF $(DEPDIR)/packet.Tpo -c -o packet.o `test -f '$(SQP)/core/packet.cpp' || echo '$(srcdir)/'`$(SQP)/core/packet.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/packet.Tpo $(DEPDIR)/packet.Po
#	$(AM_V_CXX)source='$(SQP)/core/packet.cpp' object='packet.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o packet.o `test -f '$(SQP)/core/packet.cpp' || echo '$(srcdir)/'`$(SQP)/core/packet.cpp

packet.obj: $(SQP)/core/packet.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT packet.obj -MD -MP -MF $(DEPDIR)/packet.Tpo -c -o packet.obj `if test -f '$(SQP)/core/packet.cpp'; then $(CYGPATH_W) '$(SQP)/core/packet.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/core/packet.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/packet.Tpo $(DEPDIR)/packet.Po
#	$(AM_V_CXX)source='$(SQP)/core/packet.cpp' object='packet.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o packet.obj `if test -f '$(SQP)/core/packet.cpp'; then $(CYGPATH_W) '$(SQP)/core/packet.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/core/packet.cpp'; fi`

tuple.o: $(SQP)/core/tuple.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tuple.o -MD -MP -MF $(DEPDIR)/tuple.Tpo -c -o tuple.o `test -f '$(SQP)/core/tuple.cpp' || echo '$(srcdir)/'`$(SQP)/core/tuple.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/tuple.Tpo $(DEPDIR)/tuple.Po
#	$(AM_V_CXX)source='$(SQP)/core/tuple.cpp' object='tuple.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tuple.o `test -f '$(SQP)/core/tuple.cpp' || echo '$(srcdir)/'`$(SQP)/core/tuple.cpp

tuple.obj: $(SQP)/core/tuple.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tuple.obj -MD -MP -MF $(DEPDIR)/tuple.Tpo -c -o tuple.obj `if test -f '$(SQP)/core/tuple.cpp'; then $(CYGPATH_W) '$(SQP)/core/tuple.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/core/tuple.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tuple.Tpo $(DEPDIR)/tuple.Po
#	$(AM_V_CXX)source='$(SQP)/core/tuple.cpp' object='tuple.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tuple.obj `if test -f '$(SQP)/core/tuple.cpp'; then $(CYGPATH_W) '$(SQP)/core/tuple.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/core/tuple.cpp'; fi`

tuple_fifo.o: $(SQP)/core/tuple_fifo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tuple_fifo.o -MD -MP -MF $(DEPDIR)/tuple_fifo.Tpo -c -o tuple_fifo.o `test -f '$(SQP)/core/tuple_fifo.cpp' || echo '$(srcdir)/'`$(SQP)/core/tuple_fifo.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/tuple_fifo.Tpo $(DEPDIR)/tuple_fifo.Po
#	$(AM_V_CXX)source='$(SQP)/core/tuple_fifo.cpp' object='tuple_fifo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tuple_fifo.o `test -f '$(SQP)/core/tuple_fifo.cpp' || echo '$(srcdir)/'`$(SQP)/core/tuple_fifo.cpp

tuple_fifo.obj: $(SQP)/core/tuple_fifo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tuple_fifo.obj -MD -MP -MF $(DEPDIR)/tuple_fifo.Tpo -c -o tuple_fifo.obj `if test -f '$(SQP)/core/tuple_fifo.cpp'; then $(CYGPATH_W) '$(SQP)/core/tuple_fifo.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/core/tuple_fifo.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tuple_fifo.Tpo $(DEPDIR)/tuple_fifo.Po
#	$(AM_V_CXX)source='$(SQP)/core/tuple_fifo.cpp' object='tuple_fifo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tuple_fifo.obj `if test -f '$(SQP)/core/tuple_fifo.cpp'; then $(CYGPATH_W) '$(SQP)/core/tuple_fifo.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/core/tuple_fifo.cpp'; fi`

merge.o: $(SQP)/stages/merge.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT merge.o -MD -MP -MF $(DEPDIR)/merge.Tpo -c -o merge.o `test -f '$(SQP)/stages/merge.cpp' || echo '$(srcdir)/'`$(SQP)/stages/merge.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/merge.Tpo $(DEPDIR)/merge.Po
#	$(AM_V_CXX)source='$(SQP)/stages/merge.cpp' object='merge.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o merge.o `test -f '$(SQP)/stages/merge.cpp' || echo '$(srcdir)/'`$(SQP)/stages/merge.cpp

merge.obj: $(SQP)/stages/merge.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT merge.obj -MD -MP -MF $(DEPDIR)/merge.Tpo -c -o merge.obj `if test -f '$(SQP)/stages/merge.cpp'; then $(CYGPATH_W) '$(SQP)/stages/merge.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/merge.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/merge.Tpo $(DEPDIR)/merge.Po
#	$(AM_V_CXX)source='$(SQP)/stages/merge.cpp' object='merge.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o merge.obj `if test -f '$(SQP)/stages/merge.cpp'; then $(CYGPATH_W) '$(SQP)/stages/merge.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/merge.cpp'; fi`

bnl_in.o: $(SQP)/stages/bnl_in.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bnl_in.o -MD -MP -MF $(DEPDIR)/bnl_in.Tpo -c -o bnl_in.o `test -f '$(SQP)/stages/bnl_in.cpp' || echo '$(srcdir)/'`$(SQP)/stages/bnl_in.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bnl_in.Tpo $(DEPDIR)/bnl_in.Po
#	$(AM_V_CXX)source='$(SQP)/stages/bnl_in.cpp' object='bnl_in.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bnl_in.o `test -f '$(SQP)/stages/bnl_in.cpp' || echo '$(srcdir)/'`$(SQP)/stages/bnl_in.cpp

bnl_in.obj: $(SQP)/stages/bnl_in.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bnl_in.obj -MD -MP -MF $(DEPDIR)/bnl_in.Tpo -c -o bnl_in.obj `if test -f '$(SQP)/stages/bnl_in.cpp'; then $(CYGPATH_W) '$(SQP)/stages/bnl_in.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/bnl_in.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bnl_in.Tpo $(DEPDIR)/bnl_in.Po
#	$(AM_V_CXX)source='$(SQP)/stages/bnl_in.cpp' object='bnl_in.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bnl_in.obj `if test -f '$(SQP)/stages/bnl_in.cpp'; then $(CYGPATH_W) '$(SQP)/stages/bnl_in.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/bnl_in.cpp'; fi`

hash_join.o: $(SQP)/stages/hash_join.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hash_join.o -MD -MP -MF $(DEPDIR)/hash_join.Tpo -c -o hash_join.o `test -f '$(SQP)/stages/hash_join.cpp' || echo '$(srcdir)/'`$(SQP)/stages/hash_join.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/hash_join.Tpo $(DEPDIR)/hash_join.Po
#	$(AM_V_CXX)source='$(SQP)/stages/hash_join.cpp' object='hash_join.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hash_join.o `test -f '$(SQP)/stages/hash_join.cpp' || echo '$(srcdir)/'`$(SQP)/stages/hash_join.cpp

hash_join.obj: $(SQP)/stages/hash_join.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hash_join.obj -MD -MP -MF $(DEPDIR)/hash_join.Tpo -c -o hash_join.obj `if test -f '$(SQP)/stages/hash_join.cpp'; then $(CYGPATH_W) '$(SQP)/stages/hash_join.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/hash_join.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hash_join.Tpo $(DEPDIR)/hash_join.Po
#	$(AM_V_CXX)source='$(SQP)/stages/hash_join.cpp' object='hash_join.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hash_join.obj `if test -f '$(SQP)/stages/hash_join.cpp'; then $(CYGPATH_W) '$(SQP)/stages/hash_join.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/hash_join.cpp'; fi`

partial_aggregate.o: $(SQP)/stages/partial_aggregate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT partial_aggregate.o -MD -MP -MF $(DEPDIR)/partial_aggregate.Tpo -c -o partial_aggregate.o `test -f '$(SQP)/stages/partial_aggregate.cpp' || echo '$(srcdir)/'`$(SQP)/stages/partial_aggregate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/partial_aggregate.Tpo $(DEPDIR)/partial_aggregate.Po
#	$(AM_V_CXX)source='$(SQP)/stages/partial_aggregate.cpp' object='partial_aggregate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o partial_aggregate.o `test -f '$(SQP)/stages/partial_aggregate.cpp' || echo '$(srcdir)/'`$(SQP)/stages/partial_aggregate.cpp

partial_aggregate.obj: $(SQP)/stages/partial_aggregate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT partial_aggregate.obj -MD -MP -MF $(DEPDIR)/partial_aggregate.Tpo -c -o partial_aggregate.obj `if test -f '$(SQP)/stages/partial_aggregate.cpp'; then $(CYGPATH_W) '$(SQP)/stages/partial_aggregate.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/partial_aggregate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/partial_aggregate.Tpo $(DEPDIR)/partial_aggregate.Po
#	$(AM_V_CXX)source='$(SQP)/stages/partial_aggregate.cpp' object='partial_aggregate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o partial_aggregate.obj `if test -f '$(SQP)/stages/partial_aggregate.cpp'; then $(CYGPATH_W) '$(SQP)/stages/partial_aggregate.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/partial_aggregate.cpp'; fi`

tscan.o: $(SQP)/stages/tscan.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tscan.o -MD -MP -MF $(DEPDIR)/tscan.Tpo -c -o tscan.o `test -f '$(SQP)/stages/tscan.cpp' || echo '$(srcdir)/'`$(SQP)/stages/tscan.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/tscan.Tpo $(DEPDIR)/tscan.Po
#	$(AM_V_CXX)source='$(SQP)/stages/tscan.cpp' object='tscan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tscan.o `test -f '$(SQP)/stages/tscan.cpp' || echo '$(srcdir)/'`$(SQP)/stages/tscan.cpp

tscan.obj: $(SQP)/stages/tscan.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tscan.obj -MD -MP -MF $(DEPDIR)/tscan.Tpo -c -o tscan.obj `if test -f '$(SQP)/stages/tscan.cpp'; then $(CYGPATH_W) '$(SQP)/stages/tscan.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/tscan.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tscan.Tpo $(DEPDIR)/tscan.Po
#	$(AM_V_CXX)source='$(SQP)/stages/tscan.cpp' object='tscan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tscan.obj `if test -f '$(SQP)/stages/tscan.cpp'; then $(CYGPATH_W) '$(SQP)/stages/tscan.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/tscan.cpp'; fi`

fdump.o: $(SQP)/stages/fdump.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fdump.o -MD -MP -MF $(DEPDIR)/fdump.Tpo -c -o fdump.o `test -f '$(SQP)/stages/fdump.cpp' || echo '$(srcdir)/'`$(SQP)/stages/fdump.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/fdump.Tpo $(DEPDIR)/fdump.Po
#	$(AM_V_CXX)source='$(SQP)/stages/fdump.cpp' object='fdump.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fdump.o `test -f '$(SQP)/stages/fdump.cpp' || echo '$(srcdir)/'`$(SQP)/stages/fdump.cpp

fdump.obj: $(SQP)/stages/fdump.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fdump.obj -MD -MP -MF $(DEPDIR)/fdump.Tpo -c -o fdump.obj `if test -f '$(SQP)/stages/fdump.cpp'; then $(CYGPATH_W) '$(SQP)/stages/fdump.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/fdump.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fdump.Tpo $(DEPDIR)/fdump.Po
#	$(AM_V_CXX)source='$(SQP)/stages/fdump.cpp' object='fdump.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fdump.obj `if test -f '$(SQP)/stages/fdump.cpp'; then $(CYGPATH_W) '$(SQP)/stages/fdump.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/fdump.cpp'; fi`

sieve.o: $(SQP)/stages/sieve.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sieve.o -MD -MP -MF $(DEPDIR)/sieve.Tpo -c -o sieve.o `test -f '$(SQP)/stages/sieve.cpp' || echo '$(srcdir)/'`$(SQP)/stages/sieve.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sieve.Tpo $(DEPDIR)/sieve.Po
#	$(AM_V_CXX)source='$(SQP)/stages/sieve.cpp' object='sieve.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sieve.o `test -f '$(SQP)/stages/sieve.cpp' || echo '$(srcdir)/'`$(SQP)/stages/sieve.cpp

sieve.obj: $(SQP)/stages/sieve.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sieve.obj -MD -MP -MF $(DEPDIR)/sieve.Tpo -c -o sieve.obj `if test -f '$(SQP)/stages/sieve.cpp'; then $(CYGPATH_W) '$(SQP)/stages/sieve.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/sieve.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sieve.Tpo $(DEPDIR)/sieve.Po
#	$(AM_V_CXX)source='$(SQP)/stages/sieve.cpp' object='sieve.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sieve.obj `if test -f '$(SQP)/stages/sieve.cpp'; then $(CYGPATH_W) '$(SQP)/stages/sieve.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/sieve.cpp'; fi`

echo.o: $(SQP)/stages/echo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT echo.o -MD -MP -MF $(DEPDIR)/echo.Tpo -c -o echo.o `test -f '$(SQP)/stages/echo.cpp' || echo '$(srcdir)/'`$(SQP)/stages/echo.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/echo.Tpo $(DEPDIR)/echo.Po
#	$(AM_V_CXX)source='$(SQP)/stages/echo.cpp' object='echo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o echo.o `test -f '$(SQP)/stages/echo.cpp' || echo '$(srcdir)/'`$(SQP)/stages/echo.cpp

echo.obj: $(SQP)/stages/echo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT echo.obj -MD -MP -MF $(DEPDIR)/echo.Tpo -c -o echo.obj `if test -f '$(SQP)/stages/echo.cpp'; then $(CYGPATH_W) '$(SQP)/stages/echo.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/echo.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/echo.Tpo $(DEPDIR)/echo.Po
#	$(AM_V_CXX)source='$(SQP)/stages/echo.cpp' object='echo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o echo.obj `if test -f '$(SQP)/stages/echo.cpp'; then $(CYGPATH_W) '$(SQP)/stages/echo.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/echo.cpp'; fi`

pipe_hash_join.o: $(SQP)/stages/pipe_hash_join.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pipe_hash_join.o -MD -MP -MF $(DEPDIR)/pipe_hash_join.Tpo -c -o pipe_hash_join.o `test -f '$(SQP)/stages/pipe_hash_join.cpp' || echo '$(srcdir)/'`$(SQP)/stages/pipe_hash_join.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/pipe_hash_join.Tpo $(DEPDIR)/pipe_hash_join.Po
#	$(AM_V_CXX)source='$(SQP)/stages/pipe_hash_join.cpp' object='pipe_hash_join.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pipe_hash_join.o `test -f '$(SQP)/stages/pipe_hash_join.cpp' || echo '$(srcdir)/'`$(SQP)/stages/pipe_hash_join.cpp

pipe_hash_join.obj: $(SQP)/stages/pipe_hash_join.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pipe_hash_join.obj -MD -MP -MF $(DEPDIR)/pipe_hash_join.Tpo -c -o pipe_hash_join.obj `if test -f '$(SQP)/stages/pipe_hash_join.cpp'; then $(CYGPATH_W) '$(SQP)/stages/pipe_hash_join.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/pipe_hash_join.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/pipe_hash_join.Tpo $(DEPDIR)/pipe_hash_join.Po
#	$(AM_V_CXX)source='$(SQP)/stages/pipe_hash_join.cpp' object='pipe_hash_join.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pipe_hash_join.obj `if test -f '$(SQP)/stages/pipe_hash_join.cpp'; then $(CYGPATH_W) '$(SQP)/stages/pipe_hash_join.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/pipe_hash_join.cpp'; fi`

aggregate.o: $(SQP)/stages/aggregate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aggregate.o -MD -MP -MF $(DEPDIR)/aggregate.Tpo -c -o aggregate.o `test -f '$(SQP)/stages/aggregate.cpp' || echo '$(srcdir)/'`$(SQP)/stages/aggregate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/aggregate.Tpo $(DEPDIR)/aggregate.Po
#	$(AM_V_CXX)source='$(SQP)/stages/aggregate.cpp' object='aggregate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aggregate.o `test -f '$(SQP)/stages/aggregate.cpp' || echo '$(srcdir)/'`$(SQP)/stages/aggregate.cpp

aggregate.obj: $(SQP)/stages/aggregate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT aggregate.obj -MD -MP -MF $(DEPDIR)/aggregate.Tpo -c -o aggregate.obj `if test -f '$(SQP)/stages/aggregate.cpp'; then $(CYGPATH_W) '$(SQP)/stages/aggregate.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/aggregate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/aggregate.Tpo $(DEPDIR)/aggregate.Po
#	$(AM_V_CXX)source='$(SQP)/stages/aggregate.cpp' object='aggregate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o aggregate.obj `if test -f '$(SQP)/stages/aggregate.cpp'; then $(CYGPATH_W) '$(SQP)/stages/aggregate.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/aggregate.cpp'; fi`

sorted_in.o: $(SQP)/stages/sorted_in.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sorted_in.o -MD -MP -MF $(DEPDIR)/sorted_in.Tpo -c -o sorted_in.o `test -f '$(SQP)/stages/sorted_in.cpp' || echo '$(srcdir)/'`$(SQP)/stages/sorted_in.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sorted_in.Tpo $(DEPDIR)/sorted_in.Po
#	$(AM_V_CXX)source='$(SQP)/stages/sorted_in.cpp' object='sorted_in.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sorted_in.o `test -f '$(SQP)/stages/sorted_in.cpp' || echo '$(srcdir)/'`$(SQP)/stages/sorted_in.cpp

sorted_in.obj: $(SQP)/stages/sorted_in.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sorted_in.obj -MD -MP -MF $(DEPDIR)/sorted_in.Tpo -c -o sorted_in.obj `if test -f '$(SQP)/stages/sorted_in.cpp'; then $(CYGPATH_W) '$(SQP)/stages/sorted_in.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/sorted_in.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sorted_in.Tpo $(DEPDIR)/sorted_in.Po
#	$(AM_V_CXX)source='$(SQP)/stages/sorted_in.cpp' object='sorted_in.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sorted_in.obj `if test -f '$(SQP)/stages/sorted_in.cpp'; then $(CYGPATH_W) '$(SQP)/stages/sorted_in.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/sorted_in.cpp'; fi`

func_call.o: $(SQP)/stages/func_call.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT func_call.o -MD -MP -MF $(DEPDIR)/func_call.Tpo -c -o func_call.o `test -f '$(SQP)/stages/func_call.cpp' || echo '$(srcdir)/'`$(SQP)/stages/func_call.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/func_call.Tpo $(DEPDIR)/func_call.Po
#	$(AM_V_CXX)source='$(SQP)/stages/func_call.cpp' object='func_call.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o func_call.o `test -f '$(SQP)/stages/func_call.cpp' || echo '$(srcdir)/'`$(SQP)/stages/func_call.cpp

func_call.obj: $(SQP)/stages/func_call.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT func_call.obj -MD -MP -MF $(DEPDIR)/func_call.Tpo -c -o func_call.obj `if test -f '$(SQP)/stages/func_call.cpp'; then $(CYGPATH_W) '$(SQP)/stages/func_call.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/func_call.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/func_call.Tpo $(DEPDIR)/func_call.Po
#	$(AM_V_CXX)source='$(SQP)/stages/func_call.cpp' object='func_call.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o func_call.obj `if test -f '$(SQP)/stages/func_call.cpp'; then $(CYGPATH_W) '$(SQP)/stages/func_call.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/func_call.cpp'; fi`

sort.o: $(SQP)/stages/sort.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sort.o -MD -MP -MF $(DEPDIR)/sort.Tpo -c -o sort.o `test -f '$(SQP)/stages/sort.cpp' || echo '$(srcdir)/'`$(SQP)/stages/sort.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sort.Tpo $(DEPDIR)/sort.Po
#	$(AM_V_CXX)source='$(SQP)/stages/sort.cpp' object='sort.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sort.o `test -f '$(SQP)/stages/sort.cpp' || echo '$(srcdir)/'`$(SQP)/stages/sort.cpp

sort.obj: $(SQP)/stages/sort.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sort.obj -MD -MP -MF $(DEPDIR)/sort.Tpo -c -o sort.obj `if test -f '$(SQP)/stages/sort.cpp'; then $(CYGPATH_W) '$(SQP)/stages/sort.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/sort.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sort.Tpo $(DEPDIR)/sort.Po
#	$(AM_V_CXX)source='$(SQP)/stages/sort.cpp' object='sort.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sort.obj `if test -f '$(SQP)/stages/sort.cpp'; then $(CYGPATH_W) '$(SQP)/stages/sort.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/sort.cpp'; fi`

hash_aggregate.o: $(SQP)/stages/hash_aggregate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hash_aggregate.o -MD -MP -MF $(DEPDIR)/hash_aggregate.Tpo -c -o hash_aggregate.o `test -f '$(SQP)/stages/hash_aggregate.cpp' || echo '$(srcdir)/'`$(SQP)/stages/hash_aggregate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/hash_aggregate.Tpo $(DEPDIR)/hash_aggregate.Po
#	$(AM_V_CXX)source='$(SQP)/stages/hash_aggregate.cpp' object='hash_aggregate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hash_aggregate.o `test -f '$(SQP)/stages/hash_aggregate.cpp' || echo '$(srcdir)/'`$(SQP)/stages/hash_aggregate.cpp

hash_aggregate.obj: $(SQP)/stages/hash_aggregate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hash_aggregate.obj -MD -MP -MF $(DEPDIR)/hash_aggregate.Tpo -c -o hash_aggregate.obj `if test -f '$(SQP)/stages/hash_aggregate.cpp'; then $(CYGPATH_W) '$(SQP)/stages/hash_aggregate.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/hash_aggregate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/hash_aggregate.Tpo $(DEPDIR)/hash_aggregate.Po
#	$(AM_V_CXX)source='$(SQP)/stages/hash_aggregate.cpp' object='hash_aggregate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hash_aggregate.obj `if test -f '$(SQP)/stages/hash_aggregate.cpp'; then $(CYGPATH_W) '$(SQP)/stages/hash_aggregate.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/hash_aggregate.cpp'; fi`

delay_writer.o: $(SQP)/stages/delay_writer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT delay_writer.o -MD -MP -MF $(DEPDIR)/delay_writer.Tpo -c -o delay_writer.o `test -f '$(SQP)/stages/delay_writer.cpp' || echo '$(srcdir)/'`$(SQP)/stages/delay_writer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/delay_writer.Tpo $(DEPDIR)/delay_writer.Po
#	$(AM_V_CXX)source='$(SQP)/stages/delay_writer.cpp' object='delay_writer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o delay_writer.o `test -f '$(SQP)/stages/delay_writer.cpp' || echo '$(srcdir)/'`$(SQP)/stages/delay_writer.cpp

delay_writer.obj: $(SQP)/stages/delay_writer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT delay_writer.obj -MD -MP -MF $(DEPDIR)/delay_writer.Tpo -c -o delay_writer.obj `if test -f '$(SQP)/stages/delay_writer.cpp'; then $(CYGPATH_W) '$(SQP)/stages/delay_writer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/delay_writer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/delay_writer.Tpo $(DEPDIR)/delay_writer.Po
#	$(AM_V_CXX)source='$(SQP)/stages/delay_writer.cpp' object='delay_writer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o delay_writer.obj `if test -f '$(SQP)/stages/delay_writer.cpp'; then $(CYGPATH_W) '$(SQP)/stages/delay_writer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/delay_writer.cpp'; fi`

bnl_join.o: $(SQP)/stages/bnl_join.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bnl_join.o -MD -MP -MF $(DEPDIR)/bnl_join.Tpo -c -o bnl_join.o `test -f '$(SQP)/stages/bnl_join.cpp' || echo '$(srcdir)/'`$(SQP)/stages/bnl_join.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bnl_join.Tpo $(DEPDIR)/bnl_join.Po
#	$(AM_V_CXX)source='$(SQP)/stages/bnl_join.cpp' object='bnl_join.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bnl_join.o `test -f '$(SQP)/stages/bnl_join.cpp' || echo '$(srcdir)/'`$(SQP)/stages/bnl_join.cpp

bnl_join.obj: $(SQP)/stages/bnl_join.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bnl_join.obj -MD -MP -MF $(DEPDIR)/bnl_join.Tpo -c -o bnl_join.obj `if test -f '$(SQP)/stages/bnl_join.cpp'; then $(CYGPATH_W) '$(SQP)/stages/bnl_join.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/bnl_join.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bnl_join.Tpo $(DEPDIR)/bnl_join.Po
#	$(AM_V_CXX)source='$(SQP)/stages/bnl_join.cpp' object='bnl_join.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bnl_join.obj `if test -f '$(SQP)/stages/bnl_join.cpp'; then $(CYGPATH_W) '$(SQP)/stages/bnl_join.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/bnl_join.cpp'; fi`

sort_merge_join.o: $(SQP)/stages/sort_merge_join.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sort_merge_join.o -MD -MP -MF $(DEPDIR)/sort_merge_join.Tpo -c -o sort_merge_join.o `test -f '$(SQP)/stages/sort_merge_join.cpp' || echo '$(srcdir)/'`$(SQP)/stages/sort_merge_join.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/sort_merge_join.Tpo $(DEPDIR)/sort_merge_join.Po
#	$(AM_V_CXX)source='$(SQP)/stages/sort_merge_join.cpp' object='sort_merge_join.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sort_merge_join.o `test -f '$(SQP)/stages/sort_merge_join.cpp' || echo '$(srcdir)/'`$(SQP)/stages/sort_merge_join.cpp

sort_merge_join.obj: $(SQP)/stages/sort_merge_join.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sort_merge_join.obj -MD -MP -MF $(DEPDIR)/sort_merge_join.Tpo -c -o sort_merge_join.obj `if test -f '$(SQP)/stages/sort_merge_join.cpp'; then $(CYGPATH_W) '$(SQP)/stages/sort_merge_join.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/sort_merge_join.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/sort_merge_join.Tpo $(DEPDIR)/sort_merge_join.Po
#	$(AM_V_CXX)source='$(SQP)/stages/sort_merge_join.cpp' object='sort_merge_join.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sort_merge_join.obj `if test -f '$(SQP)/stages/sort_merge_join.cpp'; then $(CYGPATH_W) '$(SQP)/stages/sort_merge_join.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/sort_merge_join.cpp'; fi`

fscan.o: $(SQP)/stages/fscan.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fscan.o -MD -MP -MF $(DEPDIR)/fscan.Tpo -c -o fscan.o `test -f '$(SQP)/stages/fscan.cpp' || echo '$(srcdir)/'`$(SQP)/stages/fscan.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/fscan.Tpo $(DEPDIR)/fscan.Po
#	$(AM_V_CXX)source='$(SQP)/stages/fscan.cpp' object='fscan.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fscan.o `test -f '$(SQP)/stages/fscan.cpp' || echo '$(srcdir)/'`$(SQP)/stages/fscan.cpp

fscan.obj: $(SQP)/stages/fscan.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fscan.obj -MD -MP -MF $(DEPDIR)/fscan.Tpo -c -o fscan.obj `if test -f '$(SQP)/stages/fscan.cpp'; then $(CYGPATH_W) '$(SQP)/stages/fscan.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/fscan.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fscan.Tpo $(DEPDIR)/fscan.Po
#	$(AM_V_CXX)source='$(SQP)/stages/fscan.cpp' object='fscan.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fscan.obj `if test -f '$(SQP)/stages/fscan.cpp'; then $(CYGPATH_W) '$(SQP)/stages/fscan.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/fscan.cpp'; fi`

register_stage_containers.o: $(SQP)/stages/register_stage_containers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT register_stage_containers.o -MD -MP -MF $(DEPDIR)/register_stage_containers.Tpo -c -o register_stage_containers.o `test -f '$(SQP)/stages/register_stage_containers.cpp' || echo '$(srcdir)/'`$(SQP)/stages/register_stage_containers.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/register_stage_containers.Tpo $(DEPDIR)/register_stage_containers.Po
#	$(AM_V_CXX)source='$(SQP)/stages/register_stage_containers.cpp' object='register_stage_containers.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o register_stage_containers.o `test -f '$(SQP)/stages/register_stage_containers.cpp' || echo '$(srcdir)/'`$(SQP)/stages/register_stage_containers.cpp

register_stage_containers.obj: $(SQP)/stages/register_stage_containers.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT register_stage_containers.obj -MD -MP -MF $(DEPDIR)/register_stage_containers.Tpo -c -o register_stage_containers.obj `if test -f '$(SQP)/stages/register_stage_containers.cpp'; then $(CYGPATH_W) '$(SQP)/stages/register_stage_containers.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/register_stage_containers.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/register_stage_containers.Tpo $(DEPDIR)/register_stage_containers.Po
#	$(AM_V_CXX)source='$(SQP)/stages/register_stage_containers.cpp' object='register_stage_containers.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o register_stage_containers.obj `if test -f '$(SQP)/stages/register_stage_containers.cpp'; then $(CYGPATH_W) '$(SQP)/stages/register_stage_containers.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/stages/register_stage_containers.cpp'; fi`

process_query.o: $(SQP)/common/process_query.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT process_query.o -MD -MP -MF $(DEPDIR)/process_query.Tpo -c -o process_query.o `test -f '$(SQP)/common/process_query.cpp' || echo '$(srcdir)/'`$(SQP)/common/process_query.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/process_query.Tpo $(DEPDIR)/process_query.Po
#	$(AM_V_CXX)source='$(SQP)/common/process_query.cpp' object='process_query.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o process_query.o `test -f '$(SQP)/common/process_query.cpp' || echo '$(srcdir)/'`$(SQP)/common/process_query.cpp

process_query.obj: $(SQP)/common/process_query.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT process_query.obj -MD -MP -MF $(DEPDIR)/process_query.Tpo -c -o process_query.obj `if test -f '$(SQP)/common/process_query.cpp'; then $(CYGPATH_W) '$(SQP)/common/process_query.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/common/process_query.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/process_query.Tpo $(DEPDIR)/process_query.Po
#	$(AM_V_CXX)source='$(SQP)/common/process_query.cpp' object='process_query.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o process_query.obj `if test -f '$(SQP)/common/process_query.cpp'; then $(CYGPATH_W) '$(SQP)/common/process_query.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/common/process_query.cpp'; fi`

predicates.o: $(SQP)/common/predicates.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT predicates.o -MD -MP -MF $(DEPDIR)/predicates.Tpo -c -o predicates.o `test -f '$(SQP)/common/predicates.cpp' || echo '$(srcdir)/'`$(SQP)/common/predicates.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/predicates.Tpo $(DEPDIR)/predicates.Po
#	$(AM_V_CXX)source='$(SQP)/common/predicates.cpp' object='predicates.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o predicates.o `test -f '$(SQP)/common/predicates.cpp' || echo '$(srcdir)/'`$(SQP)/common/predicates.cpp

predicates.obj: $(SQP)/common/predicates.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT predicates.obj -MD -MP -MF $(DEPDIR)/predicates.Tpo -c -o predicates.obj `if test -f '$(SQP)/common/predicates.cpp'; then $(CYGPATH_W) '$(SQP)/common/predicates.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/common/predicates.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/predicates.Tpo $(DEPDIR)/predicates.Po
#	$(AM_V_CXX)source='$(SQP)/common/predicates.cpp' object='predicates.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o predicates.obj `if test -f '$(SQP)/common/predicates.cpp'; then $(CYGPATH_W) '$(SQP)/common/predicates.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SQP)/common/predicates.cpp'; fi`

lib_libqpipeutil_a-busy_delay.o: $(SU)/busy_delay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-busy_delay.o -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-busy_delay.Tpo -c -o lib_libqpipeutil_a-busy_delay.o `test -f '$(SU)/busy_delay.cpp' || echo '$(srcdir)/'`$(SU)/busy_delay.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-busy_delay.Tpo $(DEPDIR)/lib_libqpipeutil_a-busy_delay.Po
#	$(AM_V_CXX)source='$(SU)/busy_delay.cpp' object='lib_libqpipeutil_a-busy_delay.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-busy_delay.o `test -f '$(SU)/busy_delay.cpp' || echo '$(srcdir)/'`$(SU)/busy_delay.cpp

lib_libqpipeutil_a-busy_delay.obj: $(SU)/busy_delay.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-busy_delay.obj -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-busy_delay.Tpo -c -o lib_libqpipeutil_a-busy_delay.obj `if test -f '$(SU)/busy_delay.cpp'; then $(CYGPATH_W) '$(SU)/busy_delay.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/busy_delay.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-busy_delay.Tpo $(DEPDIR)/lib_libqpipeutil_a-busy_delay.Po
#	$(AM_V_CXX)source='$(SU)/busy_delay.cpp' object='lib_libqpipeutil_a-busy_delay.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-busy_delay.obj `if test -f '$(SU)/busy_delay.cpp'; then $(CYGPATH_W) '$(SU)/busy_delay.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/busy_delay.cpp'; fi`

lib_libqpipeutil_a-rio.o: $(SU)/rio.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-rio.o -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-rio.Tpo -c -o lib_libqpipeutil_a-rio.o `test -f '$(SU)/rio.cpp' || echo '$(srcdir)/'`$(SU)/rio.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-rio.Tpo $(DEPDIR)/lib_libqpipeutil_a-rio.Po
#	$(AM_V_CXX)source='$(SU)/rio.cpp' object='lib_libqpipeutil_a-rio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-rio.o `test -f '$(SU)/rio.cpp' || echo '$(srcdir)/'`$(SU)/rio.cpp

lib_libqpipeutil_a-rio.obj: $(SU)/rio.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-rio.obj -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-rio.Tpo -c -o lib_libqpipeutil_a-rio.obj `if test -f '$(SU)/rio.cpp'; then $(CYGPATH_W) '$(SU)/rio.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/rio.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-rio.Tpo $(DEPDIR)/lib_libqpipeutil_a-rio.Po
#	$(AM_V_CXX)source='$(SU)/rio.cpp' object='lib_libqpipeutil_a-rio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-rio.obj `if test -f '$(SU)/rio.cpp'; then $(CYGPATH_W) '$(SU)/rio.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/rio.cpp'; fi`

lib_libqpipeutil_a-resource_pool.o: $(SU)/resource_pool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-resource_pool.o -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-resource_pool.Tpo -c -o lib_libqpipeutil_a-resource_pool.o `test -f '$(SU)/resource_pool.cpp' || echo '$(srcdir)/'`$(SU)/resource_pool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-resource_pool.Tpo $(DEPDIR)/lib_libqpipeutil_a-resource_pool.Po
#	$(AM_V_CXX)source='$(SU)/resource_pool.cpp' object='lib_libqpipeutil_a-resource_pool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-resource_pool.o `test -f '$(SU)/resource_pool.cpp' || echo '$(srcdir)/'`$(SU)/resource_pool.cpp

lib_libqpipeutil_a-resource_pool.obj: $(SU)/resource_pool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-resource_pool.obj -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-resource_pool.Tpo -c -o lib_libqpipeutil_a-resource_pool.obj `if test -f '$(SU)/resource_pool.cpp'; then $(CYGPATH_W) '$(SU)/resource_pool.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/resource_pool.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-resource_pool.Tpo $(DEPDIR)/lib_libqpipeutil_a-resource_pool.Po
#	$(AM_V_CXX)source='$(SU)/resource_pool.cpp' object='lib_libqpipeutil_a-resource_pool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-resource_pool.obj `if test -f '$(SU)/resource_pool.cpp'; then $(CYGPATH_W) '$(SU)/resource_pool.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/resource_pool.cpp'; fi`

lib_libqpipeutil_a-static_list_node.o: $(SU)/static_list_node.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-static_list_node.o -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-static_list_node.Tpo -c -o lib_libqpipeutil_a-static_list_node.o `test -f '$(SU)/static_list_node.cpp' || echo '$(srcdir)/'`$(SU)/static_list_node.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-static_list_node.Tpo $(DEPDIR)/lib_libqpipeutil_a-static_list_node.Po
#	$(AM_V_CXX)source='$(SU)/static_list_node.cpp' object='lib_libqpipeutil_a-static_list_node.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-static_list_node.o `test -f '$(SU)/static_list_node.cpp' || echo '$(srcdir)/'`$(SU)/static_list_node.cpp

lib_libqpipeutil_a-static_list_node.obj: $(SU)/static_list_node.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-static_list_node.obj -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-static_list_node.Tpo -c -o lib_libqpipeutil_a-static_list_node.obj `if test -f '$(SU)/static_list_node.cpp'; then $(CYGPATH_W) '$(SU)/static_list_node.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/static_list_node.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-static_list_node.Tpo $(DEPDIR)/lib_libqpipeutil_a-static_list_node.Po
#	$(AM_V_CXX)source='$(SU)/static_list_node.cpp' object='lib_libqpipeutil_a-static_list_node.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-static_list_node.obj `if test -f '$(SU)/static_list_node.cpp'; then $(CYGPATH_W) '$(SU)/static_list_node.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/static_list_node.cpp'; fi`

lib_libqpipeutil_a-static_list.o: $(SU)/static_list.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-static_list.o -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-static_list.Tpo -c -o lib_libqpipeutil_a-static_list.o `test -f '$(SU)/static_list.cpp' || echo '$(srcdir)/'`$(SU)/static_list.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-static_list.Tpo $(DEPDIR)/lib_libqpipeutil_a-static_list.Po
#	$(AM_V_CXX)source='$(SU)/static_list.cpp' object='lib_libqpipeutil_a-static_list.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-static_list.o `test -f '$(SU)/static_list.cpp' || echo '$(srcdir)/'`$(SU)/static_list.cpp

lib_libqpipeutil_a-static_list.obj: $(SU)/static_list.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-static_list.obj -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-static_list.Tpo -c -o lib_libqpipeutil_a-static_list.obj `if test -f '$(SU)/static_list.cpp'; then $(CYGPATH_W) '$(SU)/static_list.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/static_list.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-static_list.Tpo $(DEPDIR)/lib_libqpipeutil_a-static_list.Po
#	$(AM_V_CXX)source='$(SU)/static_list.cpp' object='lib_libqpipeutil_a-static_list.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-static_list.obj `if test -f '$(SU)/static_list.cpp'; then $(CYGPATH_W) '$(SU)/static_list.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/static_list.cpp'; fi`

lib_libqpipeutil_a-fileops.o: $(SU)/fileops.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-fileops.o -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-fileops.Tpo -c -o lib_libqpipeutil_a-fileops.o `test -f '$(SU)/fileops.cpp' || echo '$(srcdir)/'`$(SU)/fileops.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-fileops.Tpo $(DEPDIR)/lib_libqpipeutil_a-fileops.Po
#	$(AM_V_CXX)source='$(SU)/fileops.cpp' object='lib_libqpipeutil_a-fileops.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-fileops.o `test -f '$(SU)/fileops.cpp' || echo '$(srcdir)/'`$(SU)/fileops.cpp

lib_libqpipeutil_a-fileops.obj: $(SU)/fileops.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-fileops.obj -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-fileops.Tpo -c -o lib_libqpipeutil_a-fileops.obj `if test -f '$(SU)/fileops.cpp'; then $(CYGPATH_W) '$(SU)/fileops.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/fileops.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-fileops.Tpo $(DEPDIR)/lib_libqpipeutil_a-fileops.Po
#	$(AM_V_CXX)source='$(SU)/fileops.cpp' object='lib_libqpipeutil_a-fileops.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-fileops.obj `if test -f '$(SU)/fileops.cpp'; then $(CYGPATH_W) '$(SU)/fileops.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/fileops.cpp'; fi`

lib_libqpipeutil_a-alignedops.o: $(SU)/alignedops.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-alignedops.o -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-alignedops.Tpo -c -o lib_libqpipeutil_a-alignedops.o `test -f '$(SU)/alignedops.cpp' || echo '$(srcdir)/'`$(SU)/alignedops.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-alignedops.Tpo $(DEPDIR)/lib_libqpipeutil_a-alignedops.Po
#	$(AM_V_CXX)source='$(SU)/alignedops.cpp' object='lib_libqpipeutil_a-alignedops.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-alignedops.o `test -f '$(SU)/alignedops.cpp' || echo '$(srcdir)/'`$(SU)/alignedops.cpp

lib_libqpipeutil_a-alignedops.obj: $(SU)/alignedops.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-alignedops.obj -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-alignedops.Tpo -c -o lib_libqpipeutil_a-alignedops.obj `if test -f '$(SU)/alignedops.cpp'; then $(CYGPATH_W) '$(SU)/alignedops.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/alignedops.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-alignedops.Tpo $(DEPDIR)/lib_libqpipeutil_a-alignedops.Po
#	$(AM_V_CXX)source='$(SU)/alignedops.cpp' object='lib_libqpipeutil_a-alignedops.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-alignedops.obj `if test -f '$(SU)/alignedops.cpp'; then $(CYGPATH_W) '$(SU)/alignedops.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/alignedops.cpp'; fi`

lib_libqpipeutil_a-tmpfile.o: $(SU)/tmpfile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-tmpfile.o -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-tmpfile.Tpo -c -o lib_libqpipeutil_a-tmpfile.o `test -f '$(SU)/tmpfile.cpp' || echo '$(srcdir)/'`$(SU)/tmpfile.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-tmpfile.Tpo $(DEPDIR)/lib_libqpipeutil_a-tmpfile.Po
#	$(AM_V_CXX)source='$(SU)/tmpfile.cpp' object='lib_libqpipeutil_a-tmpfile.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-tmpfile.o `test -f '$(SU)/tmpfile.cpp' || echo '$(srcdir)/'`$(SU)/tmpfile.cpp

lib_libqpipeutil_a-tmpfile.obj: $(SU)/tmpfile.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-tmpfile.obj -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-tmpfile.Tpo -c -o lib_libqpipeutil_a-tmpfile.obj `if test -f '$(SU)/tmpfile.cpp'; then $(CYGPATH_W) '$(SU)/tmpfile.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/tmpfile.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-tmpfile.Tpo $(DEPDIR)/lib_libqpipeutil_a-tmpfile.Po
#	$(AM_V_CXX)source='$(SU)/tmpfile.cpp' object='lib_libqpipeutil_a-tmpfile.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-tmpfile.obj `if test -f '$(SU)/tmpfile.cpp'; then $(CYGPATH_W) '$(SU)/tmpfile.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/tmpfile.cpp'; fi`

lib_libqpipeutil_a-static_hash_map.o: $(SU)/static_hash_map.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-static_hash_map.o -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-static_hash_map.Tpo -c -o lib_libqpipeutil_a-static_hash_map.o `test -f '$(SU)/static_hash_map.cpp' || echo '$(srcdir)/'`$(SU)/static_hash_map.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-static_hash_map.Tpo $(DEPDIR)/lib_libqpipeutil_a-static_hash_map.Po
#	$(AM_V_CXX)source='$(SU)/static_hash_map.cpp' object='lib_libqpipeutil_a-static_hash_map.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-static_hash_map.o `test -f '$(SU)/static_hash_map.cpp' || echo '$(srcdir)/'`$(SU)/static_hash_map.cpp

lib_libqpipeutil_a-static_hash_map.obj: $(SU)/static_hash_map.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-static_hash_map.obj -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-static_hash_map.Tpo -c -o lib_libqpipeutil_a-static_hash_map.obj `if test -f '$(SU)/static_hash_map.cpp'; then $(CYGPATH_W) '$(SU)/static_hash_map.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/static_hash_map.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-static_hash_map.Tpo $(DEPDIR)/lib_libqpipeutil_a-static_hash_map.Po
#	$(AM_V_CXX)source='$(SU)/static_hash_map.cpp' object='lib_libqpipeutil_a-static_hash_map.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-static_hash_map.obj `if test -f '$(SU)/static_hash_map.cpp'; then $(CYGPATH_W) '$(SU)/static_hash_map.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/static_hash_map.cpp'; fi`

lib_libqpipeutil_a-fnv.o: $(SU)/fnv.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-fnv.o -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-fnv.Tpo -c -o lib_libqpipeutil_a-fnv.o `test -f '$(SU)/fnv.cpp' || echo '$(srcdir)/'`$(SU)/fnv.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-fnv.Tpo $(DEPDIR)/lib_libqpipeutil_a-fnv.Po
#	$(AM_V_CXX)source='$(SU)/fnv.cpp' object='lib_libqpipeutil_a-fnv.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-fnv.o `test -f '$(SU)/fnv.cpp' || echo '$(srcdir)/'`$(SU)/fnv.cpp

lib_libqpipeutil_a-fnv.obj: $(SU)/fnv.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libqpipeutil_a-fnv.obj -MD -MP -MF $(DEPDIR)/lib_libqpipeutil_a-fnv.Tpo -c -o lib_libqpipeutil_a-fnv.obj `if test -f '$(SU)/fnv.cpp'; then $(CYGPATH_W) '$(SU)/fnv.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/fnv.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libqpipeutil_a-fnv.Tpo $(DEPDIR)/lib_libqpipeutil_a-fnv.Po
#	$(AM_V_CXX)source='$(SU)/fnv.cpp' object='lib_libqpipeutil_a-fnv.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libqpipeutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libqpipeutil_a-fnv.obj `if test -f '$(SU)/fnv.cpp'; then $(CYGPATH_W) '$(SU)/fnv.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/fnv.cpp'; fi`

lib_libsm_a-shore_file_desc.o: $(SMS)/shore_file_desc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_file_desc.o -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_file_desc.Tpo -c -o lib_libsm_a-shore_file_desc.o `test -f '$(SMS)/shore_file_desc.cpp' || echo '$(srcdir)/'`$(SMS)/shore_file_desc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_file_desc.Tpo $(DEPDIR)/lib_libsm_a-shore_file_desc.Po
#	$(AM_V_CXX)source='$(SMS)/shore_file_desc.cpp' object='lib_libsm_a-shore_file_desc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_file_desc.o `test -f '$(SMS)/shore_file_desc.cpp' || echo '$(srcdir)/'`$(SMS)/shore_file_desc.cpp

lib_libsm_a-shore_file_desc.obj: $(SMS)/shore_file_desc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_file_desc.obj -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_file_desc.Tpo -c -o lib_libsm_a-shore_file_desc.obj `if test -f '$(SMS)/shore_file_desc.cpp'; then $(CYGPATH_W) '$(SMS)/shore_file_desc.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_file_desc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_file_desc.Tpo $(DEPDIR)/lib_libsm_a-shore_file_desc.Po
#	$(AM_V_CXX)source='$(SMS)/shore_file_desc.cpp' object='lib_libsm_a-shore_file_desc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_file_desc.obj `if test -f '$(SMS)/shore_file_desc.cpp'; then $(CYGPATH_W) '$(SMS)/shore_file_desc.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_file_desc.cpp'; fi`

lib_libsm_a-shore_field.o: $(SMS)/shore_field.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_field.o -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_field.Tpo -c -o lib_libsm_a-shore_field.o `test -f '$(SMS)/shore_field.cpp' || echo '$(srcdir)/'`$(SMS)/shore_field.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_field.Tpo $(DEPDIR)/lib_libsm_a-shore_field.Po
#	$(AM_V_CXX)source='$(SMS)/shore_field.cpp' object='lib_libsm_a-shore_field.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_field.o `test -f '$(SMS)/shore_field.cpp' || echo '$(srcdir)/'`$(SMS)/shore_field.cpp

lib_libsm_a-shore_field.obj: $(SMS)/shore_field.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_field.obj -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_field.Tpo -c -o lib_libsm_a-shore_field.obj `if test -f '$(SMS)/shore_field.cpp'; then $(CYGPATH_W) '$(SMS)/shore_field.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_field.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_field.Tpo $(DEPDIR)/lib_libsm_a-shore_field.Po
#	$(AM_V_CXX)source='$(SMS)/shore_field.cpp' object='lib_libsm_a-shore_field.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_field.obj `if test -f '$(SMS)/shore_field.cpp'; then $(CYGPATH_W) '$(SMS)/shore_field.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_field.cpp'; fi`

lib_libsm_a-shore_table.o: $(SMS)/shore_table.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_table.o -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_table.Tpo -c -o lib_libsm_a-shore_table.o `test -f '$(SMS)/shore_table.cpp' || echo '$(srcdir)/'`$(SMS)/shore_table.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_table.Tpo $(DEPDIR)/lib_libsm_a-shore_table.Po
#	$(AM_V_CXX)source='$(SMS)/shore_table.cpp' object='lib_libsm_a-shore_table.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_table.o `test -f '$(SMS)/shore_table.cpp' || echo '$(srcdir)/'`$(SMS)/shore_table.cpp

lib_libsm_a-shore_table.obj: $(SMS)/shore_table.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_table.obj -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_table.Tpo -c -o lib_libsm_a-shore_table.obj `if test -f '$(SMS)/shore_table.cpp'; then $(CYGPATH_W) '$(SMS)/shore_table.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_table.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_table.Tpo $(DEPDIR)/lib_libsm_a-shore_table.Po
#	$(AM_V_CXX)source='$(SMS)/shore_table.cpp' object='lib_libsm_a-shore_table.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_table.obj `if test -f '$(SMS)/shore_table.cpp'; then $(CYGPATH_W) '$(SMS)/shore_table.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_table.cpp'; fi`

lib_libsm_a-shore_row.o: $(SMS)/shore_row.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_row.o -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_row.Tpo -c -o lib_libsm_a-shore_row.o `test -f '$(SMS)/shore_row.cpp' || echo '$(srcdir)/'`$(SMS)/shore_row.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_row.Tpo $(DEPDIR)/lib_libsm_a-shore_row.Po
#	$(AM_V_CXX)source='$(SMS)/shore_row.cpp' object='lib_libsm_a-shore_row.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_row.o `test -f '$(SMS)/shore_row.cpp' || echo '$(srcdir)/'`$(SMS)/shore_row.cpp

lib_libsm_a-shore_row.obj: $(SMS)/shore_row.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_row.obj -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_row.Tpo -c -o lib_libsm_a-shore_row.obj `if test -f '$(SMS)/shore_row.cpp'; then $(CYGPATH_W) '$(SMS)/shore_row.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_row.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_row.Tpo $(DEPDIR)/lib_libsm_a-shore_row.Po
#	$(AM_V_CXX)source='$(SMS)/shore_row.cpp' object='lib_libsm_a-shore_row.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_row.obj `if test -f '$(SMS)/shore_row.cpp'; then $(CYGPATH_W) '$(SMS)/shore_row.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_row.cpp'; fi`

lib_libsm_a-shore_index.o: $(SMS)/shore_index.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_index.o -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_index.Tpo -c -o lib_libsm_a-shore_index.o `test -f '$(SMS)/shore_index.cpp' || echo '$(srcdir)/'`$(SMS)/shore_index.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_index.Tpo $(DEPDIR)/lib_libsm_a-shore_index.Po
#	$(AM_V_CXX)source='$(SMS)/shore_index.cpp' object='lib_libsm_a-shore_index.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_index.o `test -f '$(SMS)/shore_index.cpp' || echo '$(srcdir)/'`$(SMS)/shore_index.cpp

lib_libsm_a-shore_index.obj: $(SMS)/shore_index.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_index.obj -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_index.Tpo -c -o lib_libsm_a-shore_index.obj `if test -f '$(SMS)/shore_index.cpp'; then $(CYGPATH_W) '$(SMS)/shore_index.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_index.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_index.Tpo $(DEPDIR)/lib_libsm_a-shore_index.Po
#	$(AM_V_CXX)source='$(SMS)/shore_index.cpp' object='lib_libsm_a-shore_index.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_index.obj `if test -f '$(SMS)/shore_index.cpp'; then $(CYGPATH_W) '$(SMS)/shore_index.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_index.cpp'; fi`

lib_libsm_a-shore_asc_sort_buf.o: $(SMS)/shore_asc_sort_buf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_asc_sort_buf.o -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_asc_sort_buf.Tpo -c -o lib_libsm_a-shore_asc_sort_buf.o `test -f '$(SMS)/shore_asc_sort_buf.cpp' || echo '$(srcdir)/'`$(SMS)/shore_asc_sort_buf.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_asc_sort_buf.Tpo $(DEPDIR)/lib_libsm_a-shore_asc_sort_buf.Po
#	$(AM_V_CXX)source='$(SMS)/shore_asc_sort_buf.cpp' object='lib_libsm_a-shore_asc_sort_buf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_asc_sort_buf.o `test -f '$(SMS)/shore_asc_sort_buf.cpp' || echo '$(srcdir)/'`$(SMS)/shore_asc_sort_buf.cpp

lib_libsm_a-shore_asc_sort_buf.obj: $(SMS)/shore_asc_sort_buf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_asc_sort_buf.obj -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_asc_sort_buf.Tpo -c -o lib_libsm_a-shore_asc_sort_buf.obj `if test -f '$(SMS)/shore_asc_sort_buf.cpp'; then $(CYGPATH_W) '$(SMS)/shore_asc_sort_buf.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_asc_sort_buf.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_asc_sort_buf.Tpo $(DEPDIR)/lib_libsm_a-shore_asc_sort_buf.Po
#	$(AM_V_CXX)source='$(SMS)/shore_asc_sort_buf.cpp' object='lib_libsm_a-shore_asc_sort_buf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_asc_sort_buf.obj `if test -f '$(SMS)/shore_asc_sort_buf.cpp'; then $(CYGPATH_W) '$(SMS)/shore_asc_sort_buf.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_asc_sort_buf.cpp'; fi`

lib_libsm_a-shore_desc_sort_buf.o: $(SMS)/shore_desc_sort_buf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_desc_sort_buf.o -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_desc_sort_buf.Tpo -c -o lib_libsm_a-shore_desc_sort_buf.o `test -f '$(SMS)/shore_desc_sort_buf.cpp' || echo '$(srcdir)/'`$(SMS)/shore_desc_sort_buf.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_desc_sort_buf.Tpo $(DEPDIR)/lib_libsm_a-shore_desc_sort_buf.Po
#	$(AM_V_CXX)source='$(SMS)/shore_desc_sort_buf.cpp' object='lib_libsm_a-shore_desc_sort_buf.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_desc_sort_buf.o `test -f '$(SMS)/shore_desc_sort_buf.cpp' || echo '$(srcdir)/'`$(SMS)/shore_desc_sort_buf.cpp

lib_libsm_a-shore_desc_sort_buf.obj: $(SMS)/shore_desc_sort_buf.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_desc_sort_buf.obj -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_desc_sort_buf.Tpo -c -o lib_libsm_a-shore_desc_sort_buf.obj `if test -f '$(SMS)/shore_desc_sort_buf.cpp'; then $(CYGPATH_W) '$(SMS)/shore_desc_sort_buf.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_desc_sort_buf.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_desc_sort_buf.Tpo $(DEPDIR)/lib_libsm_a-shore_desc_sort_buf.Po
#	$(AM_V_CXX)source='$(SMS)/shore_desc_sort_buf.cpp' object='lib_libsm_a-shore_desc_sort_buf.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_desc_sort_buf.obj `if test -f '$(SMS)/shore_desc_sort_buf.cpp'; then $(CYGPATH_W) '$(SMS)/shore_desc_sort_buf.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_desc_sort_buf.cpp'; fi`

lib_libsm_a-shore_reqs.o: $(SMS)/shore_reqs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_reqs.o -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_reqs.Tpo -c -o lib_libsm_a-shore_reqs.o `test -f '$(SMS)/shore_reqs.cpp' || echo '$(srcdir)/'`$(SMS)/shore_reqs.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_reqs.Tpo $(DEPDIR)/lib_libsm_a-shore_reqs.Po
#	$(AM_V_CXX)source='$(SMS)/shore_reqs.cpp' object='lib_libsm_a-shore_reqs.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_reqs.o `test -f '$(SMS)/shore_reqs.cpp' || echo '$(srcdir)/'`$(SMS)/shore_reqs.cpp

lib_libsm_a-shore_reqs.obj: $(SMS)/shore_reqs.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_reqs.obj -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_reqs.Tpo -c -o lib_libsm_a-shore_reqs.obj `if test -f '$(SMS)/shore_reqs.cpp'; then $(CYGPATH_W) '$(SMS)/shore_reqs.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_reqs.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_reqs.Tpo $(DEPDIR)/lib_libsm_a-shore_reqs.Po
#	$(AM_V_CXX)source='$(SMS)/shore_reqs.cpp' object='lib_libsm_a-shore_reqs.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_reqs.obj `if test -f '$(SMS)/shore_reqs.cpp'; then $(CYGPATH_W) '$(SMS)/shore_reqs.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_reqs.cpp'; fi`

lib_libsm_a-shore_flusher.o: $(SMS)/shore_flusher.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_flusher.o -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_flusher.Tpo -c -o lib_libsm_a-shore_flusher.o `test -f '$(SMS)/shore_flusher.cpp' || echo '$(srcdir)/'`$(SMS)/shore_flusher.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_flusher.Tpo $(DEPDIR)/lib_libsm_a-shore_flusher.Po
#	$(AM_V_CXX)source='$(SMS)/shore_flusher.cpp' object='lib_libsm_a-shore_flusher.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_flusher.o `test -f '$(SMS)/shore_flusher.cpp' || echo '$(srcdir)/'`$(SMS)/shore_flusher.cpp

lib_libsm_a-shore_flusher.obj: $(SMS)/shore_flusher.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_flusher.obj -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_flusher.Tpo -c -o lib_libsm_a-shore_flusher.obj `if test -f '$(SMS)/shore_flusher.cpp'; then $(CYGPATH_W) '$(SMS)/shore_flusher.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_flusher.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_flusher.Tpo $(DEPDIR)/lib_libsm_a-shore_flusher.Po
#	$(AM_V_CXX)source='$(SMS)/shore_flusher.cpp' object='lib_libsm_a-shore_flusher.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_flusher.obj `if test -f '$(SMS)/shore_flusher.cpp'; then $(CYGPATH_W) '$(SMS)/shore_flusher.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_flusher.cpp'; fi`

lib_libsm_a-shore_env.o: $(SMS)/shore_env.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_env.o -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_env.Tpo -c -o lib_libsm_a-shore_env.o `test -f '$(SMS)/shore_env.cpp' || echo '$(srcdir)/'`$(SMS)/shore_env.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_env.Tpo $(DEPDIR)/lib_libsm_a-shore_env.Po
#	$(AM_V_CXX)source='$(SMS)/shore_env.cpp' object='lib_libsm_a-shore_env.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_env.o `test -f '$(SMS)/shore_env.cpp' || echo '$(srcdir)/'`$(SMS)/shore_env.cpp

lib_libsm_a-shore_env.obj: $(SMS)/shore_env.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_env.obj -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_env.Tpo -c -o lib_libsm_a-shore_env.obj `if test -f '$(SMS)/shore_env.cpp'; then $(CYGPATH_W) '$(SMS)/shore_env.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_env.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_env.Tpo $(DEPDIR)/lib_libsm_a-shore_env.Po
#	$(AM_V_CXX)source='$(SMS)/shore_env.cpp' object='lib_libsm_a-shore_env.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_env.obj `if test -f '$(SMS)/shore_env.cpp'; then $(CYGPATH_W) '$(SMS)/shore_env.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_env.cpp'; fi`

lib_libsm_a-shore_helper_loader.o: $(SMS)/shore_helper_loader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_helper_loader.o -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_helper_loader.Tpo -c -o lib_libsm_a-shore_helper_loader.o `test -f '$(SMS)/shore_helper_loader.cpp' || echo '$(srcdir)/'`$(SMS)/shore_helper_loader.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_helper_loader.Tpo $(DEPDIR)/lib_libsm_a-shore_helper_loader.Po
#	$(AM_V_CXX)source='$(SMS)/shore_helper_loader.cpp' object='lib_libsm_a-shore_helper_loader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_helper_loader.o `test -f '$(SMS)/shore_helper_loader.cpp' || echo '$(srcdir)/'`$(SMS)/shore_helper_loader.cpp

lib_libsm_a-shore_helper_loader.obj: $(SMS)/shore_helper_loader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_helper_loader.obj -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_helper_loader.Tpo -c -o lib_libsm_a-shore_helper_loader.obj `if test -f '$(SMS)/shore_helper_loader.cpp'; then $(CYGPATH_W) '$(SMS)/shore_helper_loader.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_helper_loader.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_helper_loader.Tpo $(DEPDIR)/lib_libsm_a-shore_helper_loader.Po
#	$(AM_V_CXX)source='$(SMS)/shore_helper_loader.cpp' object='lib_libsm_a-shore_helper_loader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_helper_loader.obj `if test -f '$(SMS)/shore_helper_loader.cpp'; then $(CYGPATH_W) '$(SMS)/shore_helper_loader.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_helper_loader.cpp'; fi`

lib_libsm_a-shore_client.o: $(SMS)/shore_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_client.o -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_client.Tpo -c -o lib_libsm_a-shore_client.o `test -f '$(SMS)/shore_client.cpp' || echo '$(srcdir)/'`$(SMS)/shore_client.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_client.Tpo $(DEPDIR)/lib_libsm_a-shore_client.Po
#	$(AM_V_CXX)source='$(SMS)/shore_client.cpp' object='lib_libsm_a-shore_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_client.o `test -f '$(SMS)/shore_client.cpp' || echo '$(srcdir)/'`$(SMS)/shore_client.cpp

lib_libsm_a-shore_client.obj: $(SMS)/shore_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_client.obj -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_client.Tpo -c -o lib_libsm_a-shore_client.obj `if test -f '$(SMS)/shore_client.cpp'; then $(CYGPATH_W) '$(SMS)/shore_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_client.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_client.Tpo $(DEPDIR)/lib_libsm_a-shore_client.Po
#	$(AM_V_CXX)source='$(SMS)/shore_client.cpp' object='lib_libsm_a-shore_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_client.obj `if test -f '$(SMS)/shore_client.cpp'; then $(CYGPATH_W) '$(SMS)/shore_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_client.cpp'; fi`

lib_libsm_a-shore_worker.o: $(SMS)/shore_worker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_worker.o -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_worker.Tpo -c -o lib_libsm_a-shore_worker.o `test -f '$(SMS)/shore_worker.cpp' || echo '$(srcdir)/'`$(SMS)/shore_worker.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_worker.Tpo $(DEPDIR)/lib_libsm_a-shore_worker.Po
#	$(AM_V_CXX)source='$(SMS)/shore_worker.cpp' object='lib_libsm_a-shore_worker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_worker.o `test -f '$(SMS)/shore_worker.cpp' || echo '$(srcdir)/'`$(SMS)/shore_worker.cpp

lib_libsm_a-shore_worker.obj: $(SMS)/shore_worker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_worker.obj -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_worker.Tpo -c -o lib_libsm_a-shore_worker.obj `if test -f '$(SMS)/shore_worker.cpp'; then $(CYGPATH_W) '$(SMS)/shore_worker.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_worker.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_worker.Tpo $(DEPDIR)/lib_libsm_a-shore_worker.Po
#	$(AM_V_CXX)source='$(SMS)/shore_worker.cpp' object='lib_libsm_a-shore_worker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_worker.obj `if test -f '$(SMS)/shore_worker.cpp'; then $(CYGPATH_W) '$(SMS)/shore_worker.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_worker.cpp'; fi`

lib_libsm_a-shore_trx_worker.o: $(SMS)/shore_trx_worker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_trx_worker.o -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_trx_worker.Tpo -c -o lib_libsm_a-shore_trx_worker.o `test -f '$(SMS)/shore_trx_worker.cpp' || echo '$(srcdir)/'`$(SMS)/shore_trx_worker.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_trx_worker.Tpo $(DEPDIR)/lib_libsm_a-shore_trx_worker.Po
#	$(AM_V_CXX)source='$(SMS)/shore_trx_worker.cpp' object='lib_libsm_a-shore_trx_worker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_trx_worker.o `test -f '$(SMS)/shore_trx_worker.cpp' || echo '$(srcdir)/'`$(SMS)/shore_trx_worker.cpp

lib_libsm_a-shore_trx_worker.obj: $(SMS)/shore_trx_worker.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_trx_worker.obj -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_trx_worker.Tpo -c -o lib_libsm_a-shore_trx_worker.obj `if test -f '$(SMS)/shore_trx_worker.cpp'; then $(CYGPATH_W) '$(SMS)/shore_trx_worker.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_trx_worker.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_trx_worker.Tpo $(DEPDIR)/lib_libsm_a-shore_trx_worker.Po
#	$(AM_V_CXX)source='$(SMS)/shore_trx_worker.cpp' object='lib_libsm_a-shore_trx_worker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_trx_worker.obj `if test -f '$(SMS)/shore_trx_worker.cpp'; then $(CYGPATH_W) '$(SMS)/shore_trx_worker.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_trx_worker.cpp'; fi`

lib_libsm_a-shore_iter.o: $(SMS)/shore_iter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_iter.o -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_iter.Tpo -c -o lib_libsm_a-shore_iter.o `test -f '$(SMS)/shore_iter.cpp' || echo '$(srcdir)/'`$(SMS)/shore_iter.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_iter.Tpo $(DEPDIR)/lib_libsm_a-shore_iter.Po
#	$(AM_V_CXX)source='$(SMS)/shore_iter.cpp' object='lib_libsm_a-shore_iter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_iter.o `test -f '$(SMS)/shore_iter.cpp' || echo '$(srcdir)/'`$(SMS)/shore_iter.cpp

lib_libsm_a-shore_iter.obj: $(SMS)/shore_iter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_iter.obj -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_iter.Tpo -c -o lib_libsm_a-shore_iter.obj `if test -f '$(SMS)/shore_iter.cpp'; then $(CYGPATH_W) '$(SMS)/shore_iter.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_iter.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_iter.Tpo $(DEPDIR)/lib_libsm_a-shore_iter.Po
#	$(AM_V_CXX)source='$(SMS)/shore_iter.cpp' object='lib_libsm_a-shore_iter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_iter.obj `if test -f '$(SMS)/shore_iter.cpp'; then $(CYGPATH_W) '$(SMS)/shore_iter.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_iter.cpp'; fi`

lib_libsm_a-shore_shell.o: $(SMS)/shore_shell.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_shell.o -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_shell.Tpo -c -o lib_libsm_a-shore_shell.o `test -f '$(SMS)/shore_shell.cpp' || echo '$(srcdir)/'`$(SMS)/shore_shell.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_shell.Tpo $(DEPDIR)/lib_libsm_a-shore_shell.Po
#	$(AM_V_CXX)source='$(SMS)/shore_shell.cpp' object='lib_libsm_a-shore_shell.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_shell.o `test -f '$(SMS)/shore_shell.cpp' || echo '$(srcdir)/'`$(SMS)/shore_shell.cpp

lib_libsm_a-shore_shell.obj: $(SMS)/shore_shell.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libsm_a-shore_shell.obj -MD -MP -MF $(DEPDIR)/lib_libsm_a-shore_shell.Tpo -c -o lib_libsm_a-shore_shell.obj `if test -f '$(SMS)/shore_shell.cpp'; then $(CYGPATH_W) '$(SMS)/shore_shell.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_shell.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libsm_a-shore_shell.Tpo $(DEPDIR)/lib_libsm_a-shore_shell.Po
#	$(AM_V_CXX)source='$(SMS)/shore_shell.cpp' object='lib_libsm_a-shore_shell.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libsm_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libsm_a-shore_shell.obj `if test -f '$(SMS)/shore_shell.cpp'; then $(CYGPATH_W) '$(SMS)/shore_shell.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SMS)/shore_shell.cpp'; fi`

lib_libutil_a-c_str.o: $(SU)/c_str.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-c_str.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-c_str.Tpo -c -o lib_libutil_a-c_str.o `test -f '$(SU)/c_str.cpp' || echo '$(srcdir)/'`$(SU)/c_str.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-c_str.Tpo $(DEPDIR)/lib_libutil_a-c_str.Po
#	$(AM_V_CXX)source='$(SU)/c_str.cpp' object='lib_libutil_a-c_str.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-c_str.o `test -f '$(SU)/c_str.cpp' || echo '$(srcdir)/'`$(SU)/c_str.cpp

lib_libutil_a-c_str.obj: $(SU)/c_str.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-c_str.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-c_str.Tpo -c -o lib_libutil_a-c_str.obj `if test -f '$(SU)/c_str.cpp'; then $(CYGPATH_W) '$(SU)/c_str.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/c_str.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-c_str.Tpo $(DEPDIR)/lib_libutil_a-c_str.Po
#	$(AM_V_CXX)source='$(SU)/c_str.cpp' object='lib_libutil_a-c_str.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-c_str.obj `if test -f '$(SU)/c_str.cpp'; then $(CYGPATH_W) '$(SU)/c_str.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/c_str.cpp'; fi`

lib_libutil_a-thread.o: $(SU)/thread.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-thread.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-thread.Tpo -c -o lib_libutil_a-thread.o `test -f '$(SU)/thread.cpp' || echo '$(srcdir)/'`$(SU)/thread.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-thread.Tpo $(DEPDIR)/lib_libutil_a-thread.Po
#	$(AM_V_CXX)source='$(SU)/thread.cpp' object='lib_libutil_a-thread.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-thread.o `test -f '$(SU)/thread.cpp' || echo '$(srcdir)/'`$(SU)/thread.cpp

lib_libutil_a-thread.obj: $(SU)/thread.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-thread.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-thread.Tpo -c -o lib_libutil_a-thread.obj `if test -f '$(SU)/thread.cpp'; then $(CYGPATH_W) '$(SU)/thread.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/thread.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-thread.Tpo $(DEPDIR)/lib_libutil_a-thread.Po
#	$(AM_V_CXX)source='$(SU)/thread.cpp' object='lib_libutil_a-thread.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-thread.obj `if test -f '$(SU)/thread.cpp'; then $(CYGPATH_W) '$(SU)/thread.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/thread.cpp'; fi`

lib_libutil_a-time_util.o: $(SU)/time_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-time_util.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-time_util.Tpo -c -o lib_libutil_a-time_util.o `test -f '$(SU)/time_util.cpp' || echo '$(srcdir)/'`$(SU)/time_util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-time_util.Tpo $(DEPDIR)/lib_libutil_a-time_util.Po
#	$(AM_V_CXX)source='$(SU)/time_util.cpp' object='lib_libutil_a-time_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-time_util.o `test -f '$(SU)/time_util.cpp' || echo '$(srcdir)/'`$(SU)/time_util.cpp

lib_libutil_a-time_util.obj: $(SU)/time_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-time_util.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-time_util.Tpo -c -o lib_libutil_a-time_util.obj `if test -f '$(SU)/time_util.cpp'; then $(CYGPATH_W) '$(SU)/time_util.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/time_util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-time_util.Tpo $(DEPDIR)/lib_libutil_a-time_util.Po
#	$(AM_V_CXX)source='$(SU)/time_util.cpp' object='lib_libutil_a-time_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-time_util.obj `if test -f '$(SU)/time_util.cpp'; then $(CYGPATH_W) '$(SU)/time_util.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/time_util.cpp'; fi`

lib_libutil_a-trace.o: $(SU)/trace.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-trace.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-trace.Tpo -c -o lib_libutil_a-trace.o `test -f '$(SU)/trace.cpp' || echo '$(srcdir)/'`$(SU)/trace.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-trace.Tpo $(DEPDIR)/lib_libutil_a-trace.Po
#	$(AM_V_CXX)source='$(SU)/trace.cpp' object='lib_libutil_a-trace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-trace.o `test -f '$(SU)/trace.cpp' || echo '$(srcdir)/'`$(SU)/trace.cpp

lib_libutil_a-trace.obj: $(SU)/trace.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-trace.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-trace.Tpo -c -o lib_libutil_a-trace.obj `if test -f '$(SU)/trace.cpp'; then $(CYGPATH_W) '$(SU)/trace.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/trace.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-trace.Tpo $(DEPDIR)/lib_libutil_a-trace.Po
#	$(AM_V_CXX)source='$(SU)/trace.cpp' object='lib_libutil_a-trace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-trace.obj `if test -f '$(SU)/trace.cpp'; then $(CYGPATH_W) '$(SU)/trace.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/trace.cpp'; fi`

lib_libutil_a-chomp.o: $(SU)/chomp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-chomp.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-chomp.Tpo -c -o lib_libutil_a-chomp.o `test -f '$(SU)/chomp.cpp' || echo '$(srcdir)/'`$(SU)/chomp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-chomp.Tpo $(DEPDIR)/lib_libutil_a-chomp.Po
#	$(AM_V_CXX)source='$(SU)/chomp.cpp' object='lib_libutil_a-chomp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-chomp.o `test -f '$(SU)/chomp.cpp' || echo '$(srcdir)/'`$(SU)/chomp.cpp

lib_libutil_a-chomp.obj: $(SU)/chomp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-chomp.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-chomp.Tpo -c -o lib_libutil_a-chomp.obj `if test -f '$(SU)/chomp.cpp'; then $(CYGPATH_W) '$(SU)/chomp.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/chomp.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-chomp.Tpo $(DEPDIR)/lib_libutil_a-chomp.Po
#	$(AM_V_CXX)source='$(SU)/chomp.cpp' object='lib_libutil_a-chomp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-chomp.obj `if test -f '$(SU)/chomp.cpp'; then $(CYGPATH_W) '$(SU)/chomp.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/chomp.cpp'; fi`

lib_libutil_a-progress.o: $(SU)/progress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-progress.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-progress.Tpo -c -o lib_libutil_a-progress.o `test -f '$(SU)/progress.cpp' || echo '$(srcdir)/'`$(SU)/progress.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-progress.Tpo $(DEPDIR)/lib_libutil_a-progress.Po
#	$(AM_V_CXX)source='$(SU)/progress.cpp' object='lib_libutil_a-progress.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-progress.o `test -f '$(SU)/progress.cpp' || echo '$(srcdir)/'`$(SU)/progress.cpp

lib_libutil_a-progress.obj: $(SU)/progress.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-progress.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-progress.Tpo -c -o lib_libutil_a-progress.obj `if test -f '$(SU)/progress.cpp'; then $(CYGPATH_W) '$(SU)/progress.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/progress.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-progress.Tpo $(DEPDIR)/lib_libutil_a-progress.Po
#	$(AM_V_CXX)source='$(SU)/progress.cpp' object='lib_libutil_a-progress.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-progress.obj `if test -f '$(SU)/progress.cpp'; then $(CYGPATH_W) '$(SU)/progress.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/progress.cpp'; fi`

lib_libutil_a-pool_alloc.o: $(SU)/pool_alloc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-pool_alloc.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-pool_alloc.Tpo -c -o lib_libutil_a-pool_alloc.o `test -f '$(SU)/pool_alloc.cpp' || echo '$(srcdir)/'`$(SU)/pool_alloc.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-pool_alloc.Tpo $(DEPDIR)/lib_libutil_a-pool_alloc.Po
#	$(AM_V_CXX)source='$(SU)/pool_alloc.cpp' object='lib_libutil_a-pool_alloc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-pool_alloc.o `test -f '$(SU)/pool_alloc.cpp' || echo '$(srcdir)/'`$(SU)/pool_alloc.cpp

lib_libutil_a-pool_alloc.obj: $(SU)/pool_alloc.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-pool_alloc.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-pool_alloc.Tpo -c -o lib_libutil_a-pool_alloc.obj `if test -f '$(SU)/pool_alloc.cpp'; then $(CYGPATH_W) '$(SU)/pool_alloc.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/pool_alloc.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-pool_alloc.Tpo $(DEPDIR)/lib_libutil_a-pool_alloc.Po
#	$(AM_V_CXX)source='$(SU)/pool_alloc.cpp' object='lib_libutil_a-pool_alloc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-pool_alloc.obj `if test -f '$(SU)/pool_alloc.cpp'; then $(CYGPATH_W) '$(SU)/pool_alloc.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/pool_alloc.cpp'; fi`

lib_libutil_a-store_string.o: $(SU)/store_string.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-store_string.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-store_string.Tpo -c -o lib_libutil_a-store_string.o `test -f '$(SU)/store_string.cpp' || echo '$(srcdir)/'`$(SU)/store_string.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-store_string.Tpo $(DEPDIR)/lib_libutil_a-store_string.Po
#	$(AM_V_CXX)source='$(SU)/store_string.cpp' object='lib_libutil_a-store_string.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-store_string.o `test -f '$(SU)/store_string.cpp' || echo '$(srcdir)/'`$(SU)/store_string.cpp

lib_libutil_a-store_string.obj: $(SU)/store_string.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-store_string.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-store_string.Tpo -c -o lib_libutil_a-store_string.obj `if test -f '$(SU)/store_string.cpp'; then $(CYGPATH_W) '$(SU)/store_string.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/store_string.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-store_string.Tpo $(DEPDIR)/lib_libutil_a-store_string.Po
#	$(AM_V_CXX)source='$(SU)/store_string.cpp' object='lib_libutil_a-store_string.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-store_string.obj `if test -f '$(SU)/store_string.cpp'; then $(CYGPATH_W) '$(SU)/store_string.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/store_string.cpp'; fi`

lib_libutil_a-history.o: $(SU)/history.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-history.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-history.Tpo -c -o lib_libutil_a-history.o `test -f '$(SU)/history.cpp' || echo '$(srcdir)/'`$(SU)/history.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-history.Tpo $(DEPDIR)/lib_libutil_a-history.Po
#	$(AM_V_CXX)source='$(SU)/history.cpp' object='lib_libutil_a-history.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-history.o `test -f '$(SU)/history.cpp' || echo '$(srcdir)/'`$(SU)/history.cpp

lib_libutil_a-history.obj: $(SU)/history.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-history.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-history.Tpo -c -o lib_libutil_a-history.obj `if test -f '$(SU)/history.cpp'; then $(CYGPATH_W) '$(SU)/history.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/history.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-history.Tpo $(DEPDIR)/lib_libutil_a-history.Po
#	$(AM_V_CXX)source='$(SU)/history.cpp' object='lib_libutil_a-history.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-history.obj `if test -f '$(SU)/history.cpp'; then $(CYGPATH_W) '$(SU)/history.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/history.cpp'; fi`

lib_libutil_a-countdown.o: $(SU)/countdown.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-countdown.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-countdown.Tpo -c -o lib_libutil_a-countdown.o `test -f '$(SU)/countdown.cpp' || echo '$(srcdir)/'`$(SU)/countdown.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-countdown.Tpo $(DEPDIR)/lib_libutil_a-countdown.Po
#	$(AM_V_CXX)source='$(SU)/countdown.cpp' object='lib_libutil_a-countdown.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-countdown.o `test -f '$(SU)/countdown.cpp' || echo '$(srcdir)/'`$(SU)/countdown.cpp

lib_libutil_a-countdown.obj: $(SU)/countdown.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-countdown.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-countdown.Tpo -c -o lib_libutil_a-countdown.obj `if test -f '$(SU)/countdown.cpp'; then $(CYGPATH_W) '$(SU)/countdown.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/countdown.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-countdown.Tpo $(DEPDIR)/lib_libutil_a-countdown.Po
#	$(AM_V_CXX)source='$(SU)/countdown.cpp' object='lib_libutil_a-countdown.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-countdown.obj `if test -f '$(SU)/countdown.cpp'; then $(CYGPATH_W) '$(SU)/countdown.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/countdown.cpp'; fi`

lib_libutil_a-confparser.o: $(SU)/confparser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-confparser.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-confparser.Tpo -c -o lib_libutil_a-confparser.o `test -f '$(SU)/confparser.cpp' || echo '$(srcdir)/'`$(SU)/confparser.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-confparser.Tpo $(DEPDIR)/lib_libutil_a-confparser.Po
#	$(AM_V_CXX)source='$(SU)/confparser.cpp' object='lib_libutil_a-confparser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-confparser.o `test -f '$(SU)/confparser.cpp' || echo '$(srcdir)/'`$(SU)/confparser.cpp

lib_libutil_a-confparser.obj: $(SU)/confparser.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-confparser.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-confparser.Tpo -c -o lib_libutil_a-confparser.obj `if test -f '$(SU)/confparser.cpp'; then $(CYGPATH_W) '$(SU)/confparser.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/confparser.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-confparser.Tpo $(DEPDIR)/lib_libutil_a-confparser.Po
#	$(AM_V_CXX)source='$(SU)/confparser.cpp' object='lib_libutil_a-confparser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-confparser.obj `if test -f '$(SU)/confparser.cpp'; then $(CYGPATH_W) '$(SU)/confparser.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/confparser.cpp'; fi`

lib_libutil_a-envvar.o: $(SU)/envvar.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-envvar.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-envvar.Tpo -c -o lib_libutil_a-envvar.o `test -f '$(SU)/envvar.cpp' || echo '$(srcdir)/'`$(SU)/envvar.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-envvar.Tpo $(DEPDIR)/lib_libutil_a-envvar.Po
#	$(AM_V_CXX)source='$(SU)/envvar.cpp' object='lib_libutil_a-envvar.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-envvar.o `test -f '$(SU)/envvar.cpp' || echo '$(srcdir)/'`$(SU)/envvar.cpp

lib_libutil_a-envvar.obj: $(SU)/envvar.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-envvar.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-envvar.Tpo -c -o lib_libutil_a-envvar.obj `if test -f '$(SU)/envvar.cpp'; then $(CYGPATH_W) '$(SU)/envvar.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/envvar.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-envvar.Tpo $(DEPDIR)/lib_libutil_a-envvar.Po
#	$(AM_V_CXX)source='$(SU)/envvar.cpp' object='lib_libutil_a-envvar.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-envvar.obj `if test -f '$(SU)/envvar.cpp'; then $(CYGPATH_W) '$(SU)/envvar.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/envvar.cpp'; fi`

lib_libutil_a-stl_pool.o: $(SU)/stl_pool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-stl_pool.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-stl_pool.Tpo -c -o lib_libutil_a-stl_pool.o `test -f '$(SU)/stl_pool.cpp' || echo '$(srcdir)/'`$(SU)/stl_pool.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-stl_pool.Tpo $(DEPDIR)/lib_libutil_a-stl_pool.Po
#	$(AM_V_CXX)source='$(SU)/stl_pool.cpp' object='lib_libutil_a-stl_pool.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-stl_pool.o `test -f '$(SU)/stl_pool.cpp' || echo '$(srcdir)/'`$(SU)/stl_pool.cpp

lib_libutil_a-stl_pool.obj: $(SU)/stl_pool.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-stl_pool.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-stl_pool.Tpo -c -o lib_libutil_a-stl_pool.obj `if test -f '$(SU)/stl_pool.cpp'; then $(CYGPATH_W) '$(SU)/stl_pool.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/stl_pool.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-stl_pool.Tpo $(DEPDIR)/lib_libutil_a-stl_pool.Po
#	$(AM_V_CXX)source='$(SU)/stl_pool.cpp' object='lib_libutil_a-stl_pool.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-stl_pool.obj `if test -f '$(SU)/stl_pool.cpp'; then $(CYGPATH_W) '$(SU)/stl_pool.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/stl_pool.cpp'; fi`

lib_libutil_a-random_input.o: $(SU)/random_input.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-random_input.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-random_input.Tpo -c -o lib_libutil_a-random_input.o `test -f '$(SU)/random_input.cpp' || echo '$(srcdir)/'`$(SU)/random_input.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-random_input.Tpo $(DEPDIR)/lib_libutil_a-random_input.Po
#	$(AM_V_CXX)source='$(SU)/random_input.cpp' object='lib_libutil_a-random_input.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-random_input.o `test -f '$(SU)/random_input.cpp' || echo '$(srcdir)/'`$(SU)/random_input.cpp

lib_libutil_a-random_input.obj: $(SU)/random_input.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-random_input.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-random_input.Tpo -c -o lib_libutil_a-random_input.obj `if test -f '$(SU)/random_input.cpp'; then $(CYGPATH_W) '$(SU)/random_input.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/random_input.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-random_input.Tpo $(DEPDIR)/lib_libutil_a-random_input.Po
#	$(AM_V_CXX)source='$(SU)/random_input.cpp' object='lib_libutil_a-random_input.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-random_input.obj `if test -f '$(SU)/random_input.cpp'; then $(CYGPATH_W) '$(SU)/random_input.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/random_input.cpp'; fi`

lib_libutil_a-shell.o: $(SU)/shell.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-shell.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-shell.Tpo -c -o lib_libutil_a-shell.o `test -f '$(SU)/shell.cpp' || echo '$(srcdir)/'`$(SU)/shell.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-shell.Tpo $(DEPDIR)/lib_libutil_a-shell.Po
#	$(AM_V_CXX)source='$(SU)/shell.cpp' object='lib_libutil_a-shell.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-shell.o `test -f '$(SU)/shell.cpp' || echo '$(srcdir)/'`$(SU)/shell.cpp

lib_libutil_a-shell.obj: $(SU)/shell.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-shell.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-shell.Tpo -c -o lib_libutil_a-shell.obj `if test -f '$(SU)/shell.cpp'; then $(CYGPATH_W) '$(SU)/shell.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/shell.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-shell.Tpo $(DEPDIR)/lib_libutil_a-shell.Po
#	$(AM_V_CXX)source='$(SU)/shell.cpp' object='lib_libutil_a-shell.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-shell.obj `if test -f '$(SU)/shell.cpp'; then $(CYGPATH_W) '$(SU)/shell.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/shell.cpp'; fi`

lib_libutil_a-tcp.o: $(SU)/tcp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-tcp.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-tcp.Tpo -c -o lib_libutil_a-tcp.o `test -f '$(SU)/tcp.cpp' || echo '$(srcdir)/'`$(SU)/tcp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-tcp.Tpo $(DEPDIR)/lib_libutil_a-tcp.Po
#	$(AM_V_CXX)source='$(SU)/tcp.cpp' object='lib_libutil_a-tcp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-tcp.o `test -f '$(SU)/tcp.cpp' || echo '$(srcdir)/'`$(SU)/tcp.cpp

lib_libutil_a-tcp.obj: $(SU)/tcp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-tcp.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-tcp.Tpo -c -o lib_libutil_a-tcp.obj `if test -f '$(SU)/tcp.cpp'; then $(CYGPATH_W) '$(SU)/tcp.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/tcp.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-tcp.Tpo $(DEPDIR)/lib_libutil_a-tcp.Po
#	$(AM_V_CXX)source='$(SU)/tcp.cpp' object='lib_libutil_a-tcp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-tcp.obj `if test -f '$(SU)/tcp.cpp'; then $(CYGPATH_W) '$(SU)/tcp.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/tcp.cpp'; fi`

lib_libutil_a-w_strlcpy.o: $(SU)/w_strlcpy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-w_strlcpy.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-w_strlcpy.Tpo -c -o lib_libutil_a-w_strlcpy.o `test -f '$(SU)/w_strlcpy.cpp' || echo '$(srcdir)/'`$(SU)/w_strlcpy.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-w_strlcpy.Tpo $(DEPDIR)/lib_libutil_a-w_strlcpy.Po
#	$(AM_V_CXX)source='$(SU)/w_strlcpy.cpp' object='lib_libutil_a-w_strlcpy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-w_strlcpy.o `test -f '$(SU)/w_strlcpy.cpp' || echo '$(srcdir)/'`$(SU)/w_strlcpy.cpp

lib_libutil_a-w_strlcpy.obj: $(SU)/w_strlcpy.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-w_strlcpy.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-w_strlcpy.Tpo -c -o lib_libutil_a-w_strlcpy.obj `if test -f '$(SU)/w_strlcpy.cpp'; then $(CYGPATH_W) '$(SU)/w_strlcpy.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/w_strlcpy.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-w_strlcpy.Tpo $(DEPDIR)/lib_libutil_a-w_strlcpy.Po
#	$(AM_V_CXX)source='$(SU)/w_strlcpy.cpp' object='lib_libutil_a-w_strlcpy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-w_strlcpy.obj `if test -f '$(SU)/w_strlcpy.cpp'; then $(CYGPATH_W) '$(SU)/w_strlcpy.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/w_strlcpy.cpp'; fi`

lib_libutil_a-procstat.o: $(SU)/procstat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-procstat.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-procstat.Tpo -c -o lib_libutil_a-procstat.o `test -f '$(SU)/procstat.cpp' || echo '$(srcdir)/'`$(SU)/procstat.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-procstat.Tpo $(DEPDIR)/lib_libutil_a-procstat.Po
#	$(AM_V_CXX)source='$(SU)/procstat.cpp' object='lib_libutil_a-procstat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-procstat.o `test -f '$(SU)/procstat.cpp' || echo '$(srcdir)/'`$(SU)/procstat.cpp

lib_libutil_a-procstat.obj: $(SU)/procstat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-procstat.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-procstat.Tpo -c -o lib_libutil_a-procstat.obj `if test -f '$(SU)/procstat.cpp'; then $(CYGPATH_W) '$(SU)/procstat.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/procstat.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-procstat.Tpo $(DEPDIR)/lib_libutil_a-procstat.Po
#	$(AM_V_CXX)source='$(SU)/procstat.cpp' object='lib_libutil_a-procstat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-procstat.obj `if test -f '$(SU)/procstat.cpp'; then $(CYGPATH_W) '$(SU)/procstat.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/procstat.cpp'; fi`

lib_libutil_a-skewer.o: $(SU)/skewer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-skewer.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-skewer.Tpo -c -o lib_libutil_a-skewer.o `test -f '$(SU)/skewer.cpp' || echo '$(srcdir)/'`$(SU)/skewer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-skewer.Tpo $(DEPDIR)/lib_libutil_a-skewer.Po
#	$(AM_V_CXX)source='$(SU)/skewer.cpp' object='lib_libutil_a-skewer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-skewer.o `test -f '$(SU)/skewer.cpp' || echo '$(srcdir)/'`$(SU)/skewer.cpp

lib_libutil_a-skewer.obj: $(SU)/skewer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-skewer.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-skewer.Tpo -c -o lib_libutil_a-skewer.obj `if test -f '$(SU)/skewer.cpp'; then $(CYGPATH_W) '$(SU)/skewer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/skewer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-skewer.Tpo $(DEPDIR)/lib_libutil_a-skewer.Po
#	$(AM_V_CXX)source='$(SU)/skewer.cpp' object='lib_libutil_a-skewer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-skewer.obj `if test -f '$(SU)/skewer.cpp'; then $(CYGPATH_W) '$(SU)/skewer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/skewer.cpp'; fi`

lib_libutil_a-sunos_procstat.o: $(SU)/sunos_procstat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-sunos_procstat.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-sunos_procstat.Tpo -c -o lib_libutil_a-sunos_procstat.o `test -f '$(SU)/sunos_procstat.cpp' || echo '$(srcdir)/'`$(SU)/sunos_procstat.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-sunos_procstat.Tpo $(DEPDIR)/lib_libutil_a-sunos_procstat.Po
#	$(AM_V_CXX)source='$(SU)/sunos_procstat.cpp' object='lib_libutil_a-sunos_procstat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-sunos_procstat.o `test -f '$(SU)/sunos_procstat.cpp' || echo '$(srcdir)/'`$(SU)/sunos_procstat.cpp

lib_libutil_a-sunos_procstat.obj: $(SU)/sunos_procstat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-sunos_procstat.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-sunos_procstat.Tpo -c -o lib_libutil_a-sunos_procstat.obj `if test -f '$(SU)/sunos_procstat.cpp'; then $(CYGPATH_W) '$(SU)/sunos_procstat.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/sunos_procstat.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-sunos_procstat.Tpo $(DEPDIR)/lib_libutil_a-sunos_procstat.Po
#	$(AM_V_CXX)source='$(SU)/sunos_procstat.cpp' object='lib_libutil_a-sunos_procstat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-sunos_procstat.obj `if test -f '$(SU)/sunos_procstat.cpp'; then $(CYGPATH_W) '$(SU)/sunos_procstat.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/sunos_procstat.cpp'; fi`

lib_libutil_a-prcinfo.o: $(SU)/prcinfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-prcinfo.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-prcinfo.Tpo -c -o lib_libutil_a-prcinfo.o `test -f '$(SU)/prcinfo.cpp' || echo '$(srcdir)/'`$(SU)/prcinfo.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-prcinfo.Tpo $(DEPDIR)/lib_libutil_a-prcinfo.Po
#	$(AM_V_CXX)source='$(SU)/prcinfo.cpp' object='lib_libutil_a-prcinfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-prcinfo.o `test -f '$(SU)/prcinfo.cpp' || echo '$(srcdir)/'`$(SU)/prcinfo.cpp

lib_libutil_a-prcinfo.obj: $(SU)/prcinfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-prcinfo.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-prcinfo.Tpo -c -o lib_libutil_a-prcinfo.obj `if test -f '$(SU)/prcinfo.cpp'; then $(CYGPATH_W) '$(SU)/prcinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/prcinfo.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-prcinfo.Tpo $(DEPDIR)/lib_libutil_a-prcinfo.Po
#	$(AM_V_CXX)source='$(SU)/prcinfo.cpp' object='lib_libutil_a-prcinfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-prcinfo.obj `if test -f '$(SU)/prcinfo.cpp'; then $(CYGPATH_W) '$(SU)/prcinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/prcinfo.cpp'; fi`

lib_libutil_a-linux_procstat.o: $(SU)/linux_procstat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-linux_procstat.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-linux_procstat.Tpo -c -o lib_libutil_a-linux_procstat.o `test -f '$(SU)/linux_procstat.cpp' || echo '$(srcdir)/'`$(SU)/linux_procstat.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-linux_procstat.Tpo $(DEPDIR)/lib_libutil_a-linux_procstat.Po
#	$(AM_V_CXX)source='$(SU)/linux_procstat.cpp' object='lib_libutil_a-linux_procstat.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-linux_procstat.o `test -f '$(SU)/linux_procstat.cpp' || echo '$(srcdir)/'`$(SU)/linux_procstat.cpp

lib_libutil_a-linux_procstat.obj: $(SU)/linux_procstat.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-linux_procstat.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-linux_procstat.Tpo -c -o lib_libutil_a-linux_procstat.obj `if test -f '$(SU)/linux_procstat.cpp'; then $(CYGPATH_W) '$(SU)/linux_procstat.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/linux_procstat.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-linux_procstat.Tpo $(DEPDIR)/lib_libutil_a-linux_procstat.Po
#	$(AM_V_CXX)source='$(SU)/linux_procstat.cpp' object='lib_libutil_a-linux_procstat.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-linux_procstat.obj `if test -f '$(SU)/linux_procstat.cpp'; then $(CYGPATH_W) '$(SU)/linux_procstat.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/linux_procstat.cpp'; fi`

lib_libutil_a-topinfo.o: $(SU)/topinfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-topinfo.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-topinfo.Tpo -c -o lib_libutil_a-topinfo.o `test -f '$(SU)/topinfo.cpp' || echo '$(srcdir)/'`$(SU)/topinfo.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-topinfo.Tpo $(DEPDIR)/lib_libutil_a-topinfo.Po
#	$(AM_V_CXX)source='$(SU)/topinfo.cpp' object='lib_libutil_a-topinfo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-topinfo.o `test -f '$(SU)/topinfo.cpp' || echo '$(srcdir)/'`$(SU)/topinfo.cpp

lib_libutil_a-topinfo.obj: $(SU)/topinfo.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-topinfo.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-topinfo.Tpo -c -o lib_libutil_a-topinfo.obj `if test -f '$(SU)/topinfo.cpp'; then $(CYGPATH_W) '$(SU)/topinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/topinfo.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-topinfo.Tpo $(DEPDIR)/lib_libutil_a-topinfo.Po
#	$(AM_V_CXX)source='$(SU)/topinfo.cpp' object='lib_libutil_a-topinfo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-topinfo.obj `if test -f '$(SU)/topinfo.cpp'; then $(CYGPATH_W) '$(SU)/topinfo.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/topinfo.cpp'; fi`

lib_libutil_a-tracer.o: $(SU)/command/tracer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-tracer.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-tracer.Tpo -c -o lib_libutil_a-tracer.o `test -f '$(SU)/command/tracer.cpp' || echo '$(srcdir)/'`$(SU)/command/tracer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-tracer.Tpo $(DEPDIR)/lib_libutil_a-tracer.Po
#	$(AM_V_CXX)source='$(SU)/command/tracer.cpp' object='lib_libutil_a-tracer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-tracer.o `test -f '$(SU)/command/tracer.cpp' || echo '$(srcdir)/'`$(SU)/command/tracer.cpp

lib_libutil_a-tracer.obj: $(SU)/command/tracer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-tracer.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-tracer.Tpo -c -o lib_libutil_a-tracer.obj `if test -f '$(SU)/command/tracer.cpp'; then $(CYGPATH_W) '$(SU)/command/tracer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/command/tracer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-tracer.Tpo $(DEPDIR)/lib_libutil_a-tracer.Po
#	$(AM_V_CXX)source='$(SU)/command/tracer.cpp' object='lib_libutil_a-tracer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-tracer.obj `if test -f '$(SU)/command/tracer.cpp'; then $(CYGPATH_W) '$(SU)/command/tracer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/command/tracer.cpp'; fi`

lib_libutil_a-printer.o: $(SU)/command/printer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-printer.o -MD -MP -MF $(DEPDIR)/lib_libutil_a-printer.Tpo -c -o lib_libutil_a-printer.o `test -f '$(SU)/command/printer.cpp' || echo '$(srcdir)/'`$(SU)/command/printer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-printer.Tpo $(DEPDIR)/lib_libutil_a-printer.Po
#	$(AM_V_CXX)source='$(SU)/command/printer.cpp' object='lib_libutil_a-printer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-printer.o `test -f '$(SU)/command/printer.cpp' || echo '$(srcdir)/'`$(SU)/command/printer.cpp

lib_libutil_a-printer.obj: $(SU)/command/printer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -MT lib_libutil_a-printer.obj -MD -MP -MF $(DEPDIR)/lib_libutil_a-printer.Tpo -c -o lib_libutil_a-printer.obj `if test -f '$(SU)/command/printer.cpp'; then $(CYGPATH_W) '$(SU)/command/printer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/command/printer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/lib_libutil_a-printer.Tpo $(DEPDIR)/lib_libutil_a-printer.Po
#	$(AM_V_CXX)source='$(SU)/command/printer.cpp' object='lib_libutil_a-printer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(lib_libutil_a_CXXFLAGS) $(CXXFLAGS) -c -o lib_libutil_a-printer.obj `if test -f '$(SU)/command/printer.cpp'; then $(CYGPATH_W) '$(SU)/command/printer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SU)/command/printer.cpp'; fi`

tpcc_random.o: $(SW)/tpcc/tpcc_random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tpcc_random.o -MD -MP -MF $(DEPDIR)/tpcc_random.Tpo -c -o tpcc_random.o `test -f '$(SW)/tpcc/tpcc_random.cpp' || echo '$(srcdir)/'`$(SW)/tpcc/tpcc_random.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/tpcc_random.Tpo $(DEPDIR)/tpcc_random.Po
#	$(AM_V_CXX)source='$(SW)/tpcc/tpcc_random.cpp' object='tpcc_random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tpcc_random.o `test -f '$(SW)/tpcc/tpcc_random.cpp' || echo '$(srcdir)/'`$(SW)/tpcc/tpcc_random.cpp

tpcc_random.obj: $(SW)/tpcc/tpcc_random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tpcc_random.obj -MD -MP -MF $(DEPDIR)/tpcc_random.Tpo -c -o tpcc_random.obj `if test -f '$(SW)/tpcc/tpcc_random.cpp'; then $(CYGPATH_W) '$(SW)/tpcc/tpcc_random.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcc/tpcc_random.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tpcc_random.Tpo $(DEPDIR)/tpcc_random.Po
#	$(AM_V_CXX)source='$(SW)/tpcc/tpcc_random.cpp' object='tpcc_random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tpcc_random.obj `if test -f '$(SW)/tpcc/tpcc_random.cpp'; then $(CYGPATH_W) '$(SW)/tpcc/tpcc_random.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcc/tpcc_random.cpp'; fi`

tpcc_input.o: $(SW)/tpcc/tpcc_input.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tpcc_input.o -MD -MP -MF $(DEPDIR)/tpcc_input.Tpo -c -o tpcc_input.o `test -f '$(SW)/tpcc/tpcc_input.cpp' || echo '$(srcdir)/'`$(SW)/tpcc/tpcc_input.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/tpcc_input.Tpo $(DEPDIR)/tpcc_input.Po
#	$(AM_V_CXX)source='$(SW)/tpcc/tpcc_input.cpp' object='tpcc_input.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tpcc_input.o `test -f '$(SW)/tpcc/tpcc_input.cpp' || echo '$(srcdir)/'`$(SW)/tpcc/tpcc_input.cpp

tpcc_input.obj: $(SW)/tpcc/tpcc_input.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tpcc_input.obj -MD -MP -MF $(DEPDIR)/tpcc_input.Tpo -c -o tpcc_input.obj `if test -f '$(SW)/tpcc/tpcc_input.cpp'; then $(CYGPATH_W) '$(SW)/tpcc/tpcc_input.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcc/tpcc_input.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tpcc_input.Tpo $(DEPDIR)/tpcc_input.Po
#	$(AM_V_CXX)source='$(SW)/tpcc/tpcc_input.cpp' object='tpcc_input.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tpcc_input.obj `if test -f '$(SW)/tpcc/tpcc_input.cpp'; then $(CYGPATH_W) '$(SW)/tpcc/tpcc_input.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcc/tpcc_input.cpp'; fi`

shore_tpcc_schema.o: $(SW)/tpcc/shore_tpcc_schema.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcc_schema.o -MD -MP -MF $(DEPDIR)/shore_tpcc_schema.Tpo -c -o shore_tpcc_schema.o `test -f '$(SW)/tpcc/shore_tpcc_schema.cpp' || echo '$(srcdir)/'`$(SW)/tpcc/shore_tpcc_schema.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcc_schema.Tpo $(DEPDIR)/shore_tpcc_schema.Po
#	$(AM_V_CXX)source='$(SW)/tpcc/shore_tpcc_schema.cpp' object='shore_tpcc_schema.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcc_schema.o `test -f '$(SW)/tpcc/shore_tpcc_schema.cpp' || echo '$(srcdir)/'`$(SW)/tpcc/shore_tpcc_schema.cpp

shore_tpcc_schema.obj: $(SW)/tpcc/shore_tpcc_schema.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcc_schema.obj -MD -MP -MF $(DEPDIR)/shore_tpcc_schema.Tpo -c -o shore_tpcc_schema.obj `if test -f '$(SW)/tpcc/shore_tpcc_schema.cpp'; then $(CYGPATH_W) '$(SW)/tpcc/shore_tpcc_schema.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcc/shore_tpcc_schema.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcc_schema.Tpo $(DEPDIR)/shore_tpcc_schema.Po
#	$(AM_V_CXX)source='$(SW)/tpcc/shore_tpcc_schema.cpp' object='shore_tpcc_schema.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcc_schema.obj `if test -f '$(SW)/tpcc/shore_tpcc_schema.cpp'; then $(CYGPATH_W) '$(SW)/tpcc/shore_tpcc_schema.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcc/shore_tpcc_schema.cpp'; fi`

shore_tpcc_schema_man.o: $(SW)/tpcc/shore_tpcc_schema_man.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcc_schema_man.o -MD -MP -MF $(DEPDIR)/shore_tpcc_schema_man.Tpo -c -o shore_tpcc_schema_man.o `test -f '$(SW)/tpcc/shore_tpcc_schema_man.cpp' || echo '$(srcdir)/'`$(SW)/tpcc/shore_tpcc_schema_man.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcc_schema_man.Tpo $(DEPDIR)/shore_tpcc_schema_man.Po
#	$(AM_V_CXX)source='$(SW)/tpcc/shore_tpcc_schema_man.cpp' object='shore_tpcc_schema_man.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcc_schema_man.o `test -f '$(SW)/tpcc/shore_tpcc_schema_man.cpp' || echo '$(srcdir)/'`$(SW)/tpcc/shore_tpcc_schema_man.cpp

shore_tpcc_schema_man.obj: $(SW)/tpcc/shore_tpcc_schema_man.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcc_schema_man.obj -MD -MP -MF $(DEPDIR)/shore_tpcc_schema_man.Tpo -c -o shore_tpcc_schema_man.obj `if test -f '$(SW)/tpcc/shore_tpcc_schema_man.cpp'; then $(CYGPATH_W) '$(SW)/tpcc/shore_tpcc_schema_man.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcc/shore_tpcc_schema_man.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcc_schema_man.Tpo $(DEPDIR)/shore_tpcc_schema_man.Po
#	$(AM_V_CXX)source='$(SW)/tpcc/shore_tpcc_schema_man.cpp' object='shore_tpcc_schema_man.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcc_schema_man.obj `if test -f '$(SW)/tpcc/shore_tpcc_schema_man.cpp'; then $(CYGPATH_W) '$(SW)/tpcc/shore_tpcc_schema_man.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcc/shore_tpcc_schema_man.cpp'; fi`

shore_tpcc_env.o: $(SW)/tpcc/shore_tpcc_env.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcc_env.o -MD -MP -MF $(DEPDIR)/shore_tpcc_env.Tpo -c -o shore_tpcc_env.o `test -f '$(SW)/tpcc/shore_tpcc_env.cpp' || echo '$(srcdir)/'`$(SW)/tpcc/shore_tpcc_env.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcc_env.Tpo $(DEPDIR)/shore_tpcc_env.Po
#	$(AM_V_CXX)source='$(SW)/tpcc/shore_tpcc_env.cpp' object='shore_tpcc_env.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcc_env.o `test -f '$(SW)/tpcc/shore_tpcc_env.cpp' || echo '$(srcdir)/'`$(SW)/tpcc/shore_tpcc_env.cpp

shore_tpcc_env.obj: $(SW)/tpcc/shore_tpcc_env.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcc_env.obj -MD -MP -MF $(DEPDIR)/shore_tpcc_env.Tpo -c -o shore_tpcc_env.obj `if test -f '$(SW)/tpcc/shore_tpcc_env.cpp'; then $(CYGPATH_W) '$(SW)/tpcc/shore_tpcc_env.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcc/shore_tpcc_env.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcc_env.Tpo $(DEPDIR)/shore_tpcc_env.Po
#	$(AM_V_CXX)source='$(SW)/tpcc/shore_tpcc_env.cpp' object='shore_tpcc_env.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcc_env.obj `if test -f '$(SW)/tpcc/shore_tpcc_env.cpp'; then $(CYGPATH_W) '$(SW)/tpcc/shore_tpcc_env.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcc/shore_tpcc_env.cpp'; fi`

shore_tpcc_xct.o: $(SW)/tpcc/shore_tpcc_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcc_xct.o -MD -MP -MF $(DEPDIR)/shore_tpcc_xct.Tpo -c -o shore_tpcc_xct.o `test -f '$(SW)/tpcc/shore_tpcc_xct.cpp' || echo '$(srcdir)/'`$(SW)/tpcc/shore_tpcc_xct.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcc_xct.Tpo $(DEPDIR)/shore_tpcc_xct.Po
#	$(AM_V_CXX)source='$(SW)/tpcc/shore_tpcc_xct.cpp' object='shore_tpcc_xct.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcc_xct.o `test -f '$(SW)/tpcc/shore_tpcc_xct.cpp' || echo '$(srcdir)/'`$(SW)/tpcc/shore_tpcc_xct.cpp

shore_tpcc_xct.obj: $(SW)/tpcc/shore_tpcc_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcc_xct.obj -MD -MP -MF $(DEPDIR)/shore_tpcc_xct.Tpo -c -o shore_tpcc_xct.obj `if test -f '$(SW)/tpcc/shore_tpcc_xct.cpp'; then $(CYGPATH_W) '$(SW)/tpcc/shore_tpcc_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcc/shore_tpcc_xct.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcc_xct.Tpo $(DEPDIR)/shore_tpcc_xct.Po
#	$(AM_V_CXX)source='$(SW)/tpcc/shore_tpcc_xct.cpp' object='shore_tpcc_xct.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcc_xct.obj `if test -f '$(SW)/tpcc/shore_tpcc_xct.cpp'; then $(CYGPATH_W) '$(SW)/tpcc/shore_tpcc_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcc/shore_tpcc_xct.cpp'; fi`

shore_tpcc_client.o: $(SW)/tpcc/shore_tpcc_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcc_client.o -MD -MP -MF $(DEPDIR)/shore_tpcc_client.Tpo -c -o shore_tpcc_client.o `test -f '$(SW)/tpcc/shore_tpcc_client.cpp' || echo '$(srcdir)/'`$(SW)/tpcc/shore_tpcc_client.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcc_client.Tpo $(DEPDIR)/shore_tpcc_client.Po
#	$(AM_V_CXX)source='$(SW)/tpcc/shore_tpcc_client.cpp' object='shore_tpcc_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcc_client.o `test -f '$(SW)/tpcc/shore_tpcc_client.cpp' || echo '$(srcdir)/'`$(SW)/tpcc/shore_tpcc_client.cpp

shore_tpcc_client.obj: $(SW)/tpcc/shore_tpcc_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcc_client.obj -MD -MP -MF $(DEPDIR)/shore_tpcc_client.Tpo -c -o shore_tpcc_client.obj `if test -f '$(SW)/tpcc/shore_tpcc_client.cpp'; then $(CYGPATH_W) '$(SW)/tpcc/shore_tpcc_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcc/shore_tpcc_client.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcc_client.Tpo $(DEPDIR)/shore_tpcc_client.Po
#	$(AM_V_CXX)source='$(SW)/tpcc/shore_tpcc_client.cpp' object='shore_tpcc_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcc_client.obj `if test -f '$(SW)/tpcc/shore_tpcc_client.cpp'; then $(CYGPATH_W) '$(SW)/tpcc/shore_tpcc_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcc/shore_tpcc_client.cpp'; fi`

tm1_input.o: $(SW)/tm1/tm1_input.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tm1_input.o -MD -MP -MF $(DEPDIR)/tm1_input.Tpo -c -o tm1_input.o `test -f '$(SW)/tm1/tm1_input.cpp' || echo '$(srcdir)/'`$(SW)/tm1/tm1_input.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/tm1_input.Tpo $(DEPDIR)/tm1_input.Po
#	$(AM_V_CXX)source='$(SW)/tm1/tm1_input.cpp' object='tm1_input.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tm1_input.o `test -f '$(SW)/tm1/tm1_input.cpp' || echo '$(srcdir)/'`$(SW)/tm1/tm1_input.cpp

tm1_input.obj: $(SW)/tm1/tm1_input.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tm1_input.obj -MD -MP -MF $(DEPDIR)/tm1_input.Tpo -c -o tm1_input.obj `if test -f '$(SW)/tm1/tm1_input.cpp'; then $(CYGPATH_W) '$(SW)/tm1/tm1_input.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tm1/tm1_input.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tm1_input.Tpo $(DEPDIR)/tm1_input.Po
#	$(AM_V_CXX)source='$(SW)/tm1/tm1_input.cpp' object='tm1_input.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tm1_input.obj `if test -f '$(SW)/tm1/tm1_input.cpp'; then $(CYGPATH_W) '$(SW)/tm1/tm1_input.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tm1/tm1_input.cpp'; fi`

shore_tm1_schema.o: $(SW)/tm1/shore_tm1_schema.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tm1_schema.o -MD -MP -MF $(DEPDIR)/shore_tm1_schema.Tpo -c -o shore_tm1_schema.o `test -f '$(SW)/tm1/shore_tm1_schema.cpp' || echo '$(srcdir)/'`$(SW)/tm1/shore_tm1_schema.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tm1_schema.Tpo $(DEPDIR)/shore_tm1_schema.Po
#	$(AM_V_CXX)source='$(SW)/tm1/shore_tm1_schema.cpp' object='shore_tm1_schema.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tm1_schema.o `test -f '$(SW)/tm1/shore_tm1_schema.cpp' || echo '$(srcdir)/'`$(SW)/tm1/shore_tm1_schema.cpp

shore_tm1_schema.obj: $(SW)/tm1/shore_tm1_schema.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tm1_schema.obj -MD -MP -MF $(DEPDIR)/shore_tm1_schema.Tpo -c -o shore_tm1_schema.obj `if test -f '$(SW)/tm1/shore_tm1_schema.cpp'; then $(CYGPATH_W) '$(SW)/tm1/shore_tm1_schema.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tm1/shore_tm1_schema.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tm1_schema.Tpo $(DEPDIR)/shore_tm1_schema.Po
#	$(AM_V_CXX)source='$(SW)/tm1/shore_tm1_schema.cpp' object='shore_tm1_schema.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tm1_schema.obj `if test -f '$(SW)/tm1/shore_tm1_schema.cpp'; then $(CYGPATH_W) '$(SW)/tm1/shore_tm1_schema.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tm1/shore_tm1_schema.cpp'; fi`

shore_tm1_schema_man.o: $(SW)/tm1/shore_tm1_schema_man.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tm1_schema_man.o -MD -MP -MF $(DEPDIR)/shore_tm1_schema_man.Tpo -c -o shore_tm1_schema_man.o `test -f '$(SW)/tm1/shore_tm1_schema_man.cpp' || echo '$(srcdir)/'`$(SW)/tm1/shore_tm1_schema_man.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tm1_schema_man.Tpo $(DEPDIR)/shore_tm1_schema_man.Po
#	$(AM_V_CXX)source='$(SW)/tm1/shore_tm1_schema_man.cpp' object='shore_tm1_schema_man.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tm1_schema_man.o `test -f '$(SW)/tm1/shore_tm1_schema_man.cpp' || echo '$(srcdir)/'`$(SW)/tm1/shore_tm1_schema_man.cpp

shore_tm1_schema_man.obj: $(SW)/tm1/shore_tm1_schema_man.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tm1_schema_man.obj -MD -MP -MF $(DEPDIR)/shore_tm1_schema_man.Tpo -c -o shore_tm1_schema_man.obj `if test -f '$(SW)/tm1/shore_tm1_schema_man.cpp'; then $(CYGPATH_W) '$(SW)/tm1/shore_tm1_schema_man.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tm1/shore_tm1_schema_man.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tm1_schema_man.Tpo $(DEPDIR)/shore_tm1_schema_man.Po
#	$(AM_V_CXX)source='$(SW)/tm1/shore_tm1_schema_man.cpp' object='shore_tm1_schema_man.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tm1_schema_man.obj `if test -f '$(SW)/tm1/shore_tm1_schema_man.cpp'; then $(CYGPATH_W) '$(SW)/tm1/shore_tm1_schema_man.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tm1/shore_tm1_schema_man.cpp'; fi`

shore_tm1_env.o: $(SW)/tm1/shore_tm1_env.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tm1_env.o -MD -MP -MF $(DEPDIR)/shore_tm1_env.Tpo -c -o shore_tm1_env.o `test -f '$(SW)/tm1/shore_tm1_env.cpp' || echo '$(srcdir)/'`$(SW)/tm1/shore_tm1_env.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tm1_env.Tpo $(DEPDIR)/shore_tm1_env.Po
#	$(AM_V_CXX)source='$(SW)/tm1/shore_tm1_env.cpp' object='shore_tm1_env.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tm1_env.o `test -f '$(SW)/tm1/shore_tm1_env.cpp' || echo '$(srcdir)/'`$(SW)/tm1/shore_tm1_env.cpp

shore_tm1_env.obj: $(SW)/tm1/shore_tm1_env.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tm1_env.obj -MD -MP -MF $(DEPDIR)/shore_tm1_env.Tpo -c -o shore_tm1_env.obj `if test -f '$(SW)/tm1/shore_tm1_env.cpp'; then $(CYGPATH_W) '$(SW)/tm1/shore_tm1_env.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tm1/shore_tm1_env.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tm1_env.Tpo $(DEPDIR)/shore_tm1_env.Po
#	$(AM_V_CXX)source='$(SW)/tm1/shore_tm1_env.cpp' object='shore_tm1_env.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tm1_env.obj `if test -f '$(SW)/tm1/shore_tm1_env.cpp'; then $(CYGPATH_W) '$(SW)/tm1/shore_tm1_env.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tm1/shore_tm1_env.cpp'; fi`

shore_tm1_xct.o: $(SW)/tm1/shore_tm1_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tm1_xct.o -MD -MP -MF $(DEPDIR)/shore_tm1_xct.Tpo -c -o shore_tm1_xct.o `test -f '$(SW)/tm1/shore_tm1_xct.cpp' || echo '$(srcdir)/'`$(SW)/tm1/shore_tm1_xct.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tm1_xct.Tpo $(DEPDIR)/shore_tm1_xct.Po
#	$(AM_V_CXX)source='$(SW)/tm1/shore_tm1_xct.cpp' object='shore_tm1_xct.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tm1_xct.o `test -f '$(SW)/tm1/shore_tm1_xct.cpp' || echo '$(srcdir)/'`$(SW)/tm1/shore_tm1_xct.cpp

shore_tm1_xct.obj: $(SW)/tm1/shore_tm1_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tm1_xct.obj -MD -MP -MF $(DEPDIR)/shore_tm1_xct.Tpo -c -o shore_tm1_xct.obj `if test -f '$(SW)/tm1/shore_tm1_xct.cpp'; then $(CYGPATH_W) '$(SW)/tm1/shore_tm1_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tm1/shore_tm1_xct.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tm1_xct.Tpo $(DEPDIR)/shore_tm1_xct.Po
#	$(AM_V_CXX)source='$(SW)/tm1/shore_tm1_xct.cpp' object='shore_tm1_xct.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tm1_xct.obj `if test -f '$(SW)/tm1/shore_tm1_xct.cpp'; then $(CYGPATH_W) '$(SW)/tm1/shore_tm1_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tm1/shore_tm1_xct.cpp'; fi`

shore_tm1_client.o: $(SW)/tm1/shore_tm1_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tm1_client.o -MD -MP -MF $(DEPDIR)/shore_tm1_client.Tpo -c -o shore_tm1_client.o `test -f '$(SW)/tm1/shore_tm1_client.cpp' || echo '$(srcdir)/'`$(SW)/tm1/shore_tm1_client.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tm1_client.Tpo $(DEPDIR)/shore_tm1_client.Po
#	$(AM_V_CXX)source='$(SW)/tm1/shore_tm1_client.cpp' object='shore_tm1_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tm1_client.o `test -f '$(SW)/tm1/shore_tm1_client.cpp' || echo '$(srcdir)/'`$(SW)/tm1/shore_tm1_client.cpp

shore_tm1_client.obj: $(SW)/tm1/shore_tm1_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tm1_client.obj -MD -MP -MF $(DEPDIR)/shore_tm1_client.Tpo -c -o shore_tm1_client.obj `if test -f '$(SW)/tm1/shore_tm1_client.cpp'; then $(CYGPATH_W) '$(SW)/tm1/shore_tm1_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tm1/shore_tm1_client.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tm1_client.Tpo $(DEPDIR)/shore_tm1_client.Po
#	$(AM_V_CXX)source='$(SW)/tm1/shore_tm1_client.cpp' object='shore_tm1_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tm1_client.obj `if test -f '$(SW)/tm1/shore_tm1_client.cpp'; then $(CYGPATH_W) '$(SW)/tm1/shore_tm1_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tm1/shore_tm1_client.cpp'; fi`

tpcb_input.o: $(SW)/tpcb/tpcb_input.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tpcb_input.o -MD -MP -MF $(DEPDIR)/tpcb_input.Tpo -c -o tpcb_input.o `test -f '$(SW)/tpcb/tpcb_input.cpp' || echo '$(srcdir)/'`$(SW)/tpcb/tpcb_input.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/tpcb_input.Tpo $(DEPDIR)/tpcb_input.Po
#	$(AM_V_CXX)source='$(SW)/tpcb/tpcb_input.cpp' object='tpcb_input.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tpcb_input.o `test -f '$(SW)/tpcb/tpcb_input.cpp' || echo '$(srcdir)/'`$(SW)/tpcb/tpcb_input.cpp

tpcb_input.obj: $(SW)/tpcb/tpcb_input.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tpcb_input.obj -MD -MP -MF $(DEPDIR)/tpcb_input.Tpo -c -o tpcb_input.obj `if test -f '$(SW)/tpcb/tpcb_input.cpp'; then $(CYGPATH_W) '$(SW)/tpcb/tpcb_input.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcb/tpcb_input.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tpcb_input.Tpo $(DEPDIR)/tpcb_input.Po
#	$(AM_V_CXX)source='$(SW)/tpcb/tpcb_input.cpp' object='tpcb_input.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tpcb_input.obj `if test -f '$(SW)/tpcb/tpcb_input.cpp'; then $(CYGPATH_W) '$(SW)/tpcb/tpcb_input.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcb/tpcb_input.cpp'; fi`

shore_tpcb_schema.o: $(SW)/tpcb/shore_tpcb_schema.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcb_schema.o -MD -MP -MF $(DEPDIR)/shore_tpcb_schema.Tpo -c -o shore_tpcb_schema.o `test -f '$(SW)/tpcb/shore_tpcb_schema.cpp' || echo '$(srcdir)/'`$(SW)/tpcb/shore_tpcb_schema.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcb_schema.Tpo $(DEPDIR)/shore_tpcb_schema.Po
#	$(AM_V_CXX)source='$(SW)/tpcb/shore_tpcb_schema.cpp' object='shore_tpcb_schema.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcb_schema.o `test -f '$(SW)/tpcb/shore_tpcb_schema.cpp' || echo '$(srcdir)/'`$(SW)/tpcb/shore_tpcb_schema.cpp

shore_tpcb_schema.obj: $(SW)/tpcb/shore_tpcb_schema.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcb_schema.obj -MD -MP -MF $(DEPDIR)/shore_tpcb_schema.Tpo -c -o shore_tpcb_schema.obj `if test -f '$(SW)/tpcb/shore_tpcb_schema.cpp'; then $(CYGPATH_W) '$(SW)/tpcb/shore_tpcb_schema.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcb/shore_tpcb_schema.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcb_schema.Tpo $(DEPDIR)/shore_tpcb_schema.Po
#	$(AM_V_CXX)source='$(SW)/tpcb/shore_tpcb_schema.cpp' object='shore_tpcb_schema.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcb_schema.obj `if test -f '$(SW)/tpcb/shore_tpcb_schema.cpp'; then $(CYGPATH_W) '$(SW)/tpcb/shore_tpcb_schema.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcb/shore_tpcb_schema.cpp'; fi`

shore_tpcb_schema_man.o: $(SW)/tpcb/shore_tpcb_schema_man.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcb_schema_man.o -MD -MP -MF $(DEPDIR)/shore_tpcb_schema_man.Tpo -c -o shore_tpcb_schema_man.o `test -f '$(SW)/tpcb/shore_tpcb_schema_man.cpp' || echo '$(srcdir)/'`$(SW)/tpcb/shore_tpcb_schema_man.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcb_schema_man.Tpo $(DEPDIR)/shore_tpcb_schema_man.Po
#	$(AM_V_CXX)source='$(SW)/tpcb/shore_tpcb_schema_man.cpp' object='shore_tpcb_schema_man.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcb_schema_man.o `test -f '$(SW)/tpcb/shore_tpcb_schema_man.cpp' || echo '$(srcdir)/'`$(SW)/tpcb/shore_tpcb_schema_man.cpp

shore_tpcb_schema_man.obj: $(SW)/tpcb/shore_tpcb_schema_man.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcb_schema_man.obj -MD -MP -MF $(DEPDIR)/shore_tpcb_schema_man.Tpo -c -o shore_tpcb_schema_man.obj `if test -f '$(SW)/tpcb/shore_tpcb_schema_man.cpp'; then $(CYGPATH_W) '$(SW)/tpcb/shore_tpcb_schema_man.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcb/shore_tpcb_schema_man.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcb_schema_man.Tpo $(DEPDIR)/shore_tpcb_schema_man.Po
#	$(AM_V_CXX)source='$(SW)/tpcb/shore_tpcb_schema_man.cpp' object='shore_tpcb_schema_man.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcb_schema_man.obj `if test -f '$(SW)/tpcb/shore_tpcb_schema_man.cpp'; then $(CYGPATH_W) '$(SW)/tpcb/shore_tpcb_schema_man.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcb/shore_tpcb_schema_man.cpp'; fi`

shore_tpcb_env.o: $(SW)/tpcb/shore_tpcb_env.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcb_env.o -MD -MP -MF $(DEPDIR)/shore_tpcb_env.Tpo -c -o shore_tpcb_env.o `test -f '$(SW)/tpcb/shore_tpcb_env.cpp' || echo '$(srcdir)/'`$(SW)/tpcb/shore_tpcb_env.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcb_env.Tpo $(DEPDIR)/shore_tpcb_env.Po
#	$(AM_V_CXX)source='$(SW)/tpcb/shore_tpcb_env.cpp' object='shore_tpcb_env.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcb_env.o `test -f '$(SW)/tpcb/shore_tpcb_env.cpp' || echo '$(srcdir)/'`$(SW)/tpcb/shore_tpcb_env.cpp

shore_tpcb_env.obj: $(SW)/tpcb/shore_tpcb_env.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcb_env.obj -MD -MP -MF $(DEPDIR)/shore_tpcb_env.Tpo -c -o shore_tpcb_env.obj `if test -f '$(SW)/tpcb/shore_tpcb_env.cpp'; then $(CYGPATH_W) '$(SW)/tpcb/shore_tpcb_env.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcb/shore_tpcb_env.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcb_env.Tpo $(DEPDIR)/shore_tpcb_env.Po
#	$(AM_V_CXX)source='$(SW)/tpcb/shore_tpcb_env.cpp' object='shore_tpcb_env.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcb_env.obj `if test -f '$(SW)/tpcb/shore_tpcb_env.cpp'; then $(CYGPATH_W) '$(SW)/tpcb/shore_tpcb_env.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcb/shore_tpcb_env.cpp'; fi`

shore_tpcb_xct.o: $(SW)/tpcb/shore_tpcb_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcb_xct.o -MD -MP -MF $(DEPDIR)/shore_tpcb_xct.Tpo -c -o shore_tpcb_xct.o `test -f '$(SW)/tpcb/shore_tpcb_xct.cpp' || echo '$(srcdir)/'`$(SW)/tpcb/shore_tpcb_xct.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcb_xct.Tpo $(DEPDIR)/shore_tpcb_xct.Po
#	$(AM_V_CXX)source='$(SW)/tpcb/shore_tpcb_xct.cpp' object='shore_tpcb_xct.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcb_xct.o `test -f '$(SW)/tpcb/shore_tpcb_xct.cpp' || echo '$(srcdir)/'`$(SW)/tpcb/shore_tpcb_xct.cpp

shore_tpcb_xct.obj: $(SW)/tpcb/shore_tpcb_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcb_xct.obj -MD -MP -MF $(DEPDIR)/shore_tpcb_xct.Tpo -c -o shore_tpcb_xct.obj `if test -f '$(SW)/tpcb/shore_tpcb_xct.cpp'; then $(CYGPATH_W) '$(SW)/tpcb/shore_tpcb_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcb/shore_tpcb_xct.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcb_xct.Tpo $(DEPDIR)/shore_tpcb_xct.Po
#	$(AM_V_CXX)source='$(SW)/tpcb/shore_tpcb_xct.cpp' object='shore_tpcb_xct.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcb_xct.obj `if test -f '$(SW)/tpcb/shore_tpcb_xct.cpp'; then $(CYGPATH_W) '$(SW)/tpcb/shore_tpcb_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcb/shore_tpcb_xct.cpp'; fi`

shore_tpcb_client.o: $(SW)/tpcb/shore_tpcb_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcb_client.o -MD -MP -MF $(DEPDIR)/shore_tpcb_client.Tpo -c -o shore_tpcb_client.o `test -f '$(SW)/tpcb/shore_tpcb_client.cpp' || echo '$(srcdir)/'`$(SW)/tpcb/shore_tpcb_client.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcb_client.Tpo $(DEPDIR)/shore_tpcb_client.Po
#	$(AM_V_CXX)source='$(SW)/tpcb/shore_tpcb_client.cpp' object='shore_tpcb_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcb_client.o `test -f '$(SW)/tpcb/shore_tpcb_client.cpp' || echo '$(srcdir)/'`$(SW)/tpcb/shore_tpcb_client.cpp

shore_tpcb_client.obj: $(SW)/tpcb/shore_tpcb_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpcb_client.obj -MD -MP -MF $(DEPDIR)/shore_tpcb_client.Tpo -c -o shore_tpcb_client.obj `if test -f '$(SW)/tpcb/shore_tpcb_client.cpp'; then $(CYGPATH_W) '$(SW)/tpcb/shore_tpcb_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcb/shore_tpcb_client.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpcb_client.Tpo $(DEPDIR)/shore_tpcb_client.Po
#	$(AM_V_CXX)source='$(SW)/tpcb/shore_tpcb_client.cpp' object='shore_tpcb_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpcb_client.obj `if test -f '$(SW)/tpcb/shore_tpcb_client.cpp'; then $(CYGPATH_W) '$(SW)/tpcb/shore_tpcb_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpcb/shore_tpcb_client.cpp'; fi`

build.o: $(SW)/tpch/dbgen/build.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT build.o -MD -MP -MF $(DEPDIR)/build.Tpo -c -o build.o `test -f '$(SW)/tpch/dbgen/build.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/build.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/build.Tpo $(DEPDIR)/build.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/build.cpp' object='build.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o build.o `test -f '$(SW)/tpch/dbgen/build.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/build.cpp

build.obj: $(SW)/tpch/dbgen/build.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT build.obj -MD -MP -MF $(DEPDIR)/build.Tpo -c -o build.obj `if test -f '$(SW)/tpch/dbgen/build.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/build.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/build.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/build.Tpo $(DEPDIR)/build.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/build.cpp' object='build.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o build.obj `if test -f '$(SW)/tpch/dbgen/build.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/build.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/build.cpp'; fi`

driver.o: $(SW)/tpch/dbgen/driver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT driver.o -MD -MP -MF $(DEPDIR)/driver.Tpo -c -o driver.o `test -f '$(SW)/tpch/dbgen/driver.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/driver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/driver.Tpo $(DEPDIR)/driver.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/driver.cpp' object='driver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o driver.o `test -f '$(SW)/tpch/dbgen/driver.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/driver.cpp

driver.obj: $(SW)/tpch/dbgen/driver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT driver.obj -MD -MP -MF $(DEPDIR)/driver.Tpo -c -o driver.obj `if test -f '$(SW)/tpch/dbgen/driver.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/driver.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/driver.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/driver.Tpo $(DEPDIR)/driver.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/driver.cpp' object='driver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o driver.obj `if test -f '$(SW)/tpch/dbgen/driver.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/driver.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/driver.cpp'; fi`

bm_utils.o: $(SW)/tpch/dbgen/bm_utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bm_utils.o -MD -MP -MF $(DEPDIR)/bm_utils.Tpo -c -o bm_utils.o `test -f '$(SW)/tpch/dbgen/bm_utils.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/bm_utils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bm_utils.Tpo $(DEPDIR)/bm_utils.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/bm_utils.cpp' object='bm_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bm_utils.o `test -f '$(SW)/tpch/dbgen/bm_utils.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/bm_utils.cpp

bm_utils.obj: $(SW)/tpch/dbgen/bm_utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bm_utils.obj -MD -MP -MF $(DEPDIR)/bm_utils.Tpo -c -o bm_utils.obj `if test -f '$(SW)/tpch/dbgen/bm_utils.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/bm_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/bm_utils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bm_utils.Tpo $(DEPDIR)/bm_utils.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/bm_utils.cpp' object='bm_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bm_utils.obj `if test -f '$(SW)/tpch/dbgen/bm_utils.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/bm_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/bm_utils.cpp'; fi`

rnd.o: $(SW)/tpch/dbgen/rnd.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rnd.o -MD -MP -MF $(DEPDIR)/rnd.Tpo -c -o rnd.o `test -f '$(SW)/tpch/dbgen/rnd.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/rnd.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/rnd.Tpo $(DEPDIR)/rnd.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/rnd.cpp' object='rnd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rnd.o `test -f '$(SW)/tpch/dbgen/rnd.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/rnd.cpp

rnd.obj: $(SW)/tpch/dbgen/rnd.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rnd.obj -MD -MP -MF $(DEPDIR)/rnd.Tpo -c -o rnd.obj `if test -f '$(SW)/tpch/dbgen/rnd.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/rnd.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/rnd.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/rnd.Tpo $(DEPDIR)/rnd.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/rnd.cpp' object='rnd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rnd.obj `if test -f '$(SW)/tpch/dbgen/rnd.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/rnd.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/rnd.cpp'; fi`

print.o: $(SW)/tpch/dbgen/print.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT print.o -MD -MP -MF $(DEPDIR)/print.Tpo -c -o print.o `test -f '$(SW)/tpch/dbgen/print.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/print.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/print.Tpo $(DEPDIR)/print.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/print.cpp' object='print.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o print.o `test -f '$(SW)/tpch/dbgen/print.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/print.cpp

print.obj: $(SW)/tpch/dbgen/print.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT print.obj -MD -MP -MF $(DEPDIR)/print.Tpo -c -o print.obj `if test -f '$(SW)/tpch/dbgen/print.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/print.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/print.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/print.Tpo $(DEPDIR)/print.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/print.cpp' object='print.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o print.obj `if test -f '$(SW)/tpch/dbgen/print.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/print.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/print.cpp'; fi`

load_stub.o: $(SW)/tpch/dbgen/load_stub.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT load_stub.o -MD -MP -MF $(DEPDIR)/load_stub.Tpo -c -o load_stub.o `test -f '$(SW)/tpch/dbgen/load_stub.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/load_stub.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/load_stub.Tpo $(DEPDIR)/load_stub.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/load_stub.cpp' object='load_stub.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o load_stub.o `test -f '$(SW)/tpch/dbgen/load_stub.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/load_stub.cpp

load_stub.obj: $(SW)/tpch/dbgen/load_stub.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT load_stub.obj -MD -MP -MF $(DEPDIR)/load_stub.Tpo -c -o load_stub.obj `if test -f '$(SW)/tpch/dbgen/load_stub.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/load_stub.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/load_stub.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/load_stub.Tpo $(DEPDIR)/load_stub.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/load_stub.cpp' object='load_stub.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o load_stub.obj `if test -f '$(SW)/tpch/dbgen/load_stub.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/load_stub.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/load_stub.cpp'; fi`

bcd2.o: $(SW)/tpch/dbgen/bcd2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bcd2.o -MD -MP -MF $(DEPDIR)/bcd2.Tpo -c -o bcd2.o `test -f '$(SW)/tpch/dbgen/bcd2.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/bcd2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bcd2.Tpo $(DEPDIR)/bcd2.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/bcd2.cpp' object='bcd2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bcd2.o `test -f '$(SW)/tpch/dbgen/bcd2.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/bcd2.cpp

bcd2.obj: $(SW)/tpch/dbgen/bcd2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bcd2.obj -MD -MP -MF $(DEPDIR)/bcd2.Tpo -c -o bcd2.obj `if test -f '$(SW)/tpch/dbgen/bcd2.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/bcd2.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/bcd2.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bcd2.Tpo $(DEPDIR)/bcd2.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/bcd2.cpp' object='bcd2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bcd2.obj `if test -f '$(SW)/tpch/dbgen/bcd2.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/bcd2.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/bcd2.cpp'; fi`

speed_seed.o: $(SW)/tpch/dbgen/speed_seed.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT speed_seed.o -MD -MP -MF $(DEPDIR)/speed_seed.Tpo -c -o speed_seed.o `test -f '$(SW)/tpch/dbgen/speed_seed.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/speed_seed.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/speed_seed.Tpo $(DEPDIR)/speed_seed.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/speed_seed.cpp' object='speed_seed.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o speed_seed.o `test -f '$(SW)/tpch/dbgen/speed_seed.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/speed_seed.cpp

speed_seed.obj: $(SW)/tpch/dbgen/speed_seed.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT speed_seed.obj -MD -MP -MF $(DEPDIR)/speed_seed.Tpo -c -o speed_seed.obj `if test -f '$(SW)/tpch/dbgen/speed_seed.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/speed_seed.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/speed_seed.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/speed_seed.Tpo $(DEPDIR)/speed_seed.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/speed_seed.cpp' object='speed_seed.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o speed_seed.obj `if test -f '$(SW)/tpch/dbgen/speed_seed.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/speed_seed.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/speed_seed.cpp'; fi`

text.o: $(SW)/tpch/dbgen/text.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT text.o -MD -MP -MF $(DEPDIR)/text.Tpo -c -o text.o `test -f '$(SW)/tpch/dbgen/text.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/text.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/text.Tpo $(DEPDIR)/text.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/text.cpp' object='text.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o text.o `test -f '$(SW)/tpch/dbgen/text.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/text.cpp

text.obj: $(SW)/tpch/dbgen/text.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT text.obj -MD -MP -MF $(DEPDIR)/text.Tpo -c -o text.obj `if test -f '$(SW)/tpch/dbgen/text.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/text.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/text.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/text.Tpo $(DEPDIR)/text.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/text.cpp' object='text.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o text.obj `if test -f '$(SW)/tpch/dbgen/text.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/text.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/text.cpp'; fi`

permute.o: $(SW)/tpch/dbgen/permute.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT permute.o -MD -MP -MF $(DEPDIR)/permute.Tpo -c -o permute.o `test -f '$(SW)/tpch/dbgen/permute.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/permute.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/permute.Tpo $(DEPDIR)/permute.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/permute.cpp' object='permute.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o permute.o `test -f '$(SW)/tpch/dbgen/permute.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/permute.cpp

permute.obj: $(SW)/tpch/dbgen/permute.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT permute.obj -MD -MP -MF $(DEPDIR)/permute.Tpo -c -o permute.obj `if test -f '$(SW)/tpch/dbgen/permute.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/permute.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/permute.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/permute.Tpo $(DEPDIR)/permute.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/permute.cpp' object='permute.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o permute.obj `if test -f '$(SW)/tpch/dbgen/permute.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/permute.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/permute.cpp'; fi`

rng64.o: $(SW)/tpch/dbgen/rng64.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rng64.o -MD -MP -MF $(DEPDIR)/rng64.Tpo -c -o rng64.o `test -f '$(SW)/tpch/dbgen/rng64.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/rng64.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/rng64.Tpo $(DEPDIR)/rng64.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/rng64.cpp' object='rng64.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rng64.o `test -f '$(SW)/tpch/dbgen/rng64.cpp' || echo '$(srcdir)/'`$(SW)/tpch/dbgen/rng64.cpp

rng64.obj: $(SW)/tpch/dbgen/rng64.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rng64.obj -MD -MP -MF $(DEPDIR)/rng64.Tpo -c -o rng64.obj `if test -f '$(SW)/tpch/dbgen/rng64.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/rng64.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/rng64.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/rng64.Tpo $(DEPDIR)/rng64.Po
#	$(AM_V_CXX)source='$(SW)/tpch/dbgen/rng64.cpp' object='rng64.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rng64.obj `if test -f '$(SW)/tpch/dbgen/rng64.cpp'; then $(CYGPATH_W) '$(SW)/tpch/dbgen/rng64.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/dbgen/rng64.cpp'; fi`

tpch_random.o: $(SW)/tpch/tpch_random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tpch_random.o -MD -MP -MF $(DEPDIR)/tpch_random.Tpo -c -o tpch_random.o `test -f '$(SW)/tpch/tpch_random.cpp' || echo '$(srcdir)/'`$(SW)/tpch/tpch_random.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/tpch_random.Tpo $(DEPDIR)/tpch_random.Po
#	$(AM_V_CXX)source='$(SW)/tpch/tpch_random.cpp' object='tpch_random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tpch_random.o `test -f '$(SW)/tpch/tpch_random.cpp' || echo '$(srcdir)/'`$(SW)/tpch/tpch_random.cpp

tpch_random.obj: $(SW)/tpch/tpch_random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tpch_random.obj -MD -MP -MF $(DEPDIR)/tpch_random.Tpo -c -o tpch_random.obj `if test -f '$(SW)/tpch/tpch_random.cpp'; then $(CYGPATH_W) '$(SW)/tpch/tpch_random.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/tpch_random.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tpch_random.Tpo $(DEPDIR)/tpch_random.Po
#	$(AM_V_CXX)source='$(SW)/tpch/tpch_random.cpp' object='tpch_random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tpch_random.obj `if test -f '$(SW)/tpch/tpch_random.cpp'; then $(CYGPATH_W) '$(SW)/tpch/tpch_random.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/tpch_random.cpp'; fi`

tpch_input.o: $(SW)/tpch/tpch_input.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tpch_input.o -MD -MP -MF $(DEPDIR)/tpch_input.Tpo -c -o tpch_input.o `test -f '$(SW)/tpch/tpch_input.cpp' || echo '$(srcdir)/'`$(SW)/tpch/tpch_input.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/tpch_input.Tpo $(DEPDIR)/tpch_input.Po
#	$(AM_V_CXX)source='$(SW)/tpch/tpch_input.cpp' object='tpch_input.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tpch_input.o `test -f '$(SW)/tpch/tpch_input.cpp' || echo '$(srcdir)/'`$(SW)/tpch/tpch_input.cpp

tpch_input.obj: $(SW)/tpch/tpch_input.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tpch_input.obj -MD -MP -MF $(DEPDIR)/tpch_input.Tpo -c -o tpch_input.obj `if test -f '$(SW)/tpch/tpch_input.cpp'; then $(CYGPATH_W) '$(SW)/tpch/tpch_input.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/tpch_input.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tpch_input.Tpo $(DEPDIR)/tpch_input.Po
#	$(AM_V_CXX)source='$(SW)/tpch/tpch_input.cpp' object='tpch_input.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tpch_input.obj `if test -f '$(SW)/tpch/tpch_input.cpp'; then $(CYGPATH_W) '$(SW)/tpch/tpch_input.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/tpch_input.cpp'; fi`

tpch_util.o: $(SW)/tpch/tpch_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tpch_util.o -MD -MP -MF $(DEPDIR)/tpch_util.Tpo -c -o tpch_util.o `test -f '$(SW)/tpch/tpch_util.cpp' || echo '$(srcdir)/'`$(SW)/tpch/tpch_util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/tpch_util.Tpo $(DEPDIR)/tpch_util.Po
#	$(AM_V_CXX)source='$(SW)/tpch/tpch_util.cpp' object='tpch_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tpch_util.o `test -f '$(SW)/tpch/tpch_util.cpp' || echo '$(srcdir)/'`$(SW)/tpch/tpch_util.cpp

tpch_util.obj: $(SW)/tpch/tpch_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tpch_util.obj -MD -MP -MF $(DEPDIR)/tpch_util.Tpo -c -o tpch_util.obj `if test -f '$(SW)/tpch/tpch_util.cpp'; then $(CYGPATH_W) '$(SW)/tpch/tpch_util.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/tpch_util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tpch_util.Tpo $(DEPDIR)/tpch_util.Po
#	$(AM_V_CXX)source='$(SW)/tpch/tpch_util.cpp' object='tpch_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tpch_util.obj `if test -f '$(SW)/tpch/tpch_util.cpp'; then $(CYGPATH_W) '$(SW)/tpch/tpch_util.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/tpch_util.cpp'; fi`

shore_tpch_schema.o: $(SW)/tpch/shore_tpch_schema.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpch_schema.o -MD -MP -MF $(DEPDIR)/shore_tpch_schema.Tpo -c -o shore_tpch_schema.o `test -f '$(SW)/tpch/shore_tpch_schema.cpp' || echo '$(srcdir)/'`$(SW)/tpch/shore_tpch_schema.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpch_schema.Tpo $(DEPDIR)/shore_tpch_schema.Po
#	$(AM_V_CXX)source='$(SW)/tpch/shore_tpch_schema.cpp' object='shore_tpch_schema.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpch_schema.o `test -f '$(SW)/tpch/shore_tpch_schema.cpp' || echo '$(srcdir)/'`$(SW)/tpch/shore_tpch_schema.cpp

shore_tpch_schema.obj: $(SW)/tpch/shore_tpch_schema.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpch_schema.obj -MD -MP -MF $(DEPDIR)/shore_tpch_schema.Tpo -c -o shore_tpch_schema.obj `if test -f '$(SW)/tpch/shore_tpch_schema.cpp'; then $(CYGPATH_W) '$(SW)/tpch/shore_tpch_schema.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/shore_tpch_schema.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpch_schema.Tpo $(DEPDIR)/shore_tpch_schema.Po
#	$(AM_V_CXX)source='$(SW)/tpch/shore_tpch_schema.cpp' object='shore_tpch_schema.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpch_schema.obj `if test -f '$(SW)/tpch/shore_tpch_schema.cpp'; then $(CYGPATH_W) '$(SW)/tpch/shore_tpch_schema.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/shore_tpch_schema.cpp'; fi`

shore_tpch_schema_man.o: $(SW)/tpch/shore_tpch_schema_man.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpch_schema_man.o -MD -MP -MF $(DEPDIR)/shore_tpch_schema_man.Tpo -c -o shore_tpch_schema_man.o `test -f '$(SW)/tpch/shore_tpch_schema_man.cpp' || echo '$(srcdir)/'`$(SW)/tpch/shore_tpch_schema_man.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpch_schema_man.Tpo $(DEPDIR)/shore_tpch_schema_man.Po
#	$(AM_V_CXX)source='$(SW)/tpch/shore_tpch_schema_man.cpp' object='shore_tpch_schema_man.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpch_schema_man.o `test -f '$(SW)/tpch/shore_tpch_schema_man.cpp' || echo '$(srcdir)/'`$(SW)/tpch/shore_tpch_schema_man.cpp

shore_tpch_schema_man.obj: $(SW)/tpch/shore_tpch_schema_man.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpch_schema_man.obj -MD -MP -MF $(DEPDIR)/shore_tpch_schema_man.Tpo -c -o shore_tpch_schema_man.obj `if test -f '$(SW)/tpch/shore_tpch_schema_man.cpp'; then $(CYGPATH_W) '$(SW)/tpch/shore_tpch_schema_man.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/shore_tpch_schema_man.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpch_schema_man.Tpo $(DEPDIR)/shore_tpch_schema_man.Po
#	$(AM_V_CXX)source='$(SW)/tpch/shore_tpch_schema_man.cpp' object='shore_tpch_schema_man.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpch_schema_man.obj `if test -f '$(SW)/tpch/shore_tpch_schema_man.cpp'; then $(CYGPATH_W) '$(SW)/tpch/shore_tpch_schema_man.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/shore_tpch_schema_man.cpp'; fi`

shore_tpch_env.o: $(SW)/tpch/shore_tpch_env.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpch_env.o -MD -MP -MF $(DEPDIR)/shore_tpch_env.Tpo -c -o shore_tpch_env.o `test -f '$(SW)/tpch/shore_tpch_env.cpp' || echo '$(srcdir)/'`$(SW)/tpch/shore_tpch_env.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpch_env.Tpo $(DEPDIR)/shore_tpch_env.Po
#	$(AM_V_CXX)source='$(SW)/tpch/shore_tpch_env.cpp' object='shore_tpch_env.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpch_env.o `test -f '$(SW)/tpch/shore_tpch_env.cpp' || echo '$(srcdir)/'`$(SW)/tpch/shore_tpch_env.cpp

shore_tpch_env.obj: $(SW)/tpch/shore_tpch_env.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpch_env.obj -MD -MP -MF $(DEPDIR)/shore_tpch_env.Tpo -c -o shore_tpch_env.obj `if test -f '$(SW)/tpch/shore_tpch_env.cpp'; then $(CYGPATH_W) '$(SW)/tpch/shore_tpch_env.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/shore_tpch_env.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpch_env.Tpo $(DEPDIR)/shore_tpch_env.Po
#	$(AM_V_CXX)source='$(SW)/tpch/shore_tpch_env.cpp' object='shore_tpch_env.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpch_env.obj `if test -f '$(SW)/tpch/shore_tpch_env.cpp'; then $(CYGPATH_W) '$(SW)/tpch/shore_tpch_env.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/shore_tpch_env.cpp'; fi`

shore_tpch_xct.o: $(SW)/tpch/shore_tpch_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpch_xct.o -MD -MP -MF $(DEPDIR)/shore_tpch_xct.Tpo -c -o shore_tpch_xct.o `test -f '$(SW)/tpch/shore_tpch_xct.cpp' || echo '$(srcdir)/'`$(SW)/tpch/shore_tpch_xct.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpch_xct.Tpo $(DEPDIR)/shore_tpch_xct.Po
#	$(AM_V_CXX)source='$(SW)/tpch/shore_tpch_xct.cpp' object='shore_tpch_xct.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpch_xct.o `test -f '$(SW)/tpch/shore_tpch_xct.cpp' || echo '$(srcdir)/'`$(SW)/tpch/shore_tpch_xct.cpp

shore_tpch_xct.obj: $(SW)/tpch/shore_tpch_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpch_xct.obj -MD -MP -MF $(DEPDIR)/shore_tpch_xct.Tpo -c -o shore_tpch_xct.obj `if test -f '$(SW)/tpch/shore_tpch_xct.cpp'; then $(CYGPATH_W) '$(SW)/tpch/shore_tpch_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/shore_tpch_xct.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpch_xct.Tpo $(DEPDIR)/shore_tpch_xct.Po
#	$(AM_V_CXX)source='$(SW)/tpch/shore_tpch_xct.cpp' object='shore_tpch_xct.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpch_xct.obj `if test -f '$(SW)/tpch/shore_tpch_xct.cpp'; then $(CYGPATH_W) '$(SW)/tpch/shore_tpch_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/shore_tpch_xct.cpp'; fi`

shore_tpch_client.o: $(SW)/tpch/shore_tpch_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpch_client.o -MD -MP -MF $(DEPDIR)/shore_tpch_client.Tpo -c -o shore_tpch_client.o `test -f '$(SW)/tpch/shore_tpch_client.cpp' || echo '$(srcdir)/'`$(SW)/tpch/shore_tpch_client.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpch_client.Tpo $(DEPDIR)/shore_tpch_client.Po
#	$(AM_V_CXX)source='$(SW)/tpch/shore_tpch_client.cpp' object='shore_tpch_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpch_client.o `test -f '$(SW)/tpch/shore_tpch_client.cpp' || echo '$(srcdir)/'`$(SW)/tpch/shore_tpch_client.cpp

shore_tpch_client.obj: $(SW)/tpch/shore_tpch_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpch_client.obj -MD -MP -MF $(DEPDIR)/shore_tpch_client.Tpo -c -o shore_tpch_client.obj `if test -f '$(SW)/tpch/shore_tpch_client.cpp'; then $(CYGPATH_W) '$(SW)/tpch/shore_tpch_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/shore_tpch_client.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpch_client.Tpo $(DEPDIR)/shore_tpch_client.Po
#	$(AM_V_CXX)source='$(SW)/tpch/shore_tpch_client.cpp' object='shore_tpch_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpch_client.obj `if test -f '$(SW)/tpch/shore_tpch_client.cpp'; then $(CYGPATH_W) '$(SW)/tpch/shore_tpch_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/shore_tpch_client.cpp'; fi`

DateTime.o: $(SW)/tpce/egen/DateTime.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DateTime.o -MD -MP -MF $(DEPDIR)/DateTime.Tpo -c -o DateTime.o `test -f '$(SW)/tpce/egen/DateTime.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/DateTime.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/DateTime.Tpo $(DEPDIR)/DateTime.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/DateTime.cpp' object='DateTime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DateTime.o `test -f '$(SW)/tpce/egen/DateTime.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/DateTime.cpp

DateTime.obj: $(SW)/tpce/egen/DateTime.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DateTime.obj -MD -MP -MF $(DEPDIR)/DateTime.Tpo -c -o DateTime.obj `if test -f '$(SW)/tpce/egen/DateTime.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/DateTime.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/DateTime.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/DateTime.Tpo $(DEPDIR)/DateTime.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/DateTime.cpp' object='DateTime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DateTime.obj `if test -f '$(SW)/tpce/egen/DateTime.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/DateTime.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/DateTime.cpp'; fi`

error.o: $(SW)/tpce/egen/error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT error.o -MD -MP -MF $(DEPDIR)/error.Tpo -c -o error.o `test -f '$(SW)/tpce/egen/error.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/error.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/error.Tpo $(DEPDIR)/error.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/error.cpp' object='error.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o error.o `test -f '$(SW)/tpce/egen/error.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/error.cpp

error.obj: $(SW)/tpce/egen/error.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT error.obj -MD -MP -MF $(DEPDIR)/error.Tpo -c -o error.obj `if test -f '$(SW)/tpce/egen/error.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/error.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/error.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/error.Tpo $(DEPDIR)/error.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/error.cpp' object='error.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o error.obj `if test -f '$(SW)/tpce/egen/error.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/error.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/error.cpp'; fi`

Random.o: $(SW)/tpce/egen/Random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Random.o -MD -MP -MF $(DEPDIR)/Random.Tpo -c -o Random.o `test -f '$(SW)/tpce/egen/Random.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/Random.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/Random.Tpo $(DEPDIR)/Random.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/Random.cpp' object='Random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Random.o `test -f '$(SW)/tpce/egen/Random.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/Random.cpp

Random.obj: $(SW)/tpce/egen/Random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Random.obj -MD -MP -MF $(DEPDIR)/Random.Tpo -c -o Random.obj `if test -f '$(SW)/tpce/egen/Random.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/Random.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/Random.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/Random.Tpo $(DEPDIR)/Random.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/Random.cpp' object='Random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Random.obj `if test -f '$(SW)/tpce/egen/Random.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/Random.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/Random.cpp'; fi`

Money.o: $(SW)/tpce/egen/Money.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Money.o -MD -MP -MF $(DEPDIR)/Money.Tpo -c -o Money.o `test -f '$(SW)/tpce/egen/Money.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/Money.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/Money.Tpo $(DEPDIR)/Money.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/Money.cpp' object='Money.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Money.o `test -f '$(SW)/tpce/egen/Money.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/Money.cpp

Money.obj: $(SW)/tpce/egen/Money.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Money.obj -MD -MP -MF $(DEPDIR)/Money.Tpo -c -o Money.obj `if test -f '$(SW)/tpce/egen/Money.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/Money.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/Money.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/Money.Tpo $(DEPDIR)/Money.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/Money.cpp' object='Money.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Money.obj `if test -f '$(SW)/tpce/egen/Money.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/Money.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/Money.cpp'; fi`

EGenVersion.o: $(SW)/tpce/egen/EGenVersion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EGenVersion.o -MD -MP -MF $(DEPDIR)/EGenVersion.Tpo -c -o EGenVersion.o `test -f '$(SW)/tpce/egen/EGenVersion.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/EGenVersion.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/EGenVersion.Tpo $(DEPDIR)/EGenVersion.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/EGenVersion.cpp' object='EGenVersion.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EGenVersion.o `test -f '$(SW)/tpce/egen/EGenVersion.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/EGenVersion.cpp

EGenVersion.obj: $(SW)/tpce/egen/EGenVersion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EGenVersion.obj -MD -MP -MF $(DEPDIR)/EGenVersion.Tpo -c -o EGenVersion.obj `if test -f '$(SW)/tpce/egen/EGenVersion.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/EGenVersion.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/EGenVersion.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/EGenVersion.Tpo $(DEPDIR)/EGenVersion.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/EGenVersion.cpp' object='EGenVersion.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EGenVersion.obj `if test -f '$(SW)/tpce/egen/EGenVersion.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/EGenVersion.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/EGenVersion.cpp'; fi`

locking.o: $(SW)/tpce/egen/locking.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT locking.o -MD -MP -MF $(DEPDIR)/locking.Tpo -c -o locking.o `test -f '$(SW)/tpce/egen/locking.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/locking.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/locking.Tpo $(DEPDIR)/locking.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/locking.cpp' object='locking.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o locking.o `test -f '$(SW)/tpce/egen/locking.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/locking.cpp

locking.obj: $(SW)/tpce/egen/locking.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT locking.obj -MD -MP -MF $(DEPDIR)/locking.Tpo -c -o locking.obj `if test -f '$(SW)/tpce/egen/locking.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/locking.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/locking.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/locking.Tpo $(DEPDIR)/locking.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/locking.cpp' object='locking.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o locking.obj `if test -f '$(SW)/tpce/egen/locking.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/locking.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/locking.cpp'; fi`

threading.o: $(SW)/tpce/egen/threading.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT threading.o -MD -MP -MF $(DEPDIR)/threading.Tpo -c -o threading.o `test -f '$(SW)/tpce/egen/threading.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/threading.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/threading.Tpo $(DEPDIR)/threading.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/threading.cpp' object='threading.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o threading.o `test -f '$(SW)/tpce/egen/threading.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/threading.cpp

threading.obj: $(SW)/tpce/egen/threading.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT threading.obj -MD -MP -MF $(DEPDIR)/threading.Tpo -c -o threading.obj `if test -f '$(SW)/tpce/egen/threading.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/threading.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/threading.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/threading.Tpo $(DEPDIR)/threading.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/threading.cpp' object='threading.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o threading.obj `if test -f '$(SW)/tpce/egen/threading.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/threading.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/threading.cpp'; fi`

BaseLogger.o: $(SW)/tpce/egen/BaseLogger.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BaseLogger.o -MD -MP -MF $(DEPDIR)/BaseLogger.Tpo -c -o BaseLogger.o `test -f '$(SW)/tpce/egen/BaseLogger.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/BaseLogger.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/BaseLogger.Tpo $(DEPDIR)/BaseLogger.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/BaseLogger.cpp' object='BaseLogger.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BaseLogger.o `test -f '$(SW)/tpce/egen/BaseLogger.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/BaseLogger.cpp

BaseLogger.obj: $(SW)/tpce/egen/BaseLogger.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT BaseLogger.obj -MD -MP -MF $(DEPDIR)/BaseLogger.Tpo -c -o BaseLogger.obj `if test -f '$(SW)/tpce/egen/BaseLogger.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/BaseLogger.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/BaseLogger.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/BaseLogger.Tpo $(DEPDIR)/BaseLogger.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/BaseLogger.cpp' object='BaseLogger.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o BaseLogger.obj `if test -f '$(SW)/tpce/egen/BaseLogger.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/BaseLogger.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/BaseLogger.cpp'; fi`

EGenLogFormatterTab.o: $(SW)/tpce/egen/EGenLogFormatterTab.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EGenLogFormatterTab.o -MD -MP -MF $(DEPDIR)/EGenLogFormatterTab.Tpo -c -o EGenLogFormatterTab.o `test -f '$(SW)/tpce/egen/EGenLogFormatterTab.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/EGenLogFormatterTab.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/EGenLogFormatterTab.Tpo $(DEPDIR)/EGenLogFormatterTab.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/EGenLogFormatterTab.cpp' object='EGenLogFormatterTab.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EGenLogFormatterTab.o `test -f '$(SW)/tpce/egen/EGenLogFormatterTab.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/EGenLogFormatterTab.cpp

EGenLogFormatterTab.obj: $(SW)/tpce/egen/EGenLogFormatterTab.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EGenLogFormatterTab.obj -MD -MP -MF $(DEPDIR)/EGenLogFormatterTab.Tpo -c -o EGenLogFormatterTab.obj `if test -f '$(SW)/tpce/egen/EGenLogFormatterTab.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/EGenLogFormatterTab.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/EGenLogFormatterTab.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/EGenLogFormatterTab.Tpo $(DEPDIR)/EGenLogFormatterTab.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/EGenLogFormatterTab.cpp' object='EGenLogFormatterTab.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EGenLogFormatterTab.obj `if test -f '$(SW)/tpce/egen/EGenLogFormatterTab.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/EGenLogFormatterTab.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/EGenLogFormatterTab.cpp'; fi`

EGenLoader.o: $(SW)/tpce/egen/EGenLoader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EGenLoader.o -MD -MP -MF $(DEPDIR)/EGenLoader.Tpo -c -o EGenLoader.o `test -f '$(SW)/tpce/egen/EGenLoader.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/EGenLoader.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/EGenLoader.Tpo $(DEPDIR)/EGenLoader.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/EGenLoader.cpp' object='EGenLoader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EGenLoader.o `test -f '$(SW)/tpce/egen/EGenLoader.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/EGenLoader.cpp

EGenLoader.obj: $(SW)/tpce/egen/EGenLoader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EGenLoader.obj -MD -MP -MF $(DEPDIR)/EGenLoader.Tpo -c -o EGenLoader.obj `if test -f '$(SW)/tpce/egen/EGenLoader.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/EGenLoader.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/EGenLoader.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/EGenLoader.Tpo $(DEPDIR)/EGenLoader.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/EGenLoader.cpp' object='EGenLoader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EGenLoader.obj `if test -f '$(SW)/tpce/egen/EGenLoader.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/EGenLoader.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/EGenLoader.cpp'; fi`

MEE.o: $(SW)/tpce/egen/MEE.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MEE.o -MD -MP -MF $(DEPDIR)/MEE.Tpo -c -o MEE.o `test -f '$(SW)/tpce/egen/MEE.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/MEE.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MEE.Tpo $(DEPDIR)/MEE.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/MEE.cpp' object='MEE.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MEE.o `test -f '$(SW)/tpce/egen/MEE.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/MEE.cpp

MEE.obj: $(SW)/tpce/egen/MEE.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MEE.obj -MD -MP -MF $(DEPDIR)/MEE.Tpo -c -o MEE.obj `if test -f '$(SW)/tpce/egen/MEE.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/MEE.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/MEE.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/MEE.Tpo $(DEPDIR)/MEE.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/MEE.cpp' object='MEE.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MEE.obj `if test -f '$(SW)/tpce/egen/MEE.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/MEE.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/MEE.cpp'; fi`

MEEPriceBoard.o: $(SW)/tpce/egen/MEEPriceBoard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MEEPriceBoard.o -MD -MP -MF $(DEPDIR)/MEEPriceBoard.Tpo -c -o MEEPriceBoard.o `test -f '$(SW)/tpce/egen/MEEPriceBoard.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/MEEPriceBoard.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MEEPriceBoard.Tpo $(DEPDIR)/MEEPriceBoard.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/MEEPriceBoard.cpp' object='MEEPriceBoard.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MEEPriceBoard.o `test -f '$(SW)/tpce/egen/MEEPriceBoard.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/MEEPriceBoard.cpp

MEEPriceBoard.obj: $(SW)/tpce/egen/MEEPriceBoard.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MEEPriceBoard.obj -MD -MP -MF $(DEPDIR)/MEEPriceBoard.Tpo -c -o MEEPriceBoard.obj `if test -f '$(SW)/tpce/egen/MEEPriceBoard.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/MEEPriceBoard.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/MEEPriceBoard.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/MEEPriceBoard.Tpo $(DEPDIR)/MEEPriceBoard.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/MEEPriceBoard.cpp' object='MEEPriceBoard.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MEEPriceBoard.obj `if test -f '$(SW)/tpce/egen/MEEPriceBoard.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/MEEPriceBoard.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/MEEPriceBoard.cpp'; fi`

MEESecurity.o: $(SW)/tpce/egen/MEESecurity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MEESecurity.o -MD -MP -MF $(DEPDIR)/MEESecurity.Tpo -c -o MEESecurity.o `test -f '$(SW)/tpce/egen/MEESecurity.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/MEESecurity.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MEESecurity.Tpo $(DEPDIR)/MEESecurity.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/MEESecurity.cpp' object='MEESecurity.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MEESecurity.o `test -f '$(SW)/tpce/egen/MEESecurity.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/MEESecurity.cpp

MEESecurity.obj: $(SW)/tpce/egen/MEESecurity.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MEESecurity.obj -MD -MP -MF $(DEPDIR)/MEESecurity.Tpo -c -o MEESecurity.obj `if test -f '$(SW)/tpce/egen/MEESecurity.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/MEESecurity.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/MEESecurity.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/MEESecurity.Tpo $(DEPDIR)/MEESecurity.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/MEESecurity.cpp' object='MEESecurity.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MEESecurity.obj `if test -f '$(SW)/tpce/egen/MEESecurity.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/MEESecurity.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/MEESecurity.cpp'; fi`

MEETickerTape.o: $(SW)/tpce/egen/MEETickerTape.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MEETickerTape.o -MD -MP -MF $(DEPDIR)/MEETickerTape.Tpo -c -o MEETickerTape.o `test -f '$(SW)/tpce/egen/MEETickerTape.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/MEETickerTape.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MEETickerTape.Tpo $(DEPDIR)/MEETickerTape.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/MEETickerTape.cpp' object='MEETickerTape.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MEETickerTape.o `test -f '$(SW)/tpce/egen/MEETickerTape.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/MEETickerTape.cpp

MEETickerTape.obj: $(SW)/tpce/egen/MEETickerTape.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MEETickerTape.obj -MD -MP -MF $(DEPDIR)/MEETickerTape.Tpo -c -o MEETickerTape.obj `if test -f '$(SW)/tpce/egen/MEETickerTape.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/MEETickerTape.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/MEETickerTape.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/MEETickerTape.Tpo $(DEPDIR)/MEETickerTape.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/MEETickerTape.cpp' object='MEETickerTape.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MEETickerTape.obj `if test -f '$(SW)/tpce/egen/MEETickerTape.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/MEETickerTape.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/MEETickerTape.cpp'; fi`

MEETradingFloor.o: $(SW)/tpce/egen/MEETradingFloor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MEETradingFloor.o -MD -MP -MF $(DEPDIR)/MEETradingFloor.Tpo -c -o MEETradingFloor.o `test -f '$(SW)/tpce/egen/MEETradingFloor.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/MEETradingFloor.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/MEETradingFloor.Tpo $(DEPDIR)/MEETradingFloor.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/MEETradingFloor.cpp' object='MEETradingFloor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MEETradingFloor.o `test -f '$(SW)/tpce/egen/MEETradingFloor.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/MEETradingFloor.cpp

MEETradingFloor.obj: $(SW)/tpce/egen/MEETradingFloor.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT MEETradingFloor.obj -MD -MP -MF $(DEPDIR)/MEETradingFloor.Tpo -c -o MEETradingFloor.obj `if test -f '$(SW)/tpce/egen/MEETradingFloor.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/MEETradingFloor.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/MEETradingFloor.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/MEETradingFloor.Tpo $(DEPDIR)/MEETradingFloor.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/MEETradingFloor.cpp' object='MEETradingFloor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o MEETradingFloor.obj `if test -f '$(SW)/tpce/egen/MEETradingFloor.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/MEETradingFloor.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/MEETradingFloor.cpp'; fi`

WheelTime.o: $(SW)/tpce/egen/WheelTime.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT WheelTime.o -MD -MP -MF $(DEPDIR)/WheelTime.Tpo -c -o WheelTime.o `test -f '$(SW)/tpce/egen/WheelTime.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/WheelTime.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/WheelTime.Tpo $(DEPDIR)/WheelTime.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/WheelTime.cpp' object='WheelTime.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WheelTime.o `test -f '$(SW)/tpce/egen/WheelTime.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/WheelTime.cpp

WheelTime.obj: $(SW)/tpce/egen/WheelTime.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT WheelTime.obj -MD -MP -MF $(DEPDIR)/WheelTime.Tpo -c -o WheelTime.obj `if test -f '$(SW)/tpce/egen/WheelTime.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/WheelTime.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/WheelTime.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/WheelTime.Tpo $(DEPDIR)/WheelTime.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/WheelTime.cpp' object='WheelTime.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WheelTime.obj `if test -f '$(SW)/tpce/egen/WheelTime.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/WheelTime.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/WheelTime.cpp'; fi`

AddressTable.o: $(SW)/tpce/egen/AddressTable.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AddressTable.o -MD -MP -MF $(DEPDIR)/AddressTable.Tpo -c -o AddressTable.o `test -f '$(SW)/tpce/egen/AddressTable.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/AddressTable.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/AddressTable.Tpo $(DEPDIR)/AddressTable.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/AddressTable.cpp' object='AddressTable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AddressTable.o `test -f '$(SW)/tpce/egen/AddressTable.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/AddressTable.cpp

AddressTable.obj: $(SW)/tpce/egen/AddressTable.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT AddressTable.obj -MD -MP -MF $(DEPDIR)/AddressTable.Tpo -c -o AddressTable.obj `if test -f '$(SW)/tpce/egen/AddressTable.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/AddressTable.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/AddressTable.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/AddressTable.Tpo $(DEPDIR)/AddressTable.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/AddressTable.cpp' object='AddressTable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o AddressTable.obj `if test -f '$(SW)/tpce/egen/AddressTable.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/AddressTable.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/AddressTable.cpp'; fi`

CustomerSelection.o: $(SW)/tpce/egen/CustomerSelection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CustomerSelection.o -MD -MP -MF $(DEPDIR)/CustomerSelection.Tpo -c -o CustomerSelection.o `test -f '$(SW)/tpce/egen/CustomerSelection.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/CustomerSelection.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/CustomerSelection.Tpo $(DEPDIR)/CustomerSelection.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/CustomerSelection.cpp' object='CustomerSelection.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CustomerSelection.o `test -f '$(SW)/tpce/egen/CustomerSelection.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/CustomerSelection.cpp

CustomerSelection.obj: $(SW)/tpce/egen/CustomerSelection.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CustomerSelection.obj -MD -MP -MF $(DEPDIR)/CustomerSelection.Tpo -c -o CustomerSelection.obj `if test -f '$(SW)/tpce/egen/CustomerSelection.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/CustomerSelection.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/CustomerSelection.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/CustomerSelection.Tpo $(DEPDIR)/CustomerSelection.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/CustomerSelection.cpp' object='CustomerSelection.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CustomerSelection.obj `if test -f '$(SW)/tpce/egen/CustomerSelection.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/CustomerSelection.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/CustomerSelection.cpp'; fi`

CustomerTable.o: $(SW)/tpce/egen/CustomerTable.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CustomerTable.o -MD -MP -MF $(DEPDIR)/CustomerTable.Tpo -c -o CustomerTable.o `test -f '$(SW)/tpce/egen/CustomerTable.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/CustomerTable.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/CustomerTable.Tpo $(DEPDIR)/CustomerTable.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/CustomerTable.cpp' object='CustomerTable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CustomerTable.o `test -f '$(SW)/tpce/egen/CustomerTable.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/CustomerTable.cpp

CustomerTable.obj: $(SW)/tpce/egen/CustomerTable.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CustomerTable.obj -MD -MP -MF $(DEPDIR)/CustomerTable.Tpo -c -o CustomerTable.obj `if test -f '$(SW)/tpce/egen/CustomerTable.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/CustomerTable.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/CustomerTable.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/CustomerTable.Tpo $(DEPDIR)/CustomerTable.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/CustomerTable.cpp' object='CustomerTable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CustomerTable.obj `if test -f '$(SW)/tpce/egen/CustomerTable.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/CustomerTable.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/CustomerTable.cpp'; fi`

InputFlatFilesStructure.o: $(SW)/tpce/egen/InputFlatFilesStructure.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InputFlatFilesStructure.o -MD -MP -MF $(DEPDIR)/InputFlatFilesStructure.Tpo -c -o InputFlatFilesStructure.o `test -f '$(SW)/tpce/egen/InputFlatFilesStructure.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/InputFlatFilesStructure.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/InputFlatFilesStructure.Tpo $(DEPDIR)/InputFlatFilesStructure.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/InputFlatFilesStructure.cpp' object='InputFlatFilesStructure.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InputFlatFilesStructure.o `test -f '$(SW)/tpce/egen/InputFlatFilesStructure.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/InputFlatFilesStructure.cpp

InputFlatFilesStructure.obj: $(SW)/tpce/egen/InputFlatFilesStructure.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT InputFlatFilesStructure.obj -MD -MP -MF $(DEPDIR)/InputFlatFilesStructure.Tpo -c -o InputFlatFilesStructure.obj `if test -f '$(SW)/tpce/egen/InputFlatFilesStructure.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/InputFlatFilesStructure.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/InputFlatFilesStructure.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/InputFlatFilesStructure.Tpo $(DEPDIR)/InputFlatFilesStructure.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/InputFlatFilesStructure.cpp' object='InputFlatFilesStructure.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o InputFlatFilesStructure.obj `if test -f '$(SW)/tpce/egen/InputFlatFilesStructure.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/InputFlatFilesStructure.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/InputFlatFilesStructure.cpp'; fi`

Person.o: $(SW)/tpce/egen/Person.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Person.o -MD -MP -MF $(DEPDIR)/Person.Tpo -c -o Person.o `test -f '$(SW)/tpce/egen/Person.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/Person.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/Person.Tpo $(DEPDIR)/Person.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/Person.cpp' object='Person.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Person.o `test -f '$(SW)/tpce/egen/Person.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/Person.cpp

Person.obj: $(SW)/tpce/egen/Person.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT Person.obj -MD -MP -MF $(DEPDIR)/Person.Tpo -c -o Person.obj `if test -f '$(SW)/tpce/egen/Person.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/Person.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/Person.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/Person.Tpo $(DEPDIR)/Person.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/Person.cpp' object='Person.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Person.obj `if test -f '$(SW)/tpce/egen/Person.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/Person.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/Person.cpp'; fi`

ReadRowFunctions.o: $(SW)/tpce/egen/ReadRowFunctions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ReadRowFunctions.o -MD -MP -MF $(DEPDIR)/ReadRowFunctions.Tpo -c -o ReadRowFunctions.o `test -f '$(SW)/tpce/egen/ReadRowFunctions.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/ReadRowFunctions.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ReadRowFunctions.Tpo $(DEPDIR)/ReadRowFunctions.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/ReadRowFunctions.cpp' object='ReadRowFunctions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ReadRowFunctions.o `test -f '$(SW)/tpce/egen/ReadRowFunctions.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/ReadRowFunctions.cpp

ReadRowFunctions.obj: $(SW)/tpce/egen/ReadRowFunctions.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ReadRowFunctions.obj -MD -MP -MF $(DEPDIR)/ReadRowFunctions.Tpo -c -o ReadRowFunctions.obj `if test -f '$(SW)/tpce/egen/ReadRowFunctions.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/ReadRowFunctions.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/ReadRowFunctions.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ReadRowFunctions.Tpo $(DEPDIR)/ReadRowFunctions.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/ReadRowFunctions.cpp' object='ReadRowFunctions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ReadRowFunctions.obj `if test -f '$(SW)/tpce/egen/ReadRowFunctions.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/ReadRowFunctions.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/ReadRowFunctions.cpp'; fi`

TradeGen.o: $(SW)/tpce/egen/TradeGen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TradeGen.o -MD -MP -MF $(DEPDIR)/TradeGen.Tpo -c -o TradeGen.o `test -f '$(SW)/tpce/egen/TradeGen.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/TradeGen.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/TradeGen.Tpo $(DEPDIR)/TradeGen.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/TradeGen.cpp' object='TradeGen.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TradeGen.o `test -f '$(SW)/tpce/egen/TradeGen.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/TradeGen.cpp

TradeGen.obj: $(SW)/tpce/egen/TradeGen.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT TradeGen.obj -MD -MP -MF $(DEPDIR)/TradeGen.Tpo -c -o TradeGen.obj `if test -f '$(SW)/tpce/egen/TradeGen.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/TradeGen.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/TradeGen.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/TradeGen.Tpo $(DEPDIR)/TradeGen.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/TradeGen.cpp' object='TradeGen.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TradeGen.obj `if test -f '$(SW)/tpce/egen/TradeGen.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/TradeGen.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/TradeGen.cpp'; fi`

FlatFileLoader.o: $(SW)/tpce/egen/FlatFileLoader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FlatFileLoader.o -MD -MP -MF $(DEPDIR)/FlatFileLoader.Tpo -c -o FlatFileLoader.o `test -f '$(SW)/tpce/egen/FlatFileLoader.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/FlatFileLoader.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/FlatFileLoader.Tpo $(DEPDIR)/FlatFileLoader.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/FlatFileLoader.cpp' object='FlatFileLoader.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FlatFileLoader.o `test -f '$(SW)/tpce/egen/FlatFileLoader.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/FlatFileLoader.cpp

FlatFileLoader.obj: $(SW)/tpce/egen/FlatFileLoader.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FlatFileLoader.obj -MD -MP -MF $(DEPDIR)/FlatFileLoader.Tpo -c -o FlatFileLoader.obj `if test -f '$(SW)/tpce/egen/FlatFileLoader.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/FlatFileLoader.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/FlatFileLoader.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/FlatFileLoader.Tpo $(DEPDIR)/FlatFileLoader.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/FlatFileLoader.cpp' object='FlatFileLoader.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FlatFileLoader.obj `if test -f '$(SW)/tpce/egen/FlatFileLoader.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/FlatFileLoader.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/FlatFileLoader.cpp'; fi`

CE.o: $(SW)/tpce/egen/CE.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CE.o -MD -MP -MF $(DEPDIR)/CE.Tpo -c -o CE.o `test -f '$(SW)/tpce/egen/CE.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/CE.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/CE.Tpo $(DEPDIR)/CE.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/CE.cpp' object='CE.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CE.o `test -f '$(SW)/tpce/egen/CE.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/CE.cpp

CE.obj: $(SW)/tpce/egen/CE.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CE.obj -MD -MP -MF $(DEPDIR)/CE.Tpo -c -o CE.obj `if test -f '$(SW)/tpce/egen/CE.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/CE.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/CE.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/CE.Tpo $(DEPDIR)/CE.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/CE.cpp' object='CE.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CE.obj `if test -f '$(SW)/tpce/egen/CE.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/CE.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/CE.cpp'; fi`

CETxnInputGenerator.o: $(SW)/tpce/egen/CETxnInputGenerator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CETxnInputGenerator.o -MD -MP -MF $(DEPDIR)/CETxnInputGenerator.Tpo -c -o CETxnInputGenerator.o `test -f '$(SW)/tpce/egen/CETxnInputGenerator.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/CETxnInputGenerator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/CETxnInputGenerator.Tpo $(DEPDIR)/CETxnInputGenerator.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/CETxnInputGenerator.cpp' object='CETxnInputGenerator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CETxnInputGenerator.o `test -f '$(SW)/tpce/egen/CETxnInputGenerator.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/CETxnInputGenerator.cpp

CETxnInputGenerator.obj: $(SW)/tpce/egen/CETxnInputGenerator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CETxnInputGenerator.obj -MD -MP -MF $(DEPDIR)/CETxnInputGenerator.Tpo -c -o CETxnInputGenerator.obj `if test -f '$(SW)/tpce/egen/CETxnInputGenerator.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/CETxnInputGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/CETxnInputGenerator.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/CETxnInputGenerator.Tpo $(DEPDIR)/CETxnInputGenerator.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/CETxnInputGenerator.cpp' object='CETxnInputGenerator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CETxnInputGenerator.obj `if test -f '$(SW)/tpce/egen/CETxnInputGenerator.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/CETxnInputGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/CETxnInputGenerator.cpp'; fi`

CETxnMixGenerator.o: $(SW)/tpce/egen/CETxnMixGenerator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CETxnMixGenerator.o -MD -MP -MF $(DEPDIR)/CETxnMixGenerator.Tpo -c -o CETxnMixGenerator.o `test -f '$(SW)/tpce/egen/CETxnMixGenerator.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/CETxnMixGenerator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/CETxnMixGenerator.Tpo $(DEPDIR)/CETxnMixGenerator.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/CETxnMixGenerator.cpp' object='CETxnMixGenerator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CETxnMixGenerator.o `test -f '$(SW)/tpce/egen/CETxnMixGenerator.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/CETxnMixGenerator.cpp

CETxnMixGenerator.obj: $(SW)/tpce/egen/CETxnMixGenerator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CETxnMixGenerator.obj -MD -MP -MF $(DEPDIR)/CETxnMixGenerator.Tpo -c -o CETxnMixGenerator.obj `if test -f '$(SW)/tpce/egen/CETxnMixGenerator.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/CETxnMixGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/CETxnMixGenerator.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/CETxnMixGenerator.Tpo $(DEPDIR)/CETxnMixGenerator.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/CETxnMixGenerator.cpp' object='CETxnMixGenerator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CETxnMixGenerator.obj `if test -f '$(SW)/tpce/egen/CETxnMixGenerator.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/CETxnMixGenerator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/CETxnMixGenerator.cpp'; fi`

DM.o: $(SW)/tpce/egen/DM.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DM.o -MD -MP -MF $(DEPDIR)/DM.Tpo -c -o DM.o `test -f '$(SW)/tpce/egen/DM.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/DM.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/DM.Tpo $(DEPDIR)/DM.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/DM.cpp' object='DM.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DM.o `test -f '$(SW)/tpce/egen/DM.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/DM.cpp

DM.obj: $(SW)/tpce/egen/DM.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT DM.obj -MD -MP -MF $(DEPDIR)/DM.Tpo -c -o DM.obj `if test -f '$(SW)/tpce/egen/DM.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/DM.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/DM.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/DM.Tpo $(DEPDIR)/DM.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/DM.cpp' object='DM.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DM.obj `if test -f '$(SW)/tpce/egen/DM.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/DM.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/DM.cpp'; fi`

EGenGenerateAndLoad.o: $(SW)/tpce/egen/EGenGenerateAndLoad.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EGenGenerateAndLoad.o -MD -MP -MF $(DEPDIR)/EGenGenerateAndLoad.Tpo -c -o EGenGenerateAndLoad.o `test -f '$(SW)/tpce/egen/EGenGenerateAndLoad.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/EGenGenerateAndLoad.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/EGenGenerateAndLoad.Tpo $(DEPDIR)/EGenGenerateAndLoad.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/EGenGenerateAndLoad.cpp' object='EGenGenerateAndLoad.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EGenGenerateAndLoad.o `test -f '$(SW)/tpce/egen/EGenGenerateAndLoad.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/EGenGenerateAndLoad.cpp

EGenGenerateAndLoad.obj: $(SW)/tpce/egen/EGenGenerateAndLoad.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EGenGenerateAndLoad.obj -MD -MP -MF $(DEPDIR)/EGenGenerateAndLoad.Tpo -c -o EGenGenerateAndLoad.obj `if test -f '$(SW)/tpce/egen/EGenGenerateAndLoad.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/EGenGenerateAndLoad.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/EGenGenerateAndLoad.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/EGenGenerateAndLoad.Tpo $(DEPDIR)/EGenGenerateAndLoad.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/EGenGenerateAndLoad.cpp' object='EGenGenerateAndLoad.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EGenGenerateAndLoad.obj `if test -f '$(SW)/tpce/egen/EGenGenerateAndLoad.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/EGenGenerateAndLoad.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/EGenGenerateAndLoad.cpp'; fi`

EGenValidate.o: $(SW)/tpce/egen/EGenValidate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EGenValidate.o -MD -MP -MF $(DEPDIR)/EGenValidate.Tpo -c -o EGenValidate.o `test -f '$(SW)/tpce/egen/EGenValidate.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/EGenValidate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/EGenValidate.Tpo $(DEPDIR)/EGenValidate.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/EGenValidate.cpp' object='EGenValidate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EGenValidate.o `test -f '$(SW)/tpce/egen/EGenValidate.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/EGenValidate.cpp

EGenValidate.obj: $(SW)/tpce/egen/EGenValidate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT EGenValidate.obj -MD -MP -MF $(DEPDIR)/EGenValidate.Tpo -c -o EGenValidate.obj `if test -f '$(SW)/tpce/egen/EGenValidate.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/EGenValidate.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/EGenValidate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/EGenValidate.Tpo $(DEPDIR)/EGenValidate.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/EGenValidate.cpp' object='EGenValidate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o EGenValidate.obj `if test -f '$(SW)/tpce/egen/EGenValidate.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/EGenValidate.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/EGenValidate.cpp'; fi`

strutil.o: $(SW)/tpce/egen/strutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT strutil.o -MD -MP -MF $(DEPDIR)/strutil.Tpo -c -o strutil.o `test -f '$(SW)/tpce/egen/strutil.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/strutil.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/strutil.Tpo $(DEPDIR)/strutil.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/strutil.cpp' object='strutil.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o strutil.o `test -f '$(SW)/tpce/egen/strutil.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/strutil.cpp

strutil.obj: $(SW)/tpce/egen/strutil.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT strutil.obj -MD -MP -MF $(DEPDIR)/strutil.Tpo -c -o strutil.obj `if test -f '$(SW)/tpce/egen/strutil.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/strutil.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/strutil.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/strutil.Tpo $(DEPDIR)/strutil.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/strutil.cpp' object='strutil.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o strutil.obj `if test -f '$(SW)/tpce/egen/strutil.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/strutil.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/strutil.cpp'; fi`

progressmeter.o: $(SW)/tpce/egen/progressmeter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT progressmeter.o -MD -MP -MF $(DEPDIR)/progressmeter.Tpo -c -o progressmeter.o `test -f '$(SW)/tpce/egen/progressmeter.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/progressmeter.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/progressmeter.Tpo $(DEPDIR)/progressmeter.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/progressmeter.cpp' object='progressmeter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o progressmeter.o `test -f '$(SW)/tpce/egen/progressmeter.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/progressmeter.cpp

progressmeter.obj: $(SW)/tpce/egen/progressmeter.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT progressmeter.obj -MD -MP -MF $(DEPDIR)/progressmeter.Tpo -c -o progressmeter.obj `if test -f '$(SW)/tpce/egen/progressmeter.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/progressmeter.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/progressmeter.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/progressmeter.Tpo $(DEPDIR)/progressmeter.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/progressmeter.cpp' object='progressmeter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o progressmeter.obj `if test -f '$(SW)/tpce/egen/progressmeter.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/progressmeter.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/progressmeter.cpp'; fi`

progressmeterinterface.o: $(SW)/tpce/egen/progressmeterinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT progressmeterinterface.o -MD -MP -MF $(DEPDIR)/progressmeterinterface.Tpo -c -o progressmeterinterface.o `test -f '$(SW)/tpce/egen/progressmeterinterface.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/progressmeterinterface.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/progressmeterinterface.Tpo $(DEPDIR)/progressmeterinterface.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/progressmeterinterface.cpp' object='progressmeterinterface.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o progressmeterinterface.o `test -f '$(SW)/tpce/egen/progressmeterinterface.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/progressmeterinterface.cpp

progressmeterinterface.obj: $(SW)/tpce/egen/progressmeterinterface.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT progressmeterinterface.obj -MD -MP -MF $(DEPDIR)/progressmeterinterface.Tpo -c -o progressmeterinterface.obj `if test -f '$(SW)/tpce/egen/progressmeterinterface.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/progressmeterinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/progressmeterinterface.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/progressmeterinterface.Tpo $(DEPDIR)/progressmeterinterface.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/progressmeterinterface.cpp' object='progressmeterinterface.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o progressmeterinterface.obj `if test -f '$(SW)/tpce/egen/progressmeterinterface.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/progressmeterinterface.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/progressmeterinterface.cpp'; fi`

bucketsimulator.o: $(SW)/tpce/egen/bucketsimulator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bucketsimulator.o -MD -MP -MF $(DEPDIR)/bucketsimulator.Tpo -c -o bucketsimulator.o `test -f '$(SW)/tpce/egen/bucketsimulator.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/bucketsimulator.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/bucketsimulator.Tpo $(DEPDIR)/bucketsimulator.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/bucketsimulator.cpp' object='bucketsimulator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bucketsimulator.o `test -f '$(SW)/tpce/egen/bucketsimulator.cpp' || echo '$(srcdir)/'`$(SW)/tpce/egen/bucketsimulator.cpp

bucketsimulator.obj: $(SW)/tpce/egen/bucketsimulator.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT bucketsimulator.obj -MD -MP -MF $(DEPDIR)/bucketsimulator.Tpo -c -o bucketsimulator.obj `if test -f '$(SW)/tpce/egen/bucketsimulator.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/bucketsimulator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/bucketsimulator.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/bucketsimulator.Tpo $(DEPDIR)/bucketsimulator.Po
#	$(AM_V_CXX)source='$(SW)/tpce/egen/bucketsimulator.cpp' object='bucketsimulator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o bucketsimulator.obj `if test -f '$(SW)/tpce/egen/bucketsimulator.cpp'; then $(CYGPATH_W) '$(SW)/tpce/egen/bucketsimulator.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/egen/bucketsimulator.cpp'; fi`

tpce_input.o: $(SW)/tpce/tpce_input.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tpce_input.o -MD -MP -MF $(DEPDIR)/tpce_input.Tpo -c -o tpce_input.o `test -f '$(SW)/tpce/tpce_input.cpp' || echo '$(srcdir)/'`$(SW)/tpce/tpce_input.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/tpce_input.Tpo $(DEPDIR)/tpce_input.Po
#	$(AM_V_CXX)source='$(SW)/tpce/tpce_input.cpp' object='tpce_input.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tpce_input.o `test -f '$(SW)/tpce/tpce_input.cpp' || echo '$(srcdir)/'`$(SW)/tpce/tpce_input.cpp

tpce_input.obj: $(SW)/tpce/tpce_input.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tpce_input.obj -MD -MP -MF $(DEPDIR)/tpce_input.Tpo -c -o tpce_input.obj `if test -f '$(SW)/tpce/tpce_input.cpp'; then $(CYGPATH_W) '$(SW)/tpce/tpce_input.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/tpce_input.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/tpce_input.Tpo $(DEPDIR)/tpce_input.Po
#	$(AM_V_CXX)source='$(SW)/tpce/tpce_input.cpp' object='tpce_input.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tpce_input.obj `if test -f '$(SW)/tpce/tpce_input.cpp'; then $(CYGPATH_W) '$(SW)/tpce/tpce_input.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/tpce_input.cpp'; fi`

shore_tpce_schema.o: $(SW)/tpce/shore_tpce_schema.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_schema.o -MD -MP -MF $(DEPDIR)/shore_tpce_schema.Tpo -c -o shore_tpce_schema.o `test -f '$(SW)/tpce/shore_tpce_schema.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_schema.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_schema.Tpo $(DEPDIR)/shore_tpce_schema.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_schema.cpp' object='shore_tpce_schema.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_schema.o `test -f '$(SW)/tpce/shore_tpce_schema.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_schema.cpp

shore_tpce_schema.obj: $(SW)/tpce/shore_tpce_schema.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_schema.obj -MD -MP -MF $(DEPDIR)/shore_tpce_schema.Tpo -c -o shore_tpce_schema.obj `if test -f '$(SW)/tpce/shore_tpce_schema.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_schema.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_schema.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_schema.Tpo $(DEPDIR)/shore_tpce_schema.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_schema.cpp' object='shore_tpce_schema.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_schema.obj `if test -f '$(SW)/tpce/shore_tpce_schema.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_schema.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_schema.cpp'; fi`

shore_tpce_schema_man.o: $(SW)/tpce/shore_tpce_schema_man.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_schema_man.o -MD -MP -MF $(DEPDIR)/shore_tpce_schema_man.Tpo -c -o shore_tpce_schema_man.o `test -f '$(SW)/tpce/shore_tpce_schema_man.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_schema_man.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_schema_man.Tpo $(DEPDIR)/shore_tpce_schema_man.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_schema_man.cpp' object='shore_tpce_schema_man.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_schema_man.o `test -f '$(SW)/tpce/shore_tpce_schema_man.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_schema_man.cpp

shore_tpce_schema_man.obj: $(SW)/tpce/shore_tpce_schema_man.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_schema_man.obj -MD -MP -MF $(DEPDIR)/shore_tpce_schema_man.Tpo -c -o shore_tpce_schema_man.obj `if test -f '$(SW)/tpce/shore_tpce_schema_man.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_schema_man.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_schema_man.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_schema_man.Tpo $(DEPDIR)/shore_tpce_schema_man.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_schema_man.cpp' object='shore_tpce_schema_man.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_schema_man.obj `if test -f '$(SW)/tpce/shore_tpce_schema_man.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_schema_man.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_schema_man.cpp'; fi`

shore_tpce_env.o: $(SW)/tpce/shore_tpce_env.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_env.o -MD -MP -MF $(DEPDIR)/shore_tpce_env.Tpo -c -o shore_tpce_env.o `test -f '$(SW)/tpce/shore_tpce_env.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_env.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_env.Tpo $(DEPDIR)/shore_tpce_env.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_env.cpp' object='shore_tpce_env.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_env.o `test -f '$(SW)/tpce/shore_tpce_env.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_env.cpp

shore_tpce_env.obj: $(SW)/tpce/shore_tpce_env.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_env.obj -MD -MP -MF $(DEPDIR)/shore_tpce_env.Tpo -c -o shore_tpce_env.obj `if test -f '$(SW)/tpce/shore_tpce_env.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_env.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_env.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_env.Tpo $(DEPDIR)/shore_tpce_env.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_env.cpp' object='shore_tpce_env.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_env.obj `if test -f '$(SW)/tpce/shore_tpce_env.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_env.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_env.cpp'; fi`

shore_tpce_client.o: $(SW)/tpce/shore_tpce_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_client.o -MD -MP -MF $(DEPDIR)/shore_tpce_client.Tpo -c -o shore_tpce_client.o `test -f '$(SW)/tpce/shore_tpce_client.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_client.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_client.Tpo $(DEPDIR)/shore_tpce_client.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_client.cpp' object='shore_tpce_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_client.o `test -f '$(SW)/tpce/shore_tpce_client.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_client.cpp

shore_tpce_client.obj: $(SW)/tpce/shore_tpce_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_client.obj -MD -MP -MF $(DEPDIR)/shore_tpce_client.Tpo -c -o shore_tpce_client.obj `if test -f '$(SW)/tpce/shore_tpce_client.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_client.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_client.Tpo $(DEPDIR)/shore_tpce_client.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_client.cpp' object='shore_tpce_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_client.obj `if test -f '$(SW)/tpce/shore_tpce_client.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_client.cpp'; fi`

shore_tpce_xct_populate.o: $(SW)/tpce/shore_tpce_xct_populate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_populate.o -MD -MP -MF $(DEPDIR)/shore_tpce_xct_populate.Tpo -c -o shore_tpce_xct_populate.o `test -f '$(SW)/tpce/shore_tpce_xct_populate.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_populate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_populate.Tpo $(DEPDIR)/shore_tpce_xct_populate.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_populate.cpp' object='shore_tpce_xct_populate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_populate.o `test -f '$(SW)/tpce/shore_tpce_xct_populate.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_populate.cpp

shore_tpce_xct_populate.obj: $(SW)/tpce/shore_tpce_xct_populate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_populate.obj -MD -MP -MF $(DEPDIR)/shore_tpce_xct_populate.Tpo -c -o shore_tpce_xct_populate.obj `if test -f '$(SW)/tpce/shore_tpce_xct_populate.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_populate.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_populate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_populate.Tpo $(DEPDIR)/shore_tpce_xct_populate.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_populate.cpp' object='shore_tpce_xct_populate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_populate.obj `if test -f '$(SW)/tpce/shore_tpce_xct_populate.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_populate.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_populate.cpp'; fi`

shore_tpce_xct_trade_order.o: $(SW)/tpce/shore_tpce_xct_trade_order.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_trade_order.o -MD -MP -MF $(DEPDIR)/shore_tpce_xct_trade_order.Tpo -c -o shore_tpce_xct_trade_order.o `test -f '$(SW)/tpce/shore_tpce_xct_trade_order.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_trade_order.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_trade_order.Tpo $(DEPDIR)/shore_tpce_xct_trade_order.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_trade_order.cpp' object='shore_tpce_xct_trade_order.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_trade_order.o `test -f '$(SW)/tpce/shore_tpce_xct_trade_order.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_trade_order.cpp

shore_tpce_xct_trade_order.obj: $(SW)/tpce/shore_tpce_xct_trade_order.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_trade_order.obj -MD -MP -MF $(DEPDIR)/shore_tpce_xct_trade_order.Tpo -c -o shore_tpce_xct_trade_order.obj `if test -f '$(SW)/tpce/shore_tpce_xct_trade_order.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_trade_order.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_trade_order.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_trade_order.Tpo $(DEPDIR)/shore_tpce_xct_trade_order.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_trade_order.cpp' object='shore_tpce_xct_trade_order.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_trade_order.obj `if test -f '$(SW)/tpce/shore_tpce_xct_trade_order.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_trade_order.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_trade_order.cpp'; fi`

shore_tpce_xct_trade_result.o: $(SW)/tpce/shore_tpce_xct_trade_result.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_trade_result.o -MD -MP -MF $(DEPDIR)/shore_tpce_xct_trade_result.Tpo -c -o shore_tpce_xct_trade_result.o `test -f '$(SW)/tpce/shore_tpce_xct_trade_result.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_trade_result.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_trade_result.Tpo $(DEPDIR)/shore_tpce_xct_trade_result.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_trade_result.cpp' object='shore_tpce_xct_trade_result.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_trade_result.o `test -f '$(SW)/tpce/shore_tpce_xct_trade_result.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_trade_result.cpp

shore_tpce_xct_trade_result.obj: $(SW)/tpce/shore_tpce_xct_trade_result.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_trade_result.obj -MD -MP -MF $(DEPDIR)/shore_tpce_xct_trade_result.Tpo -c -o shore_tpce_xct_trade_result.obj `if test -f '$(SW)/tpce/shore_tpce_xct_trade_result.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_trade_result.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_trade_result.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_trade_result.Tpo $(DEPDIR)/shore_tpce_xct_trade_result.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_trade_result.cpp' object='shore_tpce_xct_trade_result.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_trade_result.obj `if test -f '$(SW)/tpce/shore_tpce_xct_trade_result.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_trade_result.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_trade_result.cpp'; fi`

shore_tpce_xct_trade_lookup.o: $(SW)/tpce/shore_tpce_xct_trade_lookup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_trade_lookup.o -MD -MP -MF $(DEPDIR)/shore_tpce_xct_trade_lookup.Tpo -c -o shore_tpce_xct_trade_lookup.o `test -f '$(SW)/tpce/shore_tpce_xct_trade_lookup.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_trade_lookup.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_trade_lookup.Tpo $(DEPDIR)/shore_tpce_xct_trade_lookup.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_trade_lookup.cpp' object='shore_tpce_xct_trade_lookup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_trade_lookup.o `test -f '$(SW)/tpce/shore_tpce_xct_trade_lookup.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_trade_lookup.cpp

shore_tpce_xct_trade_lookup.obj: $(SW)/tpce/shore_tpce_xct_trade_lookup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_trade_lookup.obj -MD -MP -MF $(DEPDIR)/shore_tpce_xct_trade_lookup.Tpo -c -o shore_tpce_xct_trade_lookup.obj `if test -f '$(SW)/tpce/shore_tpce_xct_trade_lookup.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_trade_lookup.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_trade_lookup.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_trade_lookup.Tpo $(DEPDIR)/shore_tpce_xct_trade_lookup.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_trade_lookup.cpp' object='shore_tpce_xct_trade_lookup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_trade_lookup.obj `if test -f '$(SW)/tpce/shore_tpce_xct_trade_lookup.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_trade_lookup.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_trade_lookup.cpp'; fi`

shore_tpce_xct_customer_position.o: $(SW)/tpce/shore_tpce_xct_customer_position.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_customer_position.o -MD -MP -MF $(DEPDIR)/shore_tpce_xct_customer_position.Tpo -c -o shore_tpce_xct_customer_position.o `test -f '$(SW)/tpce/shore_tpce_xct_customer_position.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_customer_position.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_customer_position.Tpo $(DEPDIR)/shore_tpce_xct_customer_position.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_customer_position.cpp' object='shore_tpce_xct_customer_position.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_customer_position.o `test -f '$(SW)/tpce/shore_tpce_xct_customer_position.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_customer_position.cpp

shore_tpce_xct_customer_position.obj: $(SW)/tpce/shore_tpce_xct_customer_position.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_customer_position.obj -MD -MP -MF $(DEPDIR)/shore_tpce_xct_customer_position.Tpo -c -o shore_tpce_xct_customer_position.obj `if test -f '$(SW)/tpce/shore_tpce_xct_customer_position.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_customer_position.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_customer_position.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_customer_position.Tpo $(DEPDIR)/shore_tpce_xct_customer_position.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_customer_position.cpp' object='shore_tpce_xct_customer_position.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_customer_position.obj `if test -f '$(SW)/tpce/shore_tpce_xct_customer_position.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_customer_position.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_customer_position.cpp'; fi`

shore_tpce_xct_market_feed.o: $(SW)/tpce/shore_tpce_xct_market_feed.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_market_feed.o -MD -MP -MF $(DEPDIR)/shore_tpce_xct_market_feed.Tpo -c -o shore_tpce_xct_market_feed.o `test -f '$(SW)/tpce/shore_tpce_xct_market_feed.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_market_feed.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_market_feed.Tpo $(DEPDIR)/shore_tpce_xct_market_feed.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_market_feed.cpp' object='shore_tpce_xct_market_feed.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_market_feed.o `test -f '$(SW)/tpce/shore_tpce_xct_market_feed.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_market_feed.cpp

shore_tpce_xct_market_feed.obj: $(SW)/tpce/shore_tpce_xct_market_feed.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_market_feed.obj -MD -MP -MF $(DEPDIR)/shore_tpce_xct_market_feed.Tpo -c -o shore_tpce_xct_market_feed.obj `if test -f '$(SW)/tpce/shore_tpce_xct_market_feed.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_market_feed.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_market_feed.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_market_feed.Tpo $(DEPDIR)/shore_tpce_xct_market_feed.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_market_feed.cpp' object='shore_tpce_xct_market_feed.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_market_feed.obj `if test -f '$(SW)/tpce/shore_tpce_xct_market_feed.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_market_feed.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_market_feed.cpp'; fi`

shore_tpce_xct_trade_cleanup.o: $(SW)/tpce/shore_tpce_xct_trade_cleanup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_trade_cleanup.o -MD -MP -MF $(DEPDIR)/shore_tpce_xct_trade_cleanup.Tpo -c -o shore_tpce_xct_trade_cleanup.o `test -f '$(SW)/tpce/shore_tpce_xct_trade_cleanup.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_trade_cleanup.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_trade_cleanup.Tpo $(DEPDIR)/shore_tpce_xct_trade_cleanup.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_trade_cleanup.cpp' object='shore_tpce_xct_trade_cleanup.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_trade_cleanup.o `test -f '$(SW)/tpce/shore_tpce_xct_trade_cleanup.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_trade_cleanup.cpp

shore_tpce_xct_trade_cleanup.obj: $(SW)/tpce/shore_tpce_xct_trade_cleanup.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_trade_cleanup.obj -MD -MP -MF $(DEPDIR)/shore_tpce_xct_trade_cleanup.Tpo -c -o shore_tpce_xct_trade_cleanup.obj `if test -f '$(SW)/tpce/shore_tpce_xct_trade_cleanup.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_trade_cleanup.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_trade_cleanup.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_trade_cleanup.Tpo $(DEPDIR)/shore_tpce_xct_trade_cleanup.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_trade_cleanup.cpp' object='shore_tpce_xct_trade_cleanup.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_trade_cleanup.obj `if test -f '$(SW)/tpce/shore_tpce_xct_trade_cleanup.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_trade_cleanup.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_trade_cleanup.cpp'; fi`

shore_tpce_xct_market_watch.o: $(SW)/tpce/shore_tpce_xct_market_watch.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_market_watch.o -MD -MP -MF $(DEPDIR)/shore_tpce_xct_market_watch.Tpo -c -o shore_tpce_xct_market_watch.o `test -f '$(SW)/tpce/shore_tpce_xct_market_watch.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_market_watch.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_market_watch.Tpo $(DEPDIR)/shore_tpce_xct_market_watch.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_market_watch.cpp' object='shore_tpce_xct_market_watch.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_market_watch.o `test -f '$(SW)/tpce/shore_tpce_xct_market_watch.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_market_watch.cpp

shore_tpce_xct_market_watch.obj: $(SW)/tpce/shore_tpce_xct_market_watch.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_market_watch.obj -MD -MP -MF $(DEPDIR)/shore_tpce_xct_market_watch.Tpo -c -o shore_tpce_xct_market_watch.obj `if test -f '$(SW)/tpce/shore_tpce_xct_market_watch.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_market_watch.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_market_watch.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_market_watch.Tpo $(DEPDIR)/shore_tpce_xct_market_watch.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_market_watch.cpp' object='shore_tpce_xct_market_watch.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_market_watch.obj `if test -f '$(SW)/tpce/shore_tpce_xct_market_watch.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_market_watch.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_market_watch.cpp'; fi`

shore_tpce_xct_data_maintenance.o: $(SW)/tpce/shore_tpce_xct_data_maintenance.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_data_maintenance.o -MD -MP -MF $(DEPDIR)/shore_tpce_xct_data_maintenance.Tpo -c -o shore_tpce_xct_data_maintenance.o `test -f '$(SW)/tpce/shore_tpce_xct_data_maintenance.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_data_maintenance.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_data_maintenance.Tpo $(DEPDIR)/shore_tpce_xct_data_maintenance.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_data_maintenance.cpp' object='shore_tpce_xct_data_maintenance.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_data_maintenance.o `test -f '$(SW)/tpce/shore_tpce_xct_data_maintenance.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_data_maintenance.cpp

shore_tpce_xct_data_maintenance.obj: $(SW)/tpce/shore_tpce_xct_data_maintenance.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_data_maintenance.obj -MD -MP -MF $(DEPDIR)/shore_tpce_xct_data_maintenance.Tpo -c -o shore_tpce_xct_data_maintenance.obj `if test -f '$(SW)/tpce/shore_tpce_xct_data_maintenance.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_data_maintenance.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_data_maintenance.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_data_maintenance.Tpo $(DEPDIR)/shore_tpce_xct_data_maintenance.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_data_maintenance.cpp' object='shore_tpce_xct_data_maintenance.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_data_maintenance.obj `if test -f '$(SW)/tpce/shore_tpce_xct_data_maintenance.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_data_maintenance.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_data_maintenance.cpp'; fi`

shore_tpce_xct_security_detail.o: $(SW)/tpce/shore_tpce_xct_security_detail.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_security_detail.o -MD -MP -MF $(DEPDIR)/shore_tpce_xct_security_detail.Tpo -c -o shore_tpce_xct_security_detail.o `test -f '$(SW)/tpce/shore_tpce_xct_security_detail.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_security_detail.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_security_detail.Tpo $(DEPDIR)/shore_tpce_xct_security_detail.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_security_detail.cpp' object='shore_tpce_xct_security_detail.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_security_detail.o `test -f '$(SW)/tpce/shore_tpce_xct_security_detail.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_security_detail.cpp

shore_tpce_xct_security_detail.obj: $(SW)/tpce/shore_tpce_xct_security_detail.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_security_detail.obj -MD -MP -MF $(DEPDIR)/shore_tpce_xct_security_detail.Tpo -c -o shore_tpce_xct_security_detail.obj `if test -f '$(SW)/tpce/shore_tpce_xct_security_detail.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_security_detail.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_security_detail.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_security_detail.Tpo $(DEPDIR)/shore_tpce_xct_security_detail.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_security_detail.cpp' object='shore_tpce_xct_security_detail.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_security_detail.obj `if test -f '$(SW)/tpce/shore_tpce_xct_security_detail.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_security_detail.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_security_detail.cpp'; fi`

shore_tpce_xct_trade_status.o: $(SW)/tpce/shore_tpce_xct_trade_status.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_trade_status.o -MD -MP -MF $(DEPDIR)/shore_tpce_xct_trade_status.Tpo -c -o shore_tpce_xct_trade_status.o `test -f '$(SW)/tpce/shore_tpce_xct_trade_status.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_trade_status.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_trade_status.Tpo $(DEPDIR)/shore_tpce_xct_trade_status.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_trade_status.cpp' object='shore_tpce_xct_trade_status.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_trade_status.o `test -f '$(SW)/tpce/shore_tpce_xct_trade_status.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_trade_status.cpp

shore_tpce_xct_trade_status.obj: $(SW)/tpce/shore_tpce_xct_trade_status.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_trade_status.obj -MD -MP -MF $(DEPDIR)/shore_tpce_xct_trade_status.Tpo -c -o shore_tpce_xct_trade_status.obj `if test -f '$(SW)/tpce/shore_tpce_xct_trade_status.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_trade_status.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_trade_status.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_trade_status.Tpo $(DEPDIR)/shore_tpce_xct_trade_status.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_trade_status.cpp' object='shore_tpce_xct_trade_status.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_trade_status.obj `if test -f '$(SW)/tpce/shore_tpce_xct_trade_status.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_trade_status.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_trade_status.cpp'; fi`

shore_tpce_xct_broker_volume.o: $(SW)/tpce/shore_tpce_xct_broker_volume.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_broker_volume.o -MD -MP -MF $(DEPDIR)/shore_tpce_xct_broker_volume.Tpo -c -o shore_tpce_xct_broker_volume.o `test -f '$(SW)/tpce/shore_tpce_xct_broker_volume.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_broker_volume.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_broker_volume.Tpo $(DEPDIR)/shore_tpce_xct_broker_volume.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_broker_volume.cpp' object='shore_tpce_xct_broker_volume.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_broker_volume.o `test -f '$(SW)/tpce/shore_tpce_xct_broker_volume.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_broker_volume.cpp

shore_tpce_xct_broker_volume.obj: $(SW)/tpce/shore_tpce_xct_broker_volume.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_broker_volume.obj -MD -MP -MF $(DEPDIR)/shore_tpce_xct_broker_volume.Tpo -c -o shore_tpce_xct_broker_volume.obj `if test -f '$(SW)/tpce/shore_tpce_xct_broker_volume.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_broker_volume.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_broker_volume.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_broker_volume.Tpo $(DEPDIR)/shore_tpce_xct_broker_volume.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_broker_volume.cpp' object='shore_tpce_xct_broker_volume.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_broker_volume.obj `if test -f '$(SW)/tpce/shore_tpce_xct_broker_volume.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_broker_volume.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_broker_volume.cpp'; fi`

shore_tpce_xct_trade_update.o: $(SW)/tpce/shore_tpce_xct_trade_update.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_trade_update.o -MD -MP -MF $(DEPDIR)/shore_tpce_xct_trade_update.Tpo -c -o shore_tpce_xct_trade_update.o `test -f '$(SW)/tpce/shore_tpce_xct_trade_update.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_trade_update.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_trade_update.Tpo $(DEPDIR)/shore_tpce_xct_trade_update.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_trade_update.cpp' object='shore_tpce_xct_trade_update.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_trade_update.o `test -f '$(SW)/tpce/shore_tpce_xct_trade_update.cpp' || echo '$(srcdir)/'`$(SW)/tpce/shore_tpce_xct_trade_update.cpp

shore_tpce_xct_trade_update.obj: $(SW)/tpce/shore_tpce_xct_trade_update.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_tpce_xct_trade_update.obj -MD -MP -MF $(DEPDIR)/shore_tpce_xct_trade_update.Tpo -c -o shore_tpce_xct_trade_update.obj `if test -f '$(SW)/tpce/shore_tpce_xct_trade_update.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_trade_update.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_trade_update.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_tpce_xct_trade_update.Tpo $(DEPDIR)/shore_tpce_xct_trade_update.Po
#	$(AM_V_CXX)source='$(SW)/tpce/shore_tpce_xct_trade_update.cpp' object='shore_tpce_xct_trade_update.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_tpce_xct_trade_update.obj `if test -f '$(SW)/tpce/shore_tpce_xct_trade_update.cpp'; then $(CYGPATH_W) '$(SW)/tpce/shore_tpce_xct_trade_update.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpce/shore_tpce_xct_trade_update.cpp'; fi`

qpipe_tpch_xct.o: $(SW)/tpch/qpipe_tpch_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_tpch_xct.o -MD -MP -MF $(DEPDIR)/qpipe_tpch_xct.Tpo -c -o qpipe_tpch_xct.o `test -f '$(SW)/tpch/qpipe_tpch_xct.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe_tpch_xct.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_tpch_xct.Tpo $(DEPDIR)/qpipe_tpch_xct.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe_tpch_xct.cpp' object='qpipe_tpch_xct.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_tpch_xct.o `test -f '$(SW)/tpch/qpipe_tpch_xct.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe_tpch_xct.cpp

qpipe_tpch_xct.obj: $(SW)/tpch/qpipe_tpch_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_tpch_xct.obj -MD -MP -MF $(DEPDIR)/qpipe_tpch_xct.Tpo -c -o qpipe_tpch_xct.obj `if test -f '$(SW)/tpch/qpipe_tpch_xct.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe_tpch_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe_tpch_xct.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_tpch_xct.Tpo $(DEPDIR)/qpipe_tpch_xct.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe_tpch_xct.cpp' object='qpipe_tpch_xct.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_tpch_xct.obj `if test -f '$(SW)/tpch/qpipe_tpch_xct.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe_tpch_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe_tpch_xct.cpp'; fi`

qpipe_tpch_qlineitem.o: $(SW)/tpch/qpipe/qpipe_tpch_qlineitem.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_tpch_qlineitem.o -MD -MP -MF $(DEPDIR)/qpipe_tpch_qlineitem.Tpo -c -o qpipe_tpch_qlineitem.o `test -f '$(SW)/tpch/qpipe/qpipe_tpch_qlineitem.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_tpch_qlineitem.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_tpch_qlineitem.Tpo $(DEPDIR)/qpipe_tpch_qlineitem.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_tpch_qlineitem.cpp' object='qpipe_tpch_qlineitem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_tpch_qlineitem.o `test -f '$(SW)/tpch/qpipe/qpipe_tpch_qlineitem.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_tpch_qlineitem.cpp

qpipe_tpch_qlineitem.obj: $(SW)/tpch/qpipe/qpipe_tpch_qlineitem.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_tpch_qlineitem.obj -MD -MP -MF $(DEPDIR)/qpipe_tpch_qlineitem.Tpo -c -o qpipe_tpch_qlineitem.obj `if test -f '$(SW)/tpch/qpipe/qpipe_tpch_qlineitem.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_tpch_qlineitem.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_tpch_qlineitem.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_tpch_qlineitem.Tpo $(DEPDIR)/qpipe_tpch_qlineitem.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_tpch_qlineitem.cpp' object='qpipe_tpch_qlineitem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_tpch_qlineitem.obj `if test -f '$(SW)/tpch/qpipe/qpipe_tpch_qlineitem.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_tpch_qlineitem.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_tpch_qlineitem.cpp'; fi`

qpipe_tpch_qcustomer.o: $(SW)/tpch/qpipe/qpipe_tpch_qcustomer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_tpch_qcustomer.o -MD -MP -MF $(DEPDIR)/qpipe_tpch_qcustomer.Tpo -c -o qpipe_tpch_qcustomer.o `test -f '$(SW)/tpch/qpipe/qpipe_tpch_qcustomer.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_tpch_qcustomer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_tpch_qcustomer.Tpo $(DEPDIR)/qpipe_tpch_qcustomer.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_tpch_qcustomer.cpp' object='qpipe_tpch_qcustomer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_tpch_qcustomer.o `test -f '$(SW)/tpch/qpipe/qpipe_tpch_qcustomer.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_tpch_qcustomer.cpp

qpipe_tpch_qcustomer.obj: $(SW)/tpch/qpipe/qpipe_tpch_qcustomer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_tpch_qcustomer.obj -MD -MP -MF $(DEPDIR)/qpipe_tpch_qcustomer.Tpo -c -o qpipe_tpch_qcustomer.obj `if test -f '$(SW)/tpch/qpipe/qpipe_tpch_qcustomer.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_tpch_qcustomer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_tpch_qcustomer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_tpch_qcustomer.Tpo $(DEPDIR)/qpipe_tpch_qcustomer.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_tpch_qcustomer.cpp' object='qpipe_tpch_qcustomer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_tpch_qcustomer.obj `if test -f '$(SW)/tpch/qpipe/qpipe_tpch_qcustomer.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_tpch_qcustomer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_tpch_qcustomer.cpp'; fi`

qpipe_tpch_qnation.o: $(SW)/tpch/qpipe/qpipe_tpch_qnation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_tpch_qnation.o -MD -MP -MF $(DEPDIR)/qpipe_tpch_qnation.Tpo -c -o qpipe_tpch_qnation.o `test -f '$(SW)/tpch/qpipe/qpipe_tpch_qnation.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_tpch_qnation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_tpch_qnation.Tpo $(DEPDIR)/qpipe_tpch_qnation.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_tpch_qnation.cpp' object='qpipe_tpch_qnation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_tpch_qnation.o `test -f '$(SW)/tpch/qpipe/qpipe_tpch_qnation.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_tpch_qnation.cpp

qpipe_tpch_qnation.obj: $(SW)/tpch/qpipe/qpipe_tpch_qnation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_tpch_qnation.obj -MD -MP -MF $(DEPDIR)/qpipe_tpch_qnation.Tpo -c -o qpipe_tpch_qnation.obj `if test -f '$(SW)/tpch/qpipe/qpipe_tpch_qnation.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_tpch_qnation.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_tpch_qnation.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_tpch_qnation.Tpo $(DEPDIR)/qpipe_tpch_qnation.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_tpch_qnation.cpp' object='qpipe_tpch_qnation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_tpch_qnation.obj `if test -f '$(SW)/tpch/qpipe/qpipe_tpch_qnation.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_tpch_qnation.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_tpch_qnation.cpp'; fi`

qpipe_tpch_qregion.o: $(SW)/tpch/qpipe/qpipe_tpch_qregion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_tpch_qregion.o -MD -MP -MF $(DEPDIR)/qpipe_tpch_qregion.Tpo -c -o qpipe_tpch_qregion.o `test -f '$(SW)/tpch/qpipe/qpipe_tpch_qregion.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_tpch_qregion.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_tpch_qregion.Tpo $(DEPDIR)/qpipe_tpch_qregion.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_tpch_qregion.cpp' object='qpipe_tpch_qregion.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_tpch_qregion.o `test -f '$(SW)/tpch/qpipe/qpipe_tpch_qregion.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_tpch_qregion.cpp

qpipe_tpch_qregion.obj: $(SW)/tpch/qpipe/qpipe_tpch_qregion.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_tpch_qregion.obj -MD -MP -MF $(DEPDIR)/qpipe_tpch_qregion.Tpo -c -o qpipe_tpch_qregion.obj `if test -f '$(SW)/tpch/qpipe/qpipe_tpch_qregion.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_tpch_qregion.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_tpch_qregion.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_tpch_qregion.Tpo $(DEPDIR)/qpipe_tpch_qregion.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_tpch_qregion.cpp' object='qpipe_tpch_qregion.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_tpch_qregion.obj `if test -f '$(SW)/tpch/qpipe/qpipe_tpch_qregion.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_tpch_qregion.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_tpch_qregion.cpp'; fi`

qpipe_tpch_qpart.o: $(SW)/tpch/qpipe/qpipe_tpch_qpart.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_tpch_qpart.o -MD -MP -MF $(DEPDIR)/qpipe_tpch_qpart.Tpo -c -o qpipe_tpch_qpart.o `test -f '$(SW)/tpch/qpipe/qpipe_tpch_qpart.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_tpch_qpart.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_tpch_qpart.Tpo $(DEPDIR)/qpipe_tpch_qpart.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_tpch_qpart.cpp' object='qpipe_tpch_qpart.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_tpch_qpart.o `test -f '$(SW)/tpch/qpipe/qpipe_tpch_qpart.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_tpch_qpart.cpp

qpipe_tpch_qpart.obj: $(SW)/tpch/qpipe/qpipe_tpch_qpart.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_tpch_qpart.obj -MD -MP -MF $(DEPDIR)/qpipe_tpch_qpart.Tpo -c -o qpipe_tpch_qpart.obj `if test -f '$(SW)/tpch/qpipe/qpipe_tpch_qpart.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_tpch_qpart.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_tpch_qpart.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_tpch_qpart.Tpo $(DEPDIR)/qpipe_tpch_qpart.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_tpch_qpart.cpp' object='qpipe_tpch_qpart.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_tpch_qpart.obj `if test -f '$(SW)/tpch/qpipe/qpipe_tpch_qpart.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_tpch_qpart.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_tpch_qpart.cpp'; fi`

qpipe_tpch_qpartsupp.o: $(SW)/tpch/qpipe/qpipe_tpch_qpartsupp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_tpch_qpartsupp.o -MD -MP -MF $(DEPDIR)/qpipe_tpch_qpartsupp.Tpo -c -o qpipe_tpch_qpartsupp.o `test -f '$(SW)/tpch/qpipe/qpipe_tpch_qpartsupp.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_tpch_qpartsupp.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_tpch_qpartsupp.Tpo $(DEPDIR)/qpipe_tpch_qpartsupp.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_tpch_qpartsupp.cpp' object='qpipe_tpch_qpartsupp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_tpch_qpartsupp.o `test -f '$(SW)/tpch/qpipe/qpipe_tpch_qpartsupp.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_tpch_qpartsupp.cpp

qpipe_tpch_qpartsupp.obj: $(SW)/tpch/qpipe/qpipe_tpch_qpartsupp.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_tpch_qpartsupp.obj -MD -MP -MF $(DEPDIR)/qpipe_tpch_qpartsupp.Tpo -c -o qpipe_tpch_qpartsupp.obj `if test -f '$(SW)/tpch/qpipe/qpipe_tpch_qpartsupp.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_tpch_qpartsupp.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_tpch_qpartsupp.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_tpch_qpartsupp.Tpo $(DEPDIR)/qpipe_tpch_qpartsupp.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_tpch_qpartsupp.cpp' object='qpipe_tpch_qpartsupp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_tpch_qpartsupp.obj `if test -f '$(SW)/tpch/qpipe/qpipe_tpch_qpartsupp.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_tpch_qpartsupp.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_tpch_qpartsupp.cpp'; fi`

qpipe_tpch_qsupplier.o: $(SW)/tpch/qpipe/qpipe_tpch_qsupplier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_tpch_qsupplier.o -MD -MP -MF $(DEPDIR)/qpipe_tpch_qsupplier.Tpo -c -o qpipe_tpch_qsupplier.o `test -f '$(SW)/tpch/qpipe/qpipe_tpch_qsupplier.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_tpch_qsupplier.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_tpch_qsupplier.Tpo $(DEPDIR)/qpipe_tpch_qsupplier.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_tpch_qsupplier.cpp' object='qpipe_tpch_qsupplier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_tpch_qsupplier.o `test -f '$(SW)/tpch/qpipe/qpipe_tpch_qsupplier.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_tpch_qsupplier.cpp

qpipe_tpch_qsupplier.obj: $(SW)/tpch/qpipe/qpipe_tpch_qsupplier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_tpch_qsupplier.obj -MD -MP -MF $(DEPDIR)/qpipe_tpch_qsupplier.Tpo -c -o qpipe_tpch_qsupplier.obj `if test -f '$(SW)/tpch/qpipe/qpipe_tpch_qsupplier.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_tpch_qsupplier.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_tpch_qsupplier.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_tpch_qsupplier.Tpo $(DEPDIR)/qpipe_tpch_qsupplier.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_tpch_qsupplier.cpp' object='qpipe_tpch_qsupplier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_tpch_qsupplier.obj `if test -f '$(SW)/tpch/qpipe/qpipe_tpch_qsupplier.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_tpch_qsupplier.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_tpch_qsupplier.cpp'; fi`

qpipe_tpch_qorders.o: $(SW)/tpch/qpipe/qpipe_tpch_qorders.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_tpch_qorders.o -MD -MP -MF $(DEPDIR)/qpipe_tpch_qorders.Tpo -c -o qpipe_tpch_qorders.o `test -f '$(SW)/tpch/qpipe/qpipe_tpch_qorders.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_tpch_qorders.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_tpch_qorders.Tpo $(DEPDIR)/qpipe_tpch_qorders.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_tpch_qorders.cpp' object='qpipe_tpch_qorders.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_tpch_qorders.o `test -f '$(SW)/tpch/qpipe/qpipe_tpch_qorders.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_tpch_qorders.cpp

qpipe_tpch_qorders.obj: $(SW)/tpch/qpipe/qpipe_tpch_qorders.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_tpch_qorders.obj -MD -MP -MF $(DEPDIR)/qpipe_tpch_qorders.Tpo -c -o qpipe_tpch_qorders.obj `if test -f '$(SW)/tpch/qpipe/qpipe_tpch_qorders.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_tpch_qorders.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_tpch_qorders.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_tpch_qorders.Tpo $(DEPDIR)/qpipe_tpch_qorders.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_tpch_qorders.cpp' object='qpipe_tpch_qorders.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_tpch_qorders.obj `if test -f '$(SW)/tpch/qpipe/qpipe_tpch_qorders.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_tpch_qorders.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_tpch_qorders.cpp'; fi`

qpipe_q1.o: $(SW)/tpch/qpipe/qpipe_q1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q1.o -MD -MP -MF $(DEPDIR)/qpipe_q1.Tpo -c -o qpipe_q1.o `test -f '$(SW)/tpch/qpipe/qpipe_q1.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q1.Tpo $(DEPDIR)/qpipe_q1.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q1.cpp' object='qpipe_q1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q1.o `test -f '$(SW)/tpch/qpipe/qpipe_q1.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q1.cpp

qpipe_q1.obj: $(SW)/tpch/qpipe/qpipe_q1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q1.obj -MD -MP -MF $(DEPDIR)/qpipe_q1.Tpo -c -o qpipe_q1.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q1.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q1.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q1.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q1.Tpo $(DEPDIR)/qpipe_q1.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q1.cpp' object='qpipe_q1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q1.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q1.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q1.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q1.cpp'; fi`

qpipe_q2.o: $(SW)/tpch/qpipe/qpipe_q2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q2.o -MD -MP -MF $(DEPDIR)/qpipe_q2.Tpo -c -o qpipe_q2.o `test -f '$(SW)/tpch/qpipe/qpipe_q2.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q2.Tpo $(DEPDIR)/qpipe_q2.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q2.cpp' object='qpipe_q2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q2.o `test -f '$(SW)/tpch/qpipe/qpipe_q2.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q2.cpp

qpipe_q2.obj: $(SW)/tpch/qpipe/qpipe_q2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q2.obj -MD -MP -MF $(DEPDIR)/qpipe_q2.Tpo -c -o qpipe_q2.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q2.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q2.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q2.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q2.Tpo $(DEPDIR)/qpipe_q2.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q2.cpp' object='qpipe_q2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q2.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q2.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q2.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q2.cpp'; fi`

qpipe_q3.o: $(SW)/tpch/qpipe/qpipe_q3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q3.o -MD -MP -MF $(DEPDIR)/qpipe_q3.Tpo -c -o qpipe_q3.o `test -f '$(SW)/tpch/qpipe/qpipe_q3.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q3.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q3.Tpo $(DEPDIR)/qpipe_q3.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q3.cpp' object='qpipe_q3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q3.o `test -f '$(SW)/tpch/qpipe/qpipe_q3.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q3.cpp

qpipe_q3.obj: $(SW)/tpch/qpipe/qpipe_q3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q3.obj -MD -MP -MF $(DEPDIR)/qpipe_q3.Tpo -c -o qpipe_q3.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q3.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q3.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q3.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q3.Tpo $(DEPDIR)/qpipe_q3.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q3.cpp' object='qpipe_q3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q3.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q3.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q3.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q3.cpp'; fi`

qpipe_q4.o: $(SW)/tpch/qpipe/qpipe_q4.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q4.o -MD -MP -MF $(DEPDIR)/qpipe_q4.Tpo -c -o qpipe_q4.o `test -f '$(SW)/tpch/qpipe/qpipe_q4.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q4.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q4.Tpo $(DEPDIR)/qpipe_q4.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q4.cpp' object='qpipe_q4.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q4.o `test -f '$(SW)/tpch/qpipe/qpipe_q4.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q4.cpp

qpipe_q4.obj: $(SW)/tpch/qpipe/qpipe_q4.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q4.obj -MD -MP -MF $(DEPDIR)/qpipe_q4.Tpo -c -o qpipe_q4.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q4.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q4.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q4.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q4.Tpo $(DEPDIR)/qpipe_q4.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q4.cpp' object='qpipe_q4.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q4.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q4.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q4.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q4.cpp'; fi`

qpipe_q5.o: $(SW)/tpch/qpipe/qpipe_q5.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q5.o -MD -MP -MF $(DEPDIR)/qpipe_q5.Tpo -c -o qpipe_q5.o `test -f '$(SW)/tpch/qpipe/qpipe_q5.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q5.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q5.Tpo $(DEPDIR)/qpipe_q5.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q5.cpp' object='qpipe_q5.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q5.o `test -f '$(SW)/tpch/qpipe/qpipe_q5.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q5.cpp

qpipe_q5.obj: $(SW)/tpch/qpipe/qpipe_q5.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q5.obj -MD -MP -MF $(DEPDIR)/qpipe_q5.Tpo -c -o qpipe_q5.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q5.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q5.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q5.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q5.Tpo $(DEPDIR)/qpipe_q5.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q5.cpp' object='qpipe_q5.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q5.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q5.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q5.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q5.cpp'; fi`

qpipe_q6.o: $(SW)/tpch/qpipe/qpipe_q6.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q6.o -MD -MP -MF $(DEPDIR)/qpipe_q6.Tpo -c -o qpipe_q6.o `test -f '$(SW)/tpch/qpipe/qpipe_q6.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q6.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q6.Tpo $(DEPDIR)/qpipe_q6.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q6.cpp' object='qpipe_q6.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q6.o `test -f '$(SW)/tpch/qpipe/qpipe_q6.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q6.cpp

qpipe_q6.obj: $(SW)/tpch/qpipe/qpipe_q6.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q6.obj -MD -MP -MF $(DEPDIR)/qpipe_q6.Tpo -c -o qpipe_q6.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q6.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q6.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q6.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q6.Tpo $(DEPDIR)/qpipe_q6.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q6.cpp' object='qpipe_q6.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q6.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q6.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q6.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q6.cpp'; fi`

qpipe_q7.o: $(SW)/tpch/qpipe/qpipe_q7.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q7.o -MD -MP -MF $(DEPDIR)/qpipe_q7.Tpo -c -o qpipe_q7.o `test -f '$(SW)/tpch/qpipe/qpipe_q7.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q7.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q7.Tpo $(DEPDIR)/qpipe_q7.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q7.cpp' object='qpipe_q7.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q7.o `test -f '$(SW)/tpch/qpipe/qpipe_q7.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q7.cpp

qpipe_q7.obj: $(SW)/tpch/qpipe/qpipe_q7.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q7.obj -MD -MP -MF $(DEPDIR)/qpipe_q7.Tpo -c -o qpipe_q7.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q7.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q7.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q7.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q7.Tpo $(DEPDIR)/qpipe_q7.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q7.cpp' object='qpipe_q7.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q7.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q7.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q7.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q7.cpp'; fi`

qpipe_q8.o: $(SW)/tpch/qpipe/qpipe_q8.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q8.o -MD -MP -MF $(DEPDIR)/qpipe_q8.Tpo -c -o qpipe_q8.o `test -f '$(SW)/tpch/qpipe/qpipe_q8.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q8.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q8.Tpo $(DEPDIR)/qpipe_q8.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q8.cpp' object='qpipe_q8.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q8.o `test -f '$(SW)/tpch/qpipe/qpipe_q8.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q8.cpp

qpipe_q8.obj: $(SW)/tpch/qpipe/qpipe_q8.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q8.obj -MD -MP -MF $(DEPDIR)/qpipe_q8.Tpo -c -o qpipe_q8.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q8.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q8.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q8.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q8.Tpo $(DEPDIR)/qpipe_q8.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q8.cpp' object='qpipe_q8.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q8.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q8.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q8.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q8.cpp'; fi`

qpipe_q9.o: $(SW)/tpch/qpipe/qpipe_q9.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q9.o -MD -MP -MF $(DEPDIR)/qpipe_q9.Tpo -c -o qpipe_q9.o `test -f '$(SW)/tpch/qpipe/qpipe_q9.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q9.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q9.Tpo $(DEPDIR)/qpipe_q9.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q9.cpp' object='qpipe_q9.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q9.o `test -f '$(SW)/tpch/qpipe/qpipe_q9.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q9.cpp

qpipe_q9.obj: $(SW)/tpch/qpipe/qpipe_q9.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q9.obj -MD -MP -MF $(DEPDIR)/qpipe_q9.Tpo -c -o qpipe_q9.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q9.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q9.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q9.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q9.Tpo $(DEPDIR)/qpipe_q9.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q9.cpp' object='qpipe_q9.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q9.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q9.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q9.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q9.cpp'; fi`

qpipe_q10.o: $(SW)/tpch/qpipe/qpipe_q10.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q10.o -MD -MP -MF $(DEPDIR)/qpipe_q10.Tpo -c -o qpipe_q10.o `test -f '$(SW)/tpch/qpipe/qpipe_q10.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q10.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q10.Tpo $(DEPDIR)/qpipe_q10.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q10.cpp' object='qpipe_q10.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q10.o `test -f '$(SW)/tpch/qpipe/qpipe_q10.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q10.cpp

qpipe_q10.obj: $(SW)/tpch/qpipe/qpipe_q10.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q10.obj -MD -MP -MF $(DEPDIR)/qpipe_q10.Tpo -c -o qpipe_q10.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q10.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q10.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q10.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q10.Tpo $(DEPDIR)/qpipe_q10.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q10.cpp' object='qpipe_q10.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q10.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q10.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q10.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q10.cpp'; fi`

qpipe_q11.o: $(SW)/tpch/qpipe/qpipe_q11.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q11.o -MD -MP -MF $(DEPDIR)/qpipe_q11.Tpo -c -o qpipe_q11.o `test -f '$(SW)/tpch/qpipe/qpipe_q11.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q11.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q11.Tpo $(DEPDIR)/qpipe_q11.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q11.cpp' object='qpipe_q11.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q11.o `test -f '$(SW)/tpch/qpipe/qpipe_q11.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q11.cpp

qpipe_q11.obj: $(SW)/tpch/qpipe/qpipe_q11.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q11.obj -MD -MP -MF $(DEPDIR)/qpipe_q11.Tpo -c -o qpipe_q11.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q11.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q11.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q11.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q11.Tpo $(DEPDIR)/qpipe_q11.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q11.cpp' object='qpipe_q11.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q11.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q11.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q11.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q11.cpp'; fi`

qpipe_q12.o: $(SW)/tpch/qpipe/qpipe_q12.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q12.o -MD -MP -MF $(DEPDIR)/qpipe_q12.Tpo -c -o qpipe_q12.o `test -f '$(SW)/tpch/qpipe/qpipe_q12.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q12.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q12.Tpo $(DEPDIR)/qpipe_q12.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q12.cpp' object='qpipe_q12.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q12.o `test -f '$(SW)/tpch/qpipe/qpipe_q12.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q12.cpp

qpipe_q12.obj: $(SW)/tpch/qpipe/qpipe_q12.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q12.obj -MD -MP -MF $(DEPDIR)/qpipe_q12.Tpo -c -o qpipe_q12.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q12.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q12.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q12.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q12.Tpo $(DEPDIR)/qpipe_q12.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q12.cpp' object='qpipe_q12.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q12.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q12.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q12.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q12.cpp'; fi`

qpipe_q13.o: $(SW)/tpch/qpipe/qpipe_q13.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q13.o -MD -MP -MF $(DEPDIR)/qpipe_q13.Tpo -c -o qpipe_q13.o `test -f '$(SW)/tpch/qpipe/qpipe_q13.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q13.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q13.Tpo $(DEPDIR)/qpipe_q13.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q13.cpp' object='qpipe_q13.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q13.o `test -f '$(SW)/tpch/qpipe/qpipe_q13.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q13.cpp

qpipe_q13.obj: $(SW)/tpch/qpipe/qpipe_q13.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q13.obj -MD -MP -MF $(DEPDIR)/qpipe_q13.Tpo -c -o qpipe_q13.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q13.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q13.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q13.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q13.Tpo $(DEPDIR)/qpipe_q13.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q13.cpp' object='qpipe_q13.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q13.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q13.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q13.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q13.cpp'; fi`

qpipe_q14.o: $(SW)/tpch/qpipe/qpipe_q14.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q14.o -MD -MP -MF $(DEPDIR)/qpipe_q14.Tpo -c -o qpipe_q14.o `test -f '$(SW)/tpch/qpipe/qpipe_q14.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q14.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q14.Tpo $(DEPDIR)/qpipe_q14.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q14.cpp' object='qpipe_q14.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q14.o `test -f '$(SW)/tpch/qpipe/qpipe_q14.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q14.cpp

qpipe_q14.obj: $(SW)/tpch/qpipe/qpipe_q14.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q14.obj -MD -MP -MF $(DEPDIR)/qpipe_q14.Tpo -c -o qpipe_q14.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q14.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q14.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q14.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q14.Tpo $(DEPDIR)/qpipe_q14.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q14.cpp' object='qpipe_q14.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q14.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q14.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q14.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q14.cpp'; fi`

qpipe_q15.o: $(SW)/tpch/qpipe/qpipe_q15.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q15.o -MD -MP -MF $(DEPDIR)/qpipe_q15.Tpo -c -o qpipe_q15.o `test -f '$(SW)/tpch/qpipe/qpipe_q15.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q15.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q15.Tpo $(DEPDIR)/qpipe_q15.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q15.cpp' object='qpipe_q15.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q15.o `test -f '$(SW)/tpch/qpipe/qpipe_q15.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q15.cpp

qpipe_q15.obj: $(SW)/tpch/qpipe/qpipe_q15.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q15.obj -MD -MP -MF $(DEPDIR)/qpipe_q15.Tpo -c -o qpipe_q15.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q15.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q15.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q15.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q15.Tpo $(DEPDIR)/qpipe_q15.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q15.cpp' object='qpipe_q15.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q15.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q15.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q15.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q15.cpp'; fi`

qpipe_q16.o: $(SW)/tpch/qpipe/qpipe_q16.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q16.o -MD -MP -MF $(DEPDIR)/qpipe_q16.Tpo -c -o qpipe_q16.o `test -f '$(SW)/tpch/qpipe/qpipe_q16.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q16.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q16.Tpo $(DEPDIR)/qpipe_q16.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q16.cpp' object='qpipe_q16.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q16.o `test -f '$(SW)/tpch/qpipe/qpipe_q16.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q16.cpp

qpipe_q16.obj: $(SW)/tpch/qpipe/qpipe_q16.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q16.obj -MD -MP -MF $(DEPDIR)/qpipe_q16.Tpo -c -o qpipe_q16.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q16.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q16.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q16.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q16.Tpo $(DEPDIR)/qpipe_q16.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q16.cpp' object='qpipe_q16.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q16.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q16.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q16.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q16.cpp'; fi`

qpipe_q17.o: $(SW)/tpch/qpipe/qpipe_q17.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q17.o -MD -MP -MF $(DEPDIR)/qpipe_q17.Tpo -c -o qpipe_q17.o `test -f '$(SW)/tpch/qpipe/qpipe_q17.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q17.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q17.Tpo $(DEPDIR)/qpipe_q17.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q17.cpp' object='qpipe_q17.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q17.o `test -f '$(SW)/tpch/qpipe/qpipe_q17.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q17.cpp

qpipe_q17.obj: $(SW)/tpch/qpipe/qpipe_q17.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q17.obj -MD -MP -MF $(DEPDIR)/qpipe_q17.Tpo -c -o qpipe_q17.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q17.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q17.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q17.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q17.Tpo $(DEPDIR)/qpipe_q17.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q17.cpp' object='qpipe_q17.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q17.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q17.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q17.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q17.cpp'; fi`

qpipe_q18.o: $(SW)/tpch/qpipe/qpipe_q18.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q18.o -MD -MP -MF $(DEPDIR)/qpipe_q18.Tpo -c -o qpipe_q18.o `test -f '$(SW)/tpch/qpipe/qpipe_q18.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q18.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q18.Tpo $(DEPDIR)/qpipe_q18.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q18.cpp' object='qpipe_q18.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q18.o `test -f '$(SW)/tpch/qpipe/qpipe_q18.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q18.cpp

qpipe_q18.obj: $(SW)/tpch/qpipe/qpipe_q18.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q18.obj -MD -MP -MF $(DEPDIR)/qpipe_q18.Tpo -c -o qpipe_q18.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q18.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q18.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q18.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q18.Tpo $(DEPDIR)/qpipe_q18.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q18.cpp' object='qpipe_q18.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q18.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q18.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q18.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q18.cpp'; fi`

qpipe_q19.o: $(SW)/tpch/qpipe/qpipe_q19.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q19.o -MD -MP -MF $(DEPDIR)/qpipe_q19.Tpo -c -o qpipe_q19.o `test -f '$(SW)/tpch/qpipe/qpipe_q19.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q19.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q19.Tpo $(DEPDIR)/qpipe_q19.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q19.cpp' object='qpipe_q19.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q19.o `test -f '$(SW)/tpch/qpipe/qpipe_q19.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q19.cpp

qpipe_q19.obj: $(SW)/tpch/qpipe/qpipe_q19.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q19.obj -MD -MP -MF $(DEPDIR)/qpipe_q19.Tpo -c -o qpipe_q19.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q19.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q19.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q19.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q19.Tpo $(DEPDIR)/qpipe_q19.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q19.cpp' object='qpipe_q19.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q19.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q19.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q19.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q19.cpp'; fi`

qpipe_q20.o: $(SW)/tpch/qpipe/qpipe_q20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q20.o -MD -MP -MF $(DEPDIR)/qpipe_q20.Tpo -c -o qpipe_q20.o `test -f '$(SW)/tpch/qpipe/qpipe_q20.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q20.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q20.Tpo $(DEPDIR)/qpipe_q20.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q20.cpp' object='qpipe_q20.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q20.o `test -f '$(SW)/tpch/qpipe/qpipe_q20.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q20.cpp

qpipe_q20.obj: $(SW)/tpch/qpipe/qpipe_q20.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q20.obj -MD -MP -MF $(DEPDIR)/qpipe_q20.Tpo -c -o qpipe_q20.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q20.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q20.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q20.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q20.Tpo $(DEPDIR)/qpipe_q20.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q20.cpp' object='qpipe_q20.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q20.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q20.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q20.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q20.cpp'; fi`

qpipe_q21.o: $(SW)/tpch/qpipe/qpipe_q21.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q21.o -MD -MP -MF $(DEPDIR)/qpipe_q21.Tpo -c -o qpipe_q21.o `test -f '$(SW)/tpch/qpipe/qpipe_q21.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q21.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q21.Tpo $(DEPDIR)/qpipe_q21.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q21.cpp' object='qpipe_q21.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q21.o `test -f '$(SW)/tpch/qpipe/qpipe_q21.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q21.cpp

qpipe_q21.obj: $(SW)/tpch/qpipe/qpipe_q21.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q21.obj -MD -MP -MF $(DEPDIR)/qpipe_q21.Tpo -c -o qpipe_q21.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q21.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q21.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q21.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q21.Tpo $(DEPDIR)/qpipe_q21.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q21.cpp' object='qpipe_q21.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q21.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q21.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q21.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q21.cpp'; fi`

qpipe_q22.o: $(SW)/tpch/qpipe/qpipe_q22.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q22.o -MD -MP -MF $(DEPDIR)/qpipe_q22.Tpo -c -o qpipe_q22.o `test -f '$(SW)/tpch/qpipe/qpipe_q22.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q22.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q22.Tpo $(DEPDIR)/qpipe_q22.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q22.cpp' object='qpipe_q22.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q22.o `test -f '$(SW)/tpch/qpipe/qpipe_q22.cpp' || echo '$(srcdir)/'`$(SW)/tpch/qpipe/qpipe_q22.cpp

qpipe_q22.obj: $(SW)/tpch/qpipe/qpipe_q22.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q22.obj -MD -MP -MF $(DEPDIR)/qpipe_q22.Tpo -c -o qpipe_q22.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q22.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q22.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q22.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q22.Tpo $(DEPDIR)/qpipe_q22.Po
#	$(AM_V_CXX)source='$(SW)/tpch/qpipe/qpipe_q22.cpp' object='qpipe_q22.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q22.obj `if test -f '$(SW)/tpch/qpipe/qpipe_q22.cpp'; then $(CYGPATH_W) '$(SW)/tpch/qpipe/qpipe_q22.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/tpch/qpipe/qpipe_q22.cpp'; fi`

qpipe_ssb_xct.o: $(SW)/ssb/qpipe_ssb_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_ssb_xct.o -MD -MP -MF $(DEPDIR)/qpipe_ssb_xct.Tpo -c -o qpipe_ssb_xct.o `test -f '$(SW)/ssb/qpipe_ssb_xct.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe_ssb_xct.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_ssb_xct.Tpo $(DEPDIR)/qpipe_ssb_xct.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe_ssb_xct.cpp' object='qpipe_ssb_xct.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_ssb_xct.o `test -f '$(SW)/ssb/qpipe_ssb_xct.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe_ssb_xct.cpp

qpipe_ssb_xct.obj: $(SW)/ssb/qpipe_ssb_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_ssb_xct.obj -MD -MP -MF $(DEPDIR)/qpipe_ssb_xct.Tpo -c -o qpipe_ssb_xct.obj `if test -f '$(SW)/ssb/qpipe_ssb_xct.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe_ssb_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe_ssb_xct.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_ssb_xct.Tpo $(DEPDIR)/qpipe_ssb_xct.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe_ssb_xct.cpp' object='qpipe_ssb_xct.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_ssb_xct.obj `if test -f '$(SW)/ssb/qpipe_ssb_xct.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe_ssb_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe_ssb_xct.cpp'; fi`

qpipe_q1_1.o: $(SW)/ssb/qpipe/qpipe_q1_1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q1_1.o -MD -MP -MF $(DEPDIR)/qpipe_q1_1.Tpo -c -o qpipe_q1_1.o `test -f '$(SW)/ssb/qpipe/qpipe_q1_1.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q1_1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q1_1.Tpo $(DEPDIR)/qpipe_q1_1.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q1_1.cpp' object='qpipe_q1_1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q1_1.o `test -f '$(SW)/ssb/qpipe/qpipe_q1_1.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q1_1.cpp

qpipe_q1_1.obj: $(SW)/ssb/qpipe/qpipe_q1_1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q1_1.obj -MD -MP -MF $(DEPDIR)/qpipe_q1_1.Tpo -c -o qpipe_q1_1.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q1_1.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q1_1.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q1_1.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q1_1.Tpo $(DEPDIR)/qpipe_q1_1.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q1_1.cpp' object='qpipe_q1_1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q1_1.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q1_1.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q1_1.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q1_1.cpp'; fi`

qpipe_q1_2.o: $(SW)/ssb/qpipe/qpipe_q1_2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q1_2.o -MD -MP -MF $(DEPDIR)/qpipe_q1_2.Tpo -c -o qpipe_q1_2.o `test -f '$(SW)/ssb/qpipe/qpipe_q1_2.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q1_2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q1_2.Tpo $(DEPDIR)/qpipe_q1_2.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q1_2.cpp' object='qpipe_q1_2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q1_2.o `test -f '$(SW)/ssb/qpipe/qpipe_q1_2.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q1_2.cpp

qpipe_q1_2.obj: $(SW)/ssb/qpipe/qpipe_q1_2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q1_2.obj -MD -MP -MF $(DEPDIR)/qpipe_q1_2.Tpo -c -o qpipe_q1_2.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q1_2.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q1_2.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q1_2.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q1_2.Tpo $(DEPDIR)/qpipe_q1_2.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q1_2.cpp' object='qpipe_q1_2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q1_2.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q1_2.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q1_2.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q1_2.cpp'; fi`

qpipe_q1_3.o: $(SW)/ssb/qpipe/qpipe_q1_3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q1_3.o -MD -MP -MF $(DEPDIR)/qpipe_q1_3.Tpo -c -o qpipe_q1_3.o `test -f '$(SW)/ssb/qpipe/qpipe_q1_3.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q1_3.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q1_3.Tpo $(DEPDIR)/qpipe_q1_3.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q1_3.cpp' object='qpipe_q1_3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q1_3.o `test -f '$(SW)/ssb/qpipe/qpipe_q1_3.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q1_3.cpp

qpipe_q1_3.obj: $(SW)/ssb/qpipe/qpipe_q1_3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q1_3.obj -MD -MP -MF $(DEPDIR)/qpipe_q1_3.Tpo -c -o qpipe_q1_3.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q1_3.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q1_3.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q1_3.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q1_3.Tpo $(DEPDIR)/qpipe_q1_3.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q1_3.cpp' object='qpipe_q1_3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q1_3.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q1_3.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q1_3.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q1_3.cpp'; fi`

qpipe_q2_1.o: $(SW)/ssb/qpipe/qpipe_q2_1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q2_1.o -MD -MP -MF $(DEPDIR)/qpipe_q2_1.Tpo -c -o qpipe_q2_1.o `test -f '$(SW)/ssb/qpipe/qpipe_q2_1.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q2_1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q2_1.Tpo $(DEPDIR)/qpipe_q2_1.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q2_1.cpp' object='qpipe_q2_1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q2_1.o `test -f '$(SW)/ssb/qpipe/qpipe_q2_1.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q2_1.cpp

qpipe_q2_1.obj: $(SW)/ssb/qpipe/qpipe_q2_1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q2_1.obj -MD -MP -MF $(DEPDIR)/qpipe_q2_1.Tpo -c -o qpipe_q2_1.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q2_1.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q2_1.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q2_1.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q2_1.Tpo $(DEPDIR)/qpipe_q2_1.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q2_1.cpp' object='qpipe_q2_1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q2_1.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q2_1.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q2_1.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q2_1.cpp'; fi`

qpipe_q2_2.o: $(SW)/ssb/qpipe/qpipe_q2_2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q2_2.o -MD -MP -MF $(DEPDIR)/qpipe_q2_2.Tpo -c -o qpipe_q2_2.o `test -f '$(SW)/ssb/qpipe/qpipe_q2_2.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q2_2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q2_2.Tpo $(DEPDIR)/qpipe_q2_2.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q2_2.cpp' object='qpipe_q2_2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q2_2.o `test -f '$(SW)/ssb/qpipe/qpipe_q2_2.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q2_2.cpp

qpipe_q2_2.obj: $(SW)/ssb/qpipe/qpipe_q2_2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q2_2.obj -MD -MP -MF $(DEPDIR)/qpipe_q2_2.Tpo -c -o qpipe_q2_2.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q2_2.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q2_2.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q2_2.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q2_2.Tpo $(DEPDIR)/qpipe_q2_2.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q2_2.cpp' object='qpipe_q2_2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q2_2.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q2_2.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q2_2.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q2_2.cpp'; fi`

qpipe_q2_3.o: $(SW)/ssb/qpipe/qpipe_q2_3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q2_3.o -MD -MP -MF $(DEPDIR)/qpipe_q2_3.Tpo -c -o qpipe_q2_3.o `test -f '$(SW)/ssb/qpipe/qpipe_q2_3.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q2_3.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q2_3.Tpo $(DEPDIR)/qpipe_q2_3.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q2_3.cpp' object='qpipe_q2_3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q2_3.o `test -f '$(SW)/ssb/qpipe/qpipe_q2_3.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q2_3.cpp

qpipe_q2_3.obj: $(SW)/ssb/qpipe/qpipe_q2_3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q2_3.obj -MD -MP -MF $(DEPDIR)/qpipe_q2_3.Tpo -c -o qpipe_q2_3.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q2_3.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q2_3.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q2_3.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q2_3.Tpo $(DEPDIR)/qpipe_q2_3.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q2_3.cpp' object='qpipe_q2_3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q2_3.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q2_3.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q2_3.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q2_3.cpp'; fi`

qpipe_q3_1.o: $(SW)/ssb/qpipe/qpipe_q3_1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q3_1.o -MD -MP -MF $(DEPDIR)/qpipe_q3_1.Tpo -c -o qpipe_q3_1.o `test -f '$(SW)/ssb/qpipe/qpipe_q3_1.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q3_1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q3_1.Tpo $(DEPDIR)/qpipe_q3_1.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q3_1.cpp' object='qpipe_q3_1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q3_1.o `test -f '$(SW)/ssb/qpipe/qpipe_q3_1.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q3_1.cpp

qpipe_q3_1.obj: $(SW)/ssb/qpipe/qpipe_q3_1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q3_1.obj -MD -MP -MF $(DEPDIR)/qpipe_q3_1.Tpo -c -o qpipe_q3_1.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q3_1.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q3_1.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q3_1.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q3_1.Tpo $(DEPDIR)/qpipe_q3_1.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q3_1.cpp' object='qpipe_q3_1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q3_1.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q3_1.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q3_1.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q3_1.cpp'; fi`

qpipe_q3_2.o: $(SW)/ssb/qpipe/qpipe_q3_2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q3_2.o -MD -MP -MF $(DEPDIR)/qpipe_q3_2.Tpo -c -o qpipe_q3_2.o `test -f '$(SW)/ssb/qpipe/qpipe_q3_2.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q3_2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q3_2.Tpo $(DEPDIR)/qpipe_q3_2.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q3_2.cpp' object='qpipe_q3_2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q3_2.o `test -f '$(SW)/ssb/qpipe/qpipe_q3_2.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q3_2.cpp

qpipe_q3_2.obj: $(SW)/ssb/qpipe/qpipe_q3_2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q3_2.obj -MD -MP -MF $(DEPDIR)/qpipe_q3_2.Tpo -c -o qpipe_q3_2.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q3_2.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q3_2.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q3_2.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q3_2.Tpo $(DEPDIR)/qpipe_q3_2.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q3_2.cpp' object='qpipe_q3_2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q3_2.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q3_2.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q3_2.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q3_2.cpp'; fi`

qpipe_q3_3.o: $(SW)/ssb/qpipe/qpipe_q3_3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q3_3.o -MD -MP -MF $(DEPDIR)/qpipe_q3_3.Tpo -c -o qpipe_q3_3.o `test -f '$(SW)/ssb/qpipe/qpipe_q3_3.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q3_3.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q3_3.Tpo $(DEPDIR)/qpipe_q3_3.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q3_3.cpp' object='qpipe_q3_3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q3_3.o `test -f '$(SW)/ssb/qpipe/qpipe_q3_3.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q3_3.cpp

qpipe_q3_3.obj: $(SW)/ssb/qpipe/qpipe_q3_3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q3_3.obj -MD -MP -MF $(DEPDIR)/qpipe_q3_3.Tpo -c -o qpipe_q3_3.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q3_3.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q3_3.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q3_3.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q3_3.Tpo $(DEPDIR)/qpipe_q3_3.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q3_3.cpp' object='qpipe_q3_3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q3_3.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q3_3.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q3_3.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q3_3.cpp'; fi`

qpipe_q3_4.o: $(SW)/ssb/qpipe/qpipe_q3_4.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q3_4.o -MD -MP -MF $(DEPDIR)/qpipe_q3_4.Tpo -c -o qpipe_q3_4.o `test -f '$(SW)/ssb/qpipe/qpipe_q3_4.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q3_4.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q3_4.Tpo $(DEPDIR)/qpipe_q3_4.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q3_4.cpp' object='qpipe_q3_4.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q3_4.o `test -f '$(SW)/ssb/qpipe/qpipe_q3_4.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q3_4.cpp

qpipe_q3_4.obj: $(SW)/ssb/qpipe/qpipe_q3_4.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q3_4.obj -MD -MP -MF $(DEPDIR)/qpipe_q3_4.Tpo -c -o qpipe_q3_4.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q3_4.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q3_4.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q3_4.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q3_4.Tpo $(DEPDIR)/qpipe_q3_4.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q3_4.cpp' object='qpipe_q3_4.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q3_4.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q3_4.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q3_4.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q3_4.cpp'; fi`

qpipe_q4_1.o: $(SW)/ssb/qpipe/qpipe_q4_1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q4_1.o -MD -MP -MF $(DEPDIR)/qpipe_q4_1.Tpo -c -o qpipe_q4_1.o `test -f '$(SW)/ssb/qpipe/qpipe_q4_1.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q4_1.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q4_1.Tpo $(DEPDIR)/qpipe_q4_1.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q4_1.cpp' object='qpipe_q4_1.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q4_1.o `test -f '$(SW)/ssb/qpipe/qpipe_q4_1.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q4_1.cpp

qpipe_q4_1.obj: $(SW)/ssb/qpipe/qpipe_q4_1.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q4_1.obj -MD -MP -MF $(DEPDIR)/qpipe_q4_1.Tpo -c -o qpipe_q4_1.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q4_1.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q4_1.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q4_1.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q4_1.Tpo $(DEPDIR)/qpipe_q4_1.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q4_1.cpp' object='qpipe_q4_1.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q4_1.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q4_1.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q4_1.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q4_1.cpp'; fi`

qpipe_q4_2.o: $(SW)/ssb/qpipe/qpipe_q4_2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q4_2.o -MD -MP -MF $(DEPDIR)/qpipe_q4_2.Tpo -c -o qpipe_q4_2.o `test -f '$(SW)/ssb/qpipe/qpipe_q4_2.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q4_2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q4_2.Tpo $(DEPDIR)/qpipe_q4_2.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q4_2.cpp' object='qpipe_q4_2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q4_2.o `test -f '$(SW)/ssb/qpipe/qpipe_q4_2.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q4_2.cpp

qpipe_q4_2.obj: $(SW)/ssb/qpipe/qpipe_q4_2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q4_2.obj -MD -MP -MF $(DEPDIR)/qpipe_q4_2.Tpo -c -o qpipe_q4_2.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q4_2.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q4_2.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q4_2.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q4_2.Tpo $(DEPDIR)/qpipe_q4_2.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q4_2.cpp' object='qpipe_q4_2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q4_2.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q4_2.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q4_2.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q4_2.cpp'; fi`

qpipe_q4_3.o: $(SW)/ssb/qpipe/qpipe_q4_3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q4_3.o -MD -MP -MF $(DEPDIR)/qpipe_q4_3.Tpo -c -o qpipe_q4_3.o `test -f '$(SW)/ssb/qpipe/qpipe_q4_3.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q4_3.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q4_3.Tpo $(DEPDIR)/qpipe_q4_3.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q4_3.cpp' object='qpipe_q4_3.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q4_3.o `test -f '$(SW)/ssb/qpipe/qpipe_q4_3.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_q4_3.cpp

qpipe_q4_3.obj: $(SW)/ssb/qpipe/qpipe_q4_3.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_q4_3.obj -MD -MP -MF $(DEPDIR)/qpipe_q4_3.Tpo -c -o qpipe_q4_3.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q4_3.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q4_3.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q4_3.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_q4_3.Tpo $(DEPDIR)/qpipe_q4_3.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_q4_3.cpp' object='qpipe_q4_3.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_q4_3.obj `if test -f '$(SW)/ssb/qpipe/qpipe_q4_3.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_q4_3.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_q4_3.cpp'; fi`

qpipe_qdate.o: $(SW)/ssb/qpipe/qpipe_qdate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_qdate.o -MD -MP -MF $(DEPDIR)/qpipe_qdate.Tpo -c -o qpipe_qdate.o `test -f '$(SW)/ssb/qpipe/qpipe_qdate.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_qdate.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_qdate.Tpo $(DEPDIR)/qpipe_qdate.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_qdate.cpp' object='qpipe_qdate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_qdate.o `test -f '$(SW)/ssb/qpipe/qpipe_qdate.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_qdate.cpp

qpipe_qdate.obj: $(SW)/ssb/qpipe/qpipe_qdate.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_qdate.obj -MD -MP -MF $(DEPDIR)/qpipe_qdate.Tpo -c -o qpipe_qdate.obj `if test -f '$(SW)/ssb/qpipe/qpipe_qdate.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_qdate.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_qdate.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_qdate.Tpo $(DEPDIR)/qpipe_qdate.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_qdate.cpp' object='qpipe_qdate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_qdate.obj `if test -f '$(SW)/ssb/qpipe/qpipe_qdate.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_qdate.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_qdate.cpp'; fi`

qpipe_qpart.o: $(SW)/ssb/qpipe/qpipe_qpart.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_qpart.o -MD -MP -MF $(DEPDIR)/qpipe_qpart.Tpo -c -o qpipe_qpart.o `test -f '$(SW)/ssb/qpipe/qpipe_qpart.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_qpart.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_qpart.Tpo $(DEPDIR)/qpipe_qpart.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_qpart.cpp' object='qpipe_qpart.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_qpart.o `test -f '$(SW)/ssb/qpipe/qpipe_qpart.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_qpart.cpp

qpipe_qpart.obj: $(SW)/ssb/qpipe/qpipe_qpart.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_qpart.obj -MD -MP -MF $(DEPDIR)/qpipe_qpart.Tpo -c -o qpipe_qpart.obj `if test -f '$(SW)/ssb/qpipe/qpipe_qpart.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_qpart.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_qpart.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_qpart.Tpo $(DEPDIR)/qpipe_qpart.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_qpart.cpp' object='qpipe_qpart.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_qpart.obj `if test -f '$(SW)/ssb/qpipe/qpipe_qpart.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_qpart.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_qpart.cpp'; fi`

qpipe_qsupplier.o: $(SW)/ssb/qpipe/qpipe_qsupplier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_qsupplier.o -MD -MP -MF $(DEPDIR)/qpipe_qsupplier.Tpo -c -o qpipe_qsupplier.o `test -f '$(SW)/ssb/qpipe/qpipe_qsupplier.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_qsupplier.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_qsupplier.Tpo $(DEPDIR)/qpipe_qsupplier.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_qsupplier.cpp' object='qpipe_qsupplier.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_qsupplier.o `test -f '$(SW)/ssb/qpipe/qpipe_qsupplier.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_qsupplier.cpp

qpipe_qsupplier.obj: $(SW)/ssb/qpipe/qpipe_qsupplier.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_qsupplier.obj -MD -MP -MF $(DEPDIR)/qpipe_qsupplier.Tpo -c -o qpipe_qsupplier.obj `if test -f '$(SW)/ssb/qpipe/qpipe_qsupplier.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_qsupplier.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_qsupplier.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_qsupplier.Tpo $(DEPDIR)/qpipe_qsupplier.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_qsupplier.cpp' object='qpipe_qsupplier.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_qsupplier.obj `if test -f '$(SW)/ssb/qpipe/qpipe_qsupplier.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_qsupplier.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_qsupplier.cpp'; fi`

qpipe_qcustomer.o: $(SW)/ssb/qpipe/qpipe_qcustomer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_qcustomer.o -MD -MP -MF $(DEPDIR)/qpipe_qcustomer.Tpo -c -o qpipe_qcustomer.o `test -f '$(SW)/ssb/qpipe/qpipe_qcustomer.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_qcustomer.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_qcustomer.Tpo $(DEPDIR)/qpipe_qcustomer.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_qcustomer.cpp' object='qpipe_qcustomer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_qcustomer.o `test -f '$(SW)/ssb/qpipe/qpipe_qcustomer.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_qcustomer.cpp

qpipe_qcustomer.obj: $(SW)/ssb/qpipe/qpipe_qcustomer.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_qcustomer.obj -MD -MP -MF $(DEPDIR)/qpipe_qcustomer.Tpo -c -o qpipe_qcustomer.obj `if test -f '$(SW)/ssb/qpipe/qpipe_qcustomer.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_qcustomer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_qcustomer.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_qcustomer.Tpo $(DEPDIR)/qpipe_qcustomer.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_qcustomer.cpp' object='qpipe_qcustomer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_qcustomer.obj `if test -f '$(SW)/ssb/qpipe/qpipe_qcustomer.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_qcustomer.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_qcustomer.cpp'; fi`

qpipe_qlineorder.o: $(SW)/ssb/qpipe/qpipe_qlineorder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_qlineorder.o -MD -MP -MF $(DEPDIR)/qpipe_qlineorder.Tpo -c -o qpipe_qlineorder.o `test -f '$(SW)/ssb/qpipe/qpipe_qlineorder.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_qlineorder.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_qlineorder.Tpo $(DEPDIR)/qpipe_qlineorder.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_qlineorder.cpp' object='qpipe_qlineorder.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_qlineorder.o `test -f '$(SW)/ssb/qpipe/qpipe_qlineorder.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_qlineorder.cpp

qpipe_qlineorder.obj: $(SW)/ssb/qpipe/qpipe_qlineorder.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_qlineorder.obj -MD -MP -MF $(DEPDIR)/qpipe_qlineorder.Tpo -c -o qpipe_qlineorder.obj `if test -f '$(SW)/ssb/qpipe/qpipe_qlineorder.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_qlineorder.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_qlineorder.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_qlineorder.Tpo $(DEPDIR)/qpipe_qlineorder.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_qlineorder.cpp' object='qpipe_qlineorder.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_qlineorder.obj `if test -f '$(SW)/ssb/qpipe/qpipe_qlineorder.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_qlineorder.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_qlineorder.cpp'; fi`

qpipe_qtest.o: $(SW)/ssb/qpipe/qpipe_qtest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_qtest.o -MD -MP -MF $(DEPDIR)/qpipe_qtest.Tpo -c -o qpipe_qtest.o `test -f '$(SW)/ssb/qpipe/qpipe_qtest.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_qtest.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_qtest.Tpo $(DEPDIR)/qpipe_qtest.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_qtest.cpp' object='qpipe_qtest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_qtest.o `test -f '$(SW)/ssb/qpipe/qpipe_qtest.cpp' || echo '$(srcdir)/'`$(SW)/ssb/qpipe/qpipe_qtest.cpp

qpipe_qtest.obj: $(SW)/ssb/qpipe/qpipe_qtest.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qpipe_qtest.obj -MD -MP -MF $(DEPDIR)/qpipe_qtest.Tpo -c -o qpipe_qtest.obj `if test -f '$(SW)/ssb/qpipe/qpipe_qtest.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_qtest.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_qtest.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/qpipe_qtest.Tpo $(DEPDIR)/qpipe_qtest.Po
#	$(AM_V_CXX)source='$(SW)/ssb/qpipe/qpipe_qtest.cpp' object='qpipe_qtest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qpipe_qtest.obj `if test -f '$(SW)/ssb/qpipe/qpipe_qtest.cpp'; then $(CYGPATH_W) '$(SW)/ssb/qpipe/qpipe_qtest.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/qpipe/qpipe_qtest.cpp'; fi`

ssb_build.o: $(SW)/ssb/dbgen/ssb_build.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_build.o -MD -MP -MF $(DEPDIR)/ssb_build.Tpo -c -o ssb_build.o `test -f '$(SW)/ssb/dbgen/ssb_build.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_build.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_build.Tpo $(DEPDIR)/ssb_build.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_build.cpp' object='ssb_build.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_build.o `test -f '$(SW)/ssb/dbgen/ssb_build.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_build.cpp

ssb_build.obj: $(SW)/ssb/dbgen/ssb_build.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_build.obj -MD -MP -MF $(DEPDIR)/ssb_build.Tpo -c -o ssb_build.obj `if test -f '$(SW)/ssb/dbgen/ssb_build.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_build.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_build.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_build.Tpo $(DEPDIR)/ssb_build.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_build.cpp' object='ssb_build.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_build.obj `if test -f '$(SW)/ssb/dbgen/ssb_build.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_build.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_build.cpp'; fi`

ssb_driver.o: $(SW)/ssb/dbgen/ssb_driver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_driver.o -MD -MP -MF $(DEPDIR)/ssb_driver.Tpo -c -o ssb_driver.o `test -f '$(SW)/ssb/dbgen/ssb_driver.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_driver.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_driver.Tpo $(DEPDIR)/ssb_driver.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_driver.cpp' object='ssb_driver.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_driver.o `test -f '$(SW)/ssb/dbgen/ssb_driver.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_driver.cpp

ssb_driver.obj: $(SW)/ssb/dbgen/ssb_driver.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_driver.obj -MD -MP -MF $(DEPDIR)/ssb_driver.Tpo -c -o ssb_driver.obj `if test -f '$(SW)/ssb/dbgen/ssb_driver.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_driver.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_driver.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_driver.Tpo $(DEPDIR)/ssb_driver.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_driver.cpp' object='ssb_driver.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_driver.obj `if test -f '$(SW)/ssb/dbgen/ssb_driver.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_driver.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_driver.cpp'; fi`

ssb_bm_utils.o: $(SW)/ssb/dbgen/ssb_bm_utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_bm_utils.o -MD -MP -MF $(DEPDIR)/ssb_bm_utils.Tpo -c -o ssb_bm_utils.o `test -f '$(SW)/ssb/dbgen/ssb_bm_utils.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_bm_utils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_bm_utils.Tpo $(DEPDIR)/ssb_bm_utils.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_bm_utils.cpp' object='ssb_bm_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_bm_utils.o `test -f '$(SW)/ssb/dbgen/ssb_bm_utils.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_bm_utils.cpp

ssb_bm_utils.obj: $(SW)/ssb/dbgen/ssb_bm_utils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_bm_utils.obj -MD -MP -MF $(DEPDIR)/ssb_bm_utils.Tpo -c -o ssb_bm_utils.obj `if test -f '$(SW)/ssb/dbgen/ssb_bm_utils.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_bm_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_bm_utils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_bm_utils.Tpo $(DEPDIR)/ssb_bm_utils.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_bm_utils.cpp' object='ssb_bm_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_bm_utils.obj `if test -f '$(SW)/ssb/dbgen/ssb_bm_utils.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_bm_utils.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_bm_utils.cpp'; fi`

ssb_rnd.o: $(SW)/ssb/dbgen/ssb_rnd.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_rnd.o -MD -MP -MF $(DEPDIR)/ssb_rnd.Tpo -c -o ssb_rnd.o `test -f '$(SW)/ssb/dbgen/ssb_rnd.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_rnd.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_rnd.Tpo $(DEPDIR)/ssb_rnd.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_rnd.cpp' object='ssb_rnd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_rnd.o `test -f '$(SW)/ssb/dbgen/ssb_rnd.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_rnd.cpp

ssb_rnd.obj: $(SW)/ssb/dbgen/ssb_rnd.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_rnd.obj -MD -MP -MF $(DEPDIR)/ssb_rnd.Tpo -c -o ssb_rnd.obj `if test -f '$(SW)/ssb/dbgen/ssb_rnd.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_rnd.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_rnd.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_rnd.Tpo $(DEPDIR)/ssb_rnd.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_rnd.cpp' object='ssb_rnd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_rnd.obj `if test -f '$(SW)/ssb/dbgen/ssb_rnd.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_rnd.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_rnd.cpp'; fi`

ssb_print.o: $(SW)/ssb/dbgen/ssb_print.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_print.o -MD -MP -MF $(DEPDIR)/ssb_print.Tpo -c -o ssb_print.o `test -f '$(SW)/ssb/dbgen/ssb_print.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_print.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_print.Tpo $(DEPDIR)/ssb_print.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_print.cpp' object='ssb_print.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_print.o `test -f '$(SW)/ssb/dbgen/ssb_print.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_print.cpp

ssb_print.obj: $(SW)/ssb/dbgen/ssb_print.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_print.obj -MD -MP -MF $(DEPDIR)/ssb_print.Tpo -c -o ssb_print.obj `if test -f '$(SW)/ssb/dbgen/ssb_print.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_print.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_print.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_print.Tpo $(DEPDIR)/ssb_print.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_print.cpp' object='ssb_print.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_print.obj `if test -f '$(SW)/ssb/dbgen/ssb_print.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_print.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_print.cpp'; fi`

ssb_load_stub.o: $(SW)/ssb/dbgen/ssb_load_stub.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_load_stub.o -MD -MP -MF $(DEPDIR)/ssb_load_stub.Tpo -c -o ssb_load_stub.o `test -f '$(SW)/ssb/dbgen/ssb_load_stub.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_load_stub.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_load_stub.Tpo $(DEPDIR)/ssb_load_stub.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_load_stub.cpp' object='ssb_load_stub.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_load_stub.o `test -f '$(SW)/ssb/dbgen/ssb_load_stub.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_load_stub.cpp

ssb_load_stub.obj: $(SW)/ssb/dbgen/ssb_load_stub.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_load_stub.obj -MD -MP -MF $(DEPDIR)/ssb_load_stub.Tpo -c -o ssb_load_stub.obj `if test -f '$(SW)/ssb/dbgen/ssb_load_stub.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_load_stub.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_load_stub.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_load_stub.Tpo $(DEPDIR)/ssb_load_stub.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_load_stub.cpp' object='ssb_load_stub.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_load_stub.obj `if test -f '$(SW)/ssb/dbgen/ssb_load_stub.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_load_stub.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_load_stub.cpp'; fi`

ssb_bcd2.o: $(SW)/ssb/dbgen/ssb_bcd2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_bcd2.o -MD -MP -MF $(DEPDIR)/ssb_bcd2.Tpo -c -o ssb_bcd2.o `test -f '$(SW)/ssb/dbgen/ssb_bcd2.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_bcd2.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_bcd2.Tpo $(DEPDIR)/ssb_bcd2.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_bcd2.cpp' object='ssb_bcd2.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_bcd2.o `test -f '$(SW)/ssb/dbgen/ssb_bcd2.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_bcd2.cpp

ssb_bcd2.obj: $(SW)/ssb/dbgen/ssb_bcd2.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_bcd2.obj -MD -MP -MF $(DEPDIR)/ssb_bcd2.Tpo -c -o ssb_bcd2.obj `if test -f '$(SW)/ssb/dbgen/ssb_bcd2.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_bcd2.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_bcd2.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_bcd2.Tpo $(DEPDIR)/ssb_bcd2.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_bcd2.cpp' object='ssb_bcd2.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_bcd2.obj `if test -f '$(SW)/ssb/dbgen/ssb_bcd2.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_bcd2.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_bcd2.cpp'; fi`

ssb_speed_seed.o: $(SW)/ssb/dbgen/ssb_speed_seed.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_speed_seed.o -MD -MP -MF $(DEPDIR)/ssb_speed_seed.Tpo -c -o ssb_speed_seed.o `test -f '$(SW)/ssb/dbgen/ssb_speed_seed.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_speed_seed.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_speed_seed.Tpo $(DEPDIR)/ssb_speed_seed.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_speed_seed.cpp' object='ssb_speed_seed.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_speed_seed.o `test -f '$(SW)/ssb/dbgen/ssb_speed_seed.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_speed_seed.cpp

ssb_speed_seed.obj: $(SW)/ssb/dbgen/ssb_speed_seed.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_speed_seed.obj -MD -MP -MF $(DEPDIR)/ssb_speed_seed.Tpo -c -o ssb_speed_seed.obj `if test -f '$(SW)/ssb/dbgen/ssb_speed_seed.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_speed_seed.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_speed_seed.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_speed_seed.Tpo $(DEPDIR)/ssb_speed_seed.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_speed_seed.cpp' object='ssb_speed_seed.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_speed_seed.obj `if test -f '$(SW)/ssb/dbgen/ssb_speed_seed.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_speed_seed.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_speed_seed.cpp'; fi`

ssb_text.o: $(SW)/ssb/dbgen/ssb_text.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_text.o -MD -MP -MF $(DEPDIR)/ssb_text.Tpo -c -o ssb_text.o `test -f '$(SW)/ssb/dbgen/ssb_text.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_text.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_text.Tpo $(DEPDIR)/ssb_text.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_text.cpp' object='ssb_text.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_text.o `test -f '$(SW)/ssb/dbgen/ssb_text.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_text.cpp

ssb_text.obj: $(SW)/ssb/dbgen/ssb_text.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_text.obj -MD -MP -MF $(DEPDIR)/ssb_text.Tpo -c -o ssb_text.obj `if test -f '$(SW)/ssb/dbgen/ssb_text.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_text.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_text.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_text.Tpo $(DEPDIR)/ssb_text.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_text.cpp' object='ssb_text.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_text.obj `if test -f '$(SW)/ssb/dbgen/ssb_text.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_text.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_text.cpp'; fi`

ssb_permute.o: $(SW)/ssb/dbgen/ssb_permute.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_permute.o -MD -MP -MF $(DEPDIR)/ssb_permute.Tpo -c -o ssb_permute.o `test -f '$(SW)/ssb/dbgen/ssb_permute.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_permute.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_permute.Tpo $(DEPDIR)/ssb_permute.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_permute.cpp' object='ssb_permute.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_permute.o `test -f '$(SW)/ssb/dbgen/ssb_permute.cpp' || echo '$(srcdir)/'`$(SW)/ssb/dbgen/ssb_permute.cpp

ssb_permute.obj: $(SW)/ssb/dbgen/ssb_permute.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_permute.obj -MD -MP -MF $(DEPDIR)/ssb_permute.Tpo -c -o ssb_permute.obj `if test -f '$(SW)/ssb/dbgen/ssb_permute.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_permute.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_permute.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_permute.Tpo $(DEPDIR)/ssb_permute.Po
#	$(AM_V_CXX)source='$(SW)/ssb/dbgen/ssb_permute.cpp' object='ssb_permute.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_permute.obj `if test -f '$(SW)/ssb/dbgen/ssb_permute.cpp'; then $(CYGPATH_W) '$(SW)/ssb/dbgen/ssb_permute.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/dbgen/ssb_permute.cpp'; fi`

ssb_random.o: $(SW)/ssb/ssb_random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_random.o -MD -MP -MF $(DEPDIR)/ssb_random.Tpo -c -o ssb_random.o `test -f '$(SW)/ssb/ssb_random.cpp' || echo '$(srcdir)/'`$(SW)/ssb/ssb_random.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_random.Tpo $(DEPDIR)/ssb_random.Po
#	$(AM_V_CXX)source='$(SW)/ssb/ssb_random.cpp' object='ssb_random.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_random.o `test -f '$(SW)/ssb/ssb_random.cpp' || echo '$(srcdir)/'`$(SW)/ssb/ssb_random.cpp

ssb_random.obj: $(SW)/ssb/ssb_random.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_random.obj -MD -MP -MF $(DEPDIR)/ssb_random.Tpo -c -o ssb_random.obj `if test -f '$(SW)/ssb/ssb_random.cpp'; then $(CYGPATH_W) '$(SW)/ssb/ssb_random.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/ssb_random.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_random.Tpo $(DEPDIR)/ssb_random.Po
#	$(AM_V_CXX)source='$(SW)/ssb/ssb_random.cpp' object='ssb_random.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_random.obj `if test -f '$(SW)/ssb/ssb_random.cpp'; then $(CYGPATH_W) '$(SW)/ssb/ssb_random.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/ssb_random.cpp'; fi`

ssb_input.o: $(SW)/ssb/ssb_input.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_input.o -MD -MP -MF $(DEPDIR)/ssb_input.Tpo -c -o ssb_input.o `test -f '$(SW)/ssb/ssb_input.cpp' || echo '$(srcdir)/'`$(SW)/ssb/ssb_input.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_input.Tpo $(DEPDIR)/ssb_input.Po
#	$(AM_V_CXX)source='$(SW)/ssb/ssb_input.cpp' object='ssb_input.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_input.o `test -f '$(SW)/ssb/ssb_input.cpp' || echo '$(srcdir)/'`$(SW)/ssb/ssb_input.cpp

ssb_input.obj: $(SW)/ssb/ssb_input.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_input.obj -MD -MP -MF $(DEPDIR)/ssb_input.Tpo -c -o ssb_input.obj `if test -f '$(SW)/ssb/ssb_input.cpp'; then $(CYGPATH_W) '$(SW)/ssb/ssb_input.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/ssb_input.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_input.Tpo $(DEPDIR)/ssb_input.Po
#	$(AM_V_CXX)source='$(SW)/ssb/ssb_input.cpp' object='ssb_input.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_input.obj `if test -f '$(SW)/ssb/ssb_input.cpp'; then $(CYGPATH_W) '$(SW)/ssb/ssb_input.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/ssb_input.cpp'; fi`

ssb_util.o: $(SW)/ssb/ssb_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_util.o -MD -MP -MF $(DEPDIR)/ssb_util.Tpo -c -o ssb_util.o `test -f '$(SW)/ssb/ssb_util.cpp' || echo '$(srcdir)/'`$(SW)/ssb/ssb_util.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_util.Tpo $(DEPDIR)/ssb_util.Po
#	$(AM_V_CXX)source='$(SW)/ssb/ssb_util.cpp' object='ssb_util.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_util.o `test -f '$(SW)/ssb/ssb_util.cpp' || echo '$(srcdir)/'`$(SW)/ssb/ssb_util.cpp

ssb_util.obj: $(SW)/ssb/ssb_util.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssb_util.obj -MD -MP -MF $(DEPDIR)/ssb_util.Tpo -c -o ssb_util.obj `if test -f '$(SW)/ssb/ssb_util.cpp'; then $(CYGPATH_W) '$(SW)/ssb/ssb_util.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/ssb_util.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/ssb_util.Tpo $(DEPDIR)/ssb_util.Po
#	$(AM_V_CXX)source='$(SW)/ssb/ssb_util.cpp' object='ssb_util.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssb_util.obj `if test -f '$(SW)/ssb/ssb_util.cpp'; then $(CYGPATH_W) '$(SW)/ssb/ssb_util.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/ssb_util.cpp'; fi`

shore_ssb_schema.o: $(SW)/ssb/shore_ssb_schema.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_ssb_schema.o -MD -MP -MF $(DEPDIR)/shore_ssb_schema.Tpo -c -o shore_ssb_schema.o `test -f '$(SW)/ssb/shore_ssb_schema.cpp' || echo '$(srcdir)/'`$(SW)/ssb/shore_ssb_schema.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_ssb_schema.Tpo $(DEPDIR)/shore_ssb_schema.Po
#	$(AM_V_CXX)source='$(SW)/ssb/shore_ssb_schema.cpp' object='shore_ssb_schema.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_ssb_schema.o `test -f '$(SW)/ssb/shore_ssb_schema.cpp' || echo '$(srcdir)/'`$(SW)/ssb/shore_ssb_schema.cpp

shore_ssb_schema.obj: $(SW)/ssb/shore_ssb_schema.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_ssb_schema.obj -MD -MP -MF $(DEPDIR)/shore_ssb_schema.Tpo -c -o shore_ssb_schema.obj `if test -f '$(SW)/ssb/shore_ssb_schema.cpp'; then $(CYGPATH_W) '$(SW)/ssb/shore_ssb_schema.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/shore_ssb_schema.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_ssb_schema.Tpo $(DEPDIR)/shore_ssb_schema.Po
#	$(AM_V_CXX)source='$(SW)/ssb/shore_ssb_schema.cpp' object='shore_ssb_schema.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_ssb_schema.obj `if test -f '$(SW)/ssb/shore_ssb_schema.cpp'; then $(CYGPATH_W) '$(SW)/ssb/shore_ssb_schema.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/shore_ssb_schema.cpp'; fi`

shore_ssb_schema_man.o: $(SW)/ssb/shore_ssb_schema_man.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_ssb_schema_man.o -MD -MP -MF $(DEPDIR)/shore_ssb_schema_man.Tpo -c -o shore_ssb_schema_man.o `test -f '$(SW)/ssb/shore_ssb_schema_man.cpp' || echo '$(srcdir)/'`$(SW)/ssb/shore_ssb_schema_man.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_ssb_schema_man.Tpo $(DEPDIR)/shore_ssb_schema_man.Po
#	$(AM_V_CXX)source='$(SW)/ssb/shore_ssb_schema_man.cpp' object='shore_ssb_schema_man.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_ssb_schema_man.o `test -f '$(SW)/ssb/shore_ssb_schema_man.cpp' || echo '$(srcdir)/'`$(SW)/ssb/shore_ssb_schema_man.cpp

shore_ssb_schema_man.obj: $(SW)/ssb/shore_ssb_schema_man.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_ssb_schema_man.obj -MD -MP -MF $(DEPDIR)/shore_ssb_schema_man.Tpo -c -o shore_ssb_schema_man.obj `if test -f '$(SW)/ssb/shore_ssb_schema_man.cpp'; then $(CYGPATH_W) '$(SW)/ssb/shore_ssb_schema_man.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/shore_ssb_schema_man.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_ssb_schema_man.Tpo $(DEPDIR)/shore_ssb_schema_man.Po
#	$(AM_V_CXX)source='$(SW)/ssb/shore_ssb_schema_man.cpp' object='shore_ssb_schema_man.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_ssb_schema_man.obj `if test -f '$(SW)/ssb/shore_ssb_schema_man.cpp'; then $(CYGPATH_W) '$(SW)/ssb/shore_ssb_schema_man.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/shore_ssb_schema_man.cpp'; fi`

shore_ssb_env.o: $(SW)/ssb/shore_ssb_env.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_ssb_env.o -MD -MP -MF $(DEPDIR)/shore_ssb_env.Tpo -c -o shore_ssb_env.o `test -f '$(SW)/ssb/shore_ssb_env.cpp' || echo '$(srcdir)/'`$(SW)/ssb/shore_ssb_env.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_ssb_env.Tpo $(DEPDIR)/shore_ssb_env.Po
#	$(AM_V_CXX)source='$(SW)/ssb/shore_ssb_env.cpp' object='shore_ssb_env.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_ssb_env.o `test -f '$(SW)/ssb/shore_ssb_env.cpp' || echo '$(srcdir)/'`$(SW)/ssb/shore_ssb_env.cpp

shore_ssb_env.obj: $(SW)/ssb/shore_ssb_env.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_ssb_env.obj -MD -MP -MF $(DEPDIR)/shore_ssb_env.Tpo -c -o shore_ssb_env.obj `if test -f '$(SW)/ssb/shore_ssb_env.cpp'; then $(CYGPATH_W) '$(SW)/ssb/shore_ssb_env.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/shore_ssb_env.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_ssb_env.Tpo $(DEPDIR)/shore_ssb_env.Po
#	$(AM_V_CXX)source='$(SW)/ssb/shore_ssb_env.cpp' object='shore_ssb_env.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_ssb_env.obj `if test -f '$(SW)/ssb/shore_ssb_env.cpp'; then $(CYGPATH_W) '$(SW)/ssb/shore_ssb_env.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/shore_ssb_env.cpp'; fi`

shore_ssb_xct.o: $(SW)/ssb/shore_ssb_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_ssb_xct.o -MD -MP -MF $(DEPDIR)/shore_ssb_xct.Tpo -c -o shore_ssb_xct.o `test -f '$(SW)/ssb/shore_ssb_xct.cpp' || echo '$(srcdir)/'`$(SW)/ssb/shore_ssb_xct.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_ssb_xct.Tpo $(DEPDIR)/shore_ssb_xct.Po
#	$(AM_V_CXX)source='$(SW)/ssb/shore_ssb_xct.cpp' object='shore_ssb_xct.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_ssb_xct.o `test -f '$(SW)/ssb/shore_ssb_xct.cpp' || echo '$(srcdir)/'`$(SW)/ssb/shore_ssb_xct.cpp

shore_ssb_xct.obj: $(SW)/ssb/shore_ssb_xct.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_ssb_xct.obj -MD -MP -MF $(DEPDIR)/shore_ssb_xct.Tpo -c -o shore_ssb_xct.obj `if test -f '$(SW)/ssb/shore_ssb_xct.cpp'; then $(CYGPATH_W) '$(SW)/ssb/shore_ssb_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/shore_ssb_xct.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_ssb_xct.Tpo $(DEPDIR)/shore_ssb_xct.Po
#	$(AM_V_CXX)source='$(SW)/ssb/shore_ssb_xct.cpp' object='shore_ssb_xct.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_ssb_xct.obj `if test -f '$(SW)/ssb/shore_ssb_xct.cpp'; then $(CYGPATH_W) '$(SW)/ssb/shore_ssb_xct.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/shore_ssb_xct.cpp'; fi`

shore_ssb_client.o: $(SW)/ssb/shore_ssb_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_ssb_client.o -MD -MP -MF $(DEPDIR)/shore_ssb_client.Tpo -c -o shore_ssb_client.o `test -f '$(SW)/ssb/shore_ssb_client.cpp' || echo '$(srcdir)/'`$(SW)/ssb/shore_ssb_client.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_ssb_client.Tpo $(DEPDIR)/shore_ssb_client.Po
#	$(AM_V_CXX)source='$(SW)/ssb/shore_ssb_client.cpp' object='shore_ssb_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_ssb_client.o `test -f '$(SW)/ssb/shore_ssb_client.cpp' || echo '$(srcdir)/'`$(SW)/ssb/shore_ssb_client.cpp

shore_ssb_client.obj: $(SW)/ssb/shore_ssb_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT shore_ssb_client.obj -MD -MP -MF $(DEPDIR)/shore_ssb_client.Tpo -c -o shore_ssb_client.obj `if test -f '$(SW)/ssb/shore_ssb_client.cpp'; then $(CYGPATH_W) '$(SW)/ssb/shore_ssb_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/shore_ssb_client.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_ssb_client.Tpo $(DEPDIR)/shore_ssb_client.Po
#	$(AM_V_CXX)source='$(SW)/ssb/shore_ssb_client.cpp' object='shore_ssb_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o shore_ssb_client.obj `if test -f '$(SW)/ssb/shore_ssb_client.cpp'; then $(CYGPATH_W) '$(SW)/ssb/shore_ssb_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(SW)/ssb/shore_ssb_client.cpp'; fi`

shore_kits_client_networked-tbench_client.o: $(top_srcdir)/src/sm/shore/tbench_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(shore_kits_client_networked_CXXFLAGS) $(CXXFLAGS) -MT shore_kits_client_networked-tbench_client.o -MD -MP -MF $(DEPDIR)/shore_kits_client_networked-tbench_client.Tpo -c -o shore_kits_client_networked-tbench_client.o `test -f '$(top_srcdir)/src/sm/shore/tbench_client.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/sm/shore/tbench_client.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_kits_client_networked-tbench_client.Tpo $(DEPDIR)/shore_kits_client_networked-tbench_client.Po
#	$(AM_V_CXX)source='$(top_srcdir)/src/sm/shore/tbench_client.cpp' object='shore_kits_client_networked-tbench_client.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(shore_kits_client_networked_CXXFLAGS) $(CXXFLAGS) -c -o shore_kits_client_networked-tbench_client.o `test -f '$(top_srcdir)/src/sm/shore/tbench_client.cpp' || echo '$(srcdir)/'`$(top_srcdir)/src/sm/shore/tbench_client.cpp

shore_kits_client_networked-tbench_client.obj: $(top_srcdir)/src/sm/shore/tbench_client.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(shore_kits_client_networked_CXXFLAGS) $(CXXFLAGS) -MT shore_kits_client_networked-tbench_client.obj -MD -MP -MF $(DEPDIR)/shore_kits_client_networked-tbench_client.Tpo -c -o shore_kits_client_networked-tbench_client.obj `if test -f '$(top_srcdir)/src/sm/shore/tbench_client.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/sm/shore/tbench_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/sm/shore/tbench_client.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_kits_client_networked-tbench_client.Tpo $(DEPDIR)/shore_kits_client_networked-tbench_client.Po
#	$(AM_V_CXX)source='$(top_srcdir)/src/sm/shore/tbench_client.cpp' object='shore_kits_client_networked-tbench_client.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(shore_kits_client_networked_CXXFLAGS) $(CXXFLAGS) -c -o shore_kits_client_networked-tbench_client.obj `if test -f '$(top_srcdir)/src/sm/shore/tbench_client.cpp'; then $(CYGPATH_W) '$(top_srcdir)/src/sm/shore/tbench_client.cpp'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/src/sm/shore/tbench_client.cpp'; fi`

shore_kits_integrated-shore_kits.o: $(ST)/shore_kits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(shore_kits_integrated_CXXFLAGS) $(CXXFLAGS) -MT shore_kits_integrated-shore_kits.o -MD -MP -MF $(DEPDIR)/shore_kits_integrated-shore_kits.Tpo -c -o shore_kits_integrated-shore_kits.o `test -f '$(ST)/shore_kits.cpp' || echo '$(srcdir)/'`$(ST)/shore_kits.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_kits_integrated-shore_kits.Tpo $(DEPDIR)/shore_kits_integrated-shore_kits.Po
#	$(AM_V_CXX)source='$(ST)/shore_kits.cpp' object='shore_kits_integrated-shore_kits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(shore_kits_integrated_CXXFLAGS) $(CXXFLAGS) -c -o shore_kits_integrated-shore_kits.o `test -f '$(ST)/shore_kits.cpp' || echo '$(srcdir)/'`$(ST)/shore_kits.cpp

shore_kits_integrated-shore_kits.obj: $(ST)/shore_kits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(shore_kits_integrated_CXXFLAGS) $(CXXFLAGS) -MT shore_kits_integrated-shore_kits.obj -MD -MP -MF $(DEPDIR)/shore_kits_integrated-shore_kits.Tpo -c -o shore_kits_integrated-shore_kits.obj `if test -f '$(ST)/shore_kits.cpp'; then $(CYGPATH_W) '$(ST)/shore_kits.cpp'; else $(CYGPATH_W) '$(srcdir)/$(ST)/shore_kits.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_kits_integrated-shore_kits.Tpo $(DEPDIR)/shore_kits_integrated-shore_kits.Po
#	$(AM_V_CXX)source='$(ST)/shore_kits.cpp' object='shore_kits_integrated-shore_kits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(shore_kits_integrated_CXXFLAGS) $(CXXFLAGS) -c -o shore_kits_integrated-shore_kits.obj `if test -f '$(ST)/shore_kits.cpp'; then $(CYGPATH_W) '$(ST)/shore_kits.cpp'; else $(CYGPATH_W) '$(srcdir)/$(ST)/shore_kits.cpp'; fi`

shore_kits_server_networked-shore_kits.o: $(ST)/shore_kits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(shore_kits_server_networked_CXXFLAGS) $(CXXFLAGS) -MT shore_kits_server_networked-shore_kits.o -MD -MP -MF $(DEPDIR)/shore_kits_server_networked-shore_kits.Tpo -c -o shore_kits_server_networked-shore_kits.o `test -f '$(ST)/shore_kits.cpp' || echo '$(srcdir)/'`$(ST)/shore_kits.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_kits_server_networked-shore_kits.Tpo $(DEPDIR)/shore_kits_server_networked-shore_kits.Po
#	$(AM_V_CXX)source='$(ST)/shore_kits.cpp' object='shore_kits_server_networked-shore_kits.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(shore_kits_server_networked_CXXFLAGS) $(CXXFLAGS) -c -o shore_kits_server_networked-shore_kits.o `test -f '$(ST)/shore_kits.cpp' || echo '$(srcdir)/'`$(ST)/shore_kits.cpp

shore_kits_server_networked-shore_kits.obj: $(ST)/shore_kits.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(shore_kits_server_networked_CXXFLAGS) $(CXXFLAGS) -MT shore_kits_server_networked-shore_kits.obj -MD -MP -MF $(DEPDIR)/shore_kits_server_networked-shore_kits.Tpo -c -o shore_kits_server_networked-shore_kits.obj `if test -f '$(ST)/shore_kits.cpp'; then $(CYGPATH_W) '$(ST)/shore_kits.cpp'; else $(CYGPATH_W) '$(srcdir)/$(ST)/shore_kits.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/shore_kits_server_networked-shore_kits.Tpo $(DEPDIR)/shore_kits_server_networked-shore_kits.Po
#	$(AM_V_CXX)source='$(ST)/shore_kits.cpp' object='shore_kits_server_networked-shore_kits.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(shore_kits_server_networked_CXXFLAGS) $(CXXFLAGS) -c -o shore_kits_server_networked-shore_kits.obj `if test -f '$(ST)/shore_kits.cpp'; then $(CYGPATH_W) '$(ST)/shore_kits.cpp'; else $(CYGPATH_W) '$(srcdir)/$(ST)/shore_kits.cpp'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__post_remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-xz: distdir
	tardir=$(distdir) && $(am__tar) | XZ_OPT=$${XZ_OPT--e} xz -c >$(distdir).tar.xz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gzip -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f lib/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-cscope clean-generic \
	clean-libLIBRARIES cscope cscopelist-am ctags ctags-am dist \
	dist-all dist-bzip2 dist-gzip dist-lzip dist-shar dist-tarZ \
	dist-xz dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLIBRARIES install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-libLIBRARIES

.PRECIOUS: Makefile


debug-shore.so: debug-shore.cpp
	$(CXXCOMPILE) -xcode=pic13 -G -o $@ $<

$(CLIENT) : $(top_srcdir)/src/sm/shore/tbench_client.cpp
	$(CXXCOMPILE) -I$(TBENCH_PATH) $^ -c -o $@

debug_%.so: debug_%.cpp
	$(CXXCOMPILE) -g -shared -fPIC -o $@ $<

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
